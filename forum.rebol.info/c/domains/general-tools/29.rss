<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:discourse="http://www.discourse.org/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>General Tools - AltRebol</title>
    <link>https://forum.rebol.info/c/domains/general-tools/29</link>
    <description>Topics in the &#39;General Tools&#39; category Discuss various utilities written in Rebol here that aren&#39;t system tools eg. rebolbot, twitter</description>
    
      <lastBuildDate>Sun, 28 Mar 2021 15:36:34 +0000</lastBuildDate>
      <atom:link href="https://forum.rebol.info/c/domains/general-tools/29.rss" rel="self" type="application/rss+xml" />
        <item>
          <title>Not Scrapping Encapping...now tested on Win/Mac/Linux!</title>
          <dc:creator><![CDATA[hostilefork]]></dc:creator>
          <category>General Tools</category>
          <description><![CDATA[
            <p>We haven't talked a lot about encapping in Ren-C.  But it was at one point written.</p>
<p>I decided to dust it off and bring it up to date.  Then I put together a test using the new Ren-C cross-platform GitHub Action.  Here you can see encapping working on Linux, Windows, and Mac!</p>
<p><a href="https://github.com/metaeducation/ren-c-encap/actions/runs/695309137">https://github.com/metaeducation/ren-c-encap/actions/runs/695309137</a></p>
<p>The tests are pretty simple.</p>
<ul>
<li>
<p><strong><a href="https://github.com/metaeducation/ren-c-encap/blob/71c2c4275f56e62fdef94a243415293e4607d1e3/.github/workflows/test-encap.yml#L102">One of them just gives a spec of a filename and a binary blob to put in the executable</a></strong>.  Then it makes sure that can be extracted back verbatim.</p>
</li>
<li>
<p><strong><a href="https://github.com/metaeducation/ren-c-encap/blob/71c2c4275f56e62fdef94a243415293e4607d1e3/.github/workflows/test-encap.yml#L118">Another adds actual script code, with a %main.reb</a></strong>. This triggers a convention that the de-encapped code will run such a named script.  The test captures the output of running the generated executable and makes sure it printed "Hello Encap".</p>
</li>
</ul>
<h2>Why Not Scrap The Encap?</h2>
<p>I've been trying to get rid of things that aren't a focus...especially when it comes to C extensions and complex build dependencies that aren't worth their cost.</p>
<p>Encap--however--is <em>entirely usermode code</em>.  This means it makes a really good case study for BINARY! parsing.  It's exercising the system on a complex real problem.</p>
<p>I'm hoping that the design of UPARSE can be informed from this, because it really showed some weaknesses of binary parsing.</p>
<h2>It's On A Stronger Foundation Than Rebol2 Encap</h2>
<p>What Rebol2 did was just append data blindly to the end of an executable.  That's not a "legitimate" approach; compared to actually understanding the file format (PE on Windows, ELF on Linux, Mach-O on Mac) and injecting a resource in the approved fashion.</p>
<p>When you just append data, a lot of tools and OS checkers will think your file is just corrupt...because it doesn't match the size in the header.  A program like <code>strip</code> (which usually gets rid of debug symbols and the like) would just discard it.  If you use a tool like a resource editor or an EXE compressor to fiddle with the binary, it could give you an error or throw it away.</p>
<p>(Unfortunately OS X doesn't really have a good way to move around sections of Mach-O executables, so appending is the only choice there.)</p>
<p><em>(More complex tests should demonstrate the encapping surviving various manipulations...such as resource editing and executable compression.  They should also be able to delete and replace the payloads in already-encapped executables.)</em></p>
<h2>A Good Start, But Would Need More Work</h2>
<p>When you encap a folder into the executable, it gets zipped up.  Right now what happens is that the block of unzipped data is put into <strong>system/options/encap</strong> and you have to poke around in that block manually.</p>
<p>It would be nice if your script could see that folder as its "current directory"... kind of like the storage scheme.  cc: <a class="mention" href="/u/rgchris">@rgchris</a>  If the contents of the ZIP are large you might want it to only expand individual files on-demand.  This might suggest being built more generally on a "ZIP file scheme", which can still work if that ZIP file is embedded in a byte range of an EXE file.</p>
<p>The basic invocation of the script is only a placeholder.  It doesn't get command line arguments, for instance.  And since I'm hacking on the module system on another branch, I'm going to get that sorted out before worrying too much about it.</p>
            <p><small>1 post - 1 participant</small></p>
            <p><a href="https://forum.rebol.info/t/not-scrapping-encapping-now-tested-on-win-mac-linux/1576">Read full topic</a></p>
          ]]></description>
          <link>https://forum.rebol.info/t/not-scrapping-encapping-now-tested-on-win-mac-linux/1576</link>
          <pubDate>Sun, 28 Mar 2021 15:36:34 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forum.rebol.info-topic-1576</guid>
          <source url="https://forum.rebol.info/t/not-scrapping-encapping-now-tested-on-win-mac-linux/1576.rss">Not Scrapping Encapping...now tested on Win/Mac/Linux!</source>
        </item>
        <item>
          <title>Setting VSCode Up for Syntax Highlighting</title>
          <dc:creator><![CDATA[hostilefork]]></dc:creator>
          <category>General Tools</category>
          <description><![CDATA[
            <p>I've completely abandoned Visual Studio on Windows, and I'm phasing out Sublime Text use...so I'm thus committing to a VSCode-based workflow.</p>
<p>I wanted to get very basic syntax highlighting...where SET-WORD!s are bold, and comments are a different color.</p>
<p>The shortest path to having something right now seems to be to use the <a href="https://github.com/red/VScode-extension">VSCode extension for Red</a>.  You can install it from the extensions marketplace.  The extensions icon is on the left sidebar, the four little boxes with the box in the upper right hand corner popped out.</p>
<h2>Change the File Associations for Rebol and Red</h2>
<p>It won't by default recognize .rebol, .r, or .reb files.  It thinks .r is R language.</p>
<p>So you have to open a file of with the suffix you want to remap.</p>
<p>With a file of your target type open, do <strong>Control-Shift-P</strong> and type in <strong>"Change Language Mode"</strong> (it will autocomplete).  Run the command, and you will get a drop down menu.  Say it's Red.</p>
<p>You should get the syntax highlighting.</p>
<h2>Customize Any Colors In Your <code>settings.json</code>
</h2>
<p>I've made my opinion known that it's not good to be colorizing the likes of IF and RETURN specially from other WORD!s.  There are not supposed to be keywords, this undermines the message.</p>
<p>So getting rid of the Froot Loops colors is the first order of business.  There's no UI to speak of for configuring the colors in VSCode.  You have to edit a JSON file.</p>
<p>Again with <strong>Control-Shift-P</strong> but type in <strong>"Preferences: Open Settings (JSON)"</strong> (it will autocomplete).  A JSON file will open.</p>
<p>You can customize the environment itself (toolbars, etc.) or you can customize the syntax in the file.  For the syntax in the file, that's done under <strong>editor.tokenColorCustomizations</strong>.  For example:</p>
<pre><code>"editor.tokenColorCustomizations": {
    "comments": {  // gray is more subtle than the garish "green" comment
        "foreground": "#919191",
        "fontStyle": ""
    },
    "strings": {  // darken the shade of red used for strings
        "foreground": "#7c2424",
        "fontStyle": ""
    },
    "textMateRules": [
        {  // make SET-WORD!s bold, dark blue seems a bit subtler than black
            "scope": ["variable.name.red"],
            "settings": {
                "foreground": "#242650",
                "fontStyle": "bold"
            }
        },
        {  // Ren-C has no keywords, don't highlight "Red/System words"
            "scope": ["storage.type.function.reds.red"],
            "settings": {
                "foreground": "#000000",
                "fontStyle": ""
            }
        },
        {  // Ren-C has no keywords, don't highlight "Red words"
            "scope": ["storage.type.function.red"],
            "settings": {
                "foreground": "#000000",
                "fontStyle": ""
            }
        },
        {  // So long as ending in ! still makes words, don't colorize
            "scope": ["storage.type.cs.red"],  // word ending in !
            "settings": {
                "foreground": "#000000",
                "fontStyle": ""
            }
        },
		{  // Can't figure out how to recolor tags, it ignores this
            "scope": ["meta.tag.red"],
            "settings": {
                "foreground": "#22492e",
                "fontStyle": ""
            }
        },
        {  // Tag color doesn't seem to come from HTML
            "scope": ["entity.name.tag.html"],
            "settings": {
                "foreground": "#4a9ec5"
            }
        }
    ]
</code></pre>
<p>Autocompletion will hint you about things like comments and strings that are basic across all grammars.  But if you're wondering how to know the list of things like <strong>variable.name.red</strong> to colorize just for Redbols, you have to look at this file from the extension:</p>
<p><a href="https://github.com/red/VScode-extension/blob/master/syntaxes/Red.tmLanguage.json">syntaxes/Red.tmLanguage.json</a></p>
<p>Poke around there for anything that says <strong>name:</strong>, e.g. <code>"name": "variable.name.red"</code> to find the possibilities.</p>
<p>I can't figure out how to override the color of tags, however.  I can make them bold, but it seems to be getting the color from somewhere else.</p>
<h2>Hacking On The Rules</h2>
<p>If one wants to hack on the syntax highlighting file, it's stored locally under the .vscode directory of your home directory, e.g.</p>
<pre><code>\.vscode\extensions\red-auto.red-0.4.3\syntaxes\Red.tmLanguage.json
</code></pre>
<p>Edits to that file seem to be picked up on restart.  You can back up a local copy, or just restore it from the web if you mess it up.</p>
<p>I'm not that big of a fan of syntax highlighting, so it probably won't be me who makes a fork of this extension to have support for things like COMMA! or SYM-XXX!  But, who knows, maybe I'll get inspired sometime.</p>
            <p><small>1 post - 1 participant</small></p>
            <p><a href="https://forum.rebol.info/t/setting-vscode-up-for-syntax-highlighting/1559">Read full topic</a></p>
          ]]></description>
          <link>https://forum.rebol.info/t/setting-vscode-up-for-syntax-highlighting/1559</link>
          <pubDate>Sun, 14 Mar 2021 08:36:01 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forum.rebol.info-topic-1559</guid>
          <source url="https://forum.rebol.info/t/setting-vscode-up-for-syntax-highlighting/1559.rss">Setting VSCode Up for Syntax Highlighting</source>
        </item>
        <item>
          <title>Flickelectric utilities</title>
          <dc:creator><![CDATA[gchiu]]></dc:creator>
          <category>General Tools</category>
          <description><![CDATA[
            <p>This topic to discuss or provide help for the utilities here</p>
<p><a href="https://github.com/gchiu/Rebol3/blob/master/scripts/rebol-flick-api.reb" rel="nofollow noopener">Rebol Flick API</a></p>
<p>and</p>
<p><a href="https://github.com/gchiu/Rebol3/blob/master/scripts/rebol-flick-forecast-api.reb" rel="nofollow noopener">Rebol Flick Price Forecast</a></p>
<p>which are related to using Flickelectric's API to grab current spot price and forecast pricing.</p>
            <p><small>2 posts - 1 participant</small></p>
            <p><a href="https://forum.rebol.info/t/flickelectric-utilities/207">Read full topic</a></p>
          ]]></description>
          <link>https://forum.rebol.info/t/flickelectric-utilities/207</link>
          <pubDate>Sat, 15 Jul 2017 21:00:13 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forum.rebol.info-topic-207</guid>
          <source url="https://forum.rebol.info/t/flickelectric-utilities/207.rss">Flickelectric utilities</source>
        </item>
        <item>
          <title>Rebolbot - topic to discuss enhancements and bugs</title>
          <dc:creator><![CDATA[gchiu]]></dc:creator>
          <category>General Tools</category>
          <description><![CDATA[
            <p>One of the annoyances that has plagued <a href="http://chat.stackoverflow.com/rooms/291/rebol" rel="nofollow noopener">SO chat</a> has been the appearance in the feeds of incorrectly categorized feed items, eg <span class="hashtag">#REbol</span> and <em>red</em> tags from newbie questions on SO.</p>
<p>I just noticed an undocumented API feature which has been exploited <a href="https://stackapps.com/questions/7442/ro-chat-message-delete-option" rel="nofollow noopener">here</a> which seems to say that if a room owner posts</p>
<pre><code>/messages/$messageid delete
</code></pre>
<p>within 2 minutes, even feed items can be deleted.</p>
<p>I think the simplest way is to do something like this</p>
<pre><code>@rebolbot delete feed
</code></pre>
<p>and it deletes the last feed item within 2 minutes of the current time.</p>
            <p><small>2 posts - 1 participant</small></p>
            <p><a href="https://forum.rebol.info/t/rebolbot-topic-to-discuss-enhancements-and-bugs/142">Read full topic</a></p>
          ]]></description>
          <link>https://forum.rebol.info/t/rebolbot-topic-to-discuss-enhancements-and-bugs/142</link>
          <pubDate>Mon, 12 Jun 2017 21:37:48 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forum.rebol.info-topic-142</guid>
          <source url="https://forum.rebol.info/t/rebolbot-topic-to-discuss-enhancements-and-bugs/142.rss">Rebolbot - topic to discuss enhancements and bugs</source>
        </item>
        <item>
          <title>About the General Tools category</title>
          <dc:creator><![CDATA[gchiu]]></dc:creator>
          <category>General Tools</category>
          <description><![CDATA[
            <p>Discuss various utilities written in Rebol here that aren't system tools eg. rebolbot, twitter</p>
            <p><small>1 post - 1 participant</small></p>
            <p><a href="https://forum.rebol.info/t/about-the-general-tools-category/141">Read full topic</a></p>
          ]]></description>
          <link>https://forum.rebol.info/t/about-the-general-tools-category/141</link>
          <pubDate>Mon, 12 Jun 2017 21:30:48 +0000</pubDate>
          <discourse:topicPinned>Yes</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forum.rebol.info-topic-141</guid>
          <source url="https://forum.rebol.info/t/about-the-general-tools-category/141.rss">About the General Tools category</source>
        </item>
  </channel>
</rss>
