<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:discourse="http://www.discourse.org/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Wish List - AltRebol</title>
    <link>https://forum.rebol.info/c/community/wish-list/28</link>
    <description>Topics in the &#39;Wish List&#39; category A place to make your wishes known: you can ask for language features, libraries, extensions, etc.</description>
    
      <lastBuildDate>Wed, 22 Aug 2018 04:04:54 +0000</lastBuildDate>
      <atom:link href="https://forum.rebol.info/c/community/wish-list/28.rss" rel="self" type="application/rss+xml" />
        <item>
          <title>Operator meaning &quot;complete fully&quot;...what is that?</title>
          <dc:creator><![CDATA[hostilefork]]></dc:creator>
          <category>Wish List</category>
          <description><![CDATA[
            <p>I'd like something to help notice when an operation did not consume all its input.</p>
<p>Something along the lines of:</p>
<pre><code>&gt;&gt; (completely-consume add 1 2)
== 3

&gt;&gt; (completely-consume add 1 2 3)
** Error: ADD did not completely consume args, leftover is [3]
</code></pre>
<p>I've wanted such a thing for a while, but it's especially pressing now.  The API is getting more solid, so it's tempting to use it for doing things like calling from C the "System helpers written in Rebol"... a.k.a. what's in SYS.  But the existing mechanisms for doing that have a "no leftovers" flag, something like:</p>
<pre><code>DECLARE_LOCAL (result);
bool leftovers = false;
if (Apply_Throws(result, add_function, leftovers, arg1, arg2, arg3, rebEND))
    fail (Error_No_Catch_For_Throw(result));
</code></pre>
<p>I don't want such flags in the API.  It seems useful to have a generic operator.</p>
<p>In the past, I've tried "double-bar", because it would allow for a more forceful kind of separation than just a single bar.  Unfortunately, it has to be prefix...as there's no way at present in usermode to know the left hand side completed exactly one expression:</p>
<pre><code>&gt;&gt; (x: add 1 2 "foo" | print x)
3

&gt;&gt; (|| x: add 1 2 "foo" || print x)
** Error: extra stuff (["foo"])
</code></pre>
<p>I'm wondering if the idea of <code>||</code> is sound, but just needs a new piece of machinery.  Because this seems superior for the intent:</p>
<pre><code>&gt;&gt; (x: add 1 2 "foo" || print x)
** Error: extra stuff ["foo"]

&gt;&gt; (x: add 1 2 || "foo" print x)
** Error: extra stuff [print x]

&gt;&gt; (x: add 1 2 || print x "foo")
** Error: extra stuff ["foo"]

&gt;&gt; (x: add 1 2 || print x)
3
</code></pre>
<p>So what do people think?  Better ideas for the prefix operator?  Time for a new parameter marker, e.g. <code>&lt;solo&gt;</code>?</p>
<p>This <em>might</em> be something that could be a use for the debated "variadic left enfix".  Maybe it could be possible to take a value from the left, and then tell you if you were at the "tail" or not...while not actually being able to give you more than one value?  They're lost to history, but it wouldn't be hard to keep just a bit's worth of memory for this purpose.</p>
<p>As an API client it would be up to you to put it at the beginning or the end (or both?)</p>
<pre><code>REBVAL *v = rebRun("||", whatever, ..., ...);

REBVAL *v = rebRun("whatever", ..., ..., "||");</code></pre>
            <p><small>1 post - 1 participant</small></p>
            <p><a href="https://forum.rebol.info/t/operator-meaning-complete-fully-what-is-that/792">Read full topic</a></p>
          ]]></description>
          <link>https://forum.rebol.info/t/operator-meaning-complete-fully-what-is-that/792</link>
          <pubDate>Wed, 22 Aug 2018 04:04:54 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forum.rebol.info-topic-792</guid>
          <source url="https://forum.rebol.info/t/operator-meaning-complete-fully-what-is-that/792.rss">Operator meaning &quot;complete fully&quot;...what is that?</source>
        </item>
        <item>
          <title>User-Mode Library Access</title>
          <dc:creator><![CDATA[rgchris]]></dc:creator>
          <category>Wish List</category>
          <description><![CDATA[
            <p><strong>Is the ability to load external libraries considered a fundamental part of the core functionality of the language?</strong></p>
<p>On the face of it, I would suggest soâ€”off the top of my head I could cite SQLite and ImageMagick as desirable components that, though they could be incorporated in other ways such as CALL, would more efficiently be utilized through the library interface.</p>
<p>The promise in Rebol 3 Alpha and Rebol 2 (specific implementation differing slightly) was thus:</p>
<pre><code class="lang-auto">sqlite: make library! %libsqlite3.dylib
sqlite-version: make-routine sqlite "sqlite3_libversion" [
    return: [string]
]
sqlite-version
</code></pre>
<p>This is nominally possible in Ren-C through the FFI extension (I say nominally as I have not been able to confirm this first hand and understand this is still a less than ideal approach).</p>
<p><strong>Or are extensions the prescribed way to achieve integration?</strong></p>
<p>Which would open up a whole bunch of other questions.</p>
            <p><small>6 posts - 3 participants</small></p>
            <p><a href="https://forum.rebol.info/t/user-mode-library-access/470">Read full topic</a></p>
          ]]></description>
          <link>https://forum.rebol.info/t/user-mode-library-access/470</link>
          <pubDate>Mon, 15 Jan 2018 21:37:51 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forum.rebol.info-topic-470</guid>
          <source url="https://forum.rebol.info/t/user-mode-library-access/470.rss">User-Mode Library Access</source>
        </item>
        <item>
          <title>About the Wish List category</title>
          <dc:creator><![CDATA[asampal]]></dc:creator>
          <category>Wish List</category>
          <description><![CDATA[
            <p>A place to make your wishes known: you can ask for language features, libraries, extensions, etc.</p>
<p>If there's to be some consideration behind the request (e.g. money), post instead in <a href="/c/community/jobs">Community/Jobs</a>.</p>
            <p><small>1 post - 1 participant</small></p>
            <p><a href="https://forum.rebol.info/t/about-the-wish-list-category/137">Read full topic</a></p>
          ]]></description>
          <link>https://forum.rebol.info/t/about-the-wish-list-category/137</link>
          <pubDate>Sat, 10 Jun 2017 16:25:02 +0000</pubDate>
          <discourse:topicPinned>Yes</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forum.rebol.info-topic-137</guid>
          <source url="https://forum.rebol.info/t/about-the-wish-list-category/137.rss">About the Wish List category</source>
        </item>
  </channel>
</rss>
