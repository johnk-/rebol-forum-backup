<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Question about binding in parse</title>
    <link>https://forum.rebol.info/t/question-about-binding-in-parse/461</link>
    <description>    parse x: copy/deep [(-hi-there- 1 2 3 (hello 2 3 4))] function-rule

rule definition:

    function-rule: [
       into [
          set code word! (probe code)
          any [integer! | function-rule]
       ]
    ]

-hi-there-
hello

    function-rule: [
       into [
          set code word!
          any [integer! | function-rule]
          (probe code)
       ]
    ]
hello
hello

The idea is to have code be like it is in the first rule definition. It makes sense as to why this is happening because code is being overshadowed by the inner definition of code so that the probe call is calling the same word twice. Is there a way to set up context-sensitive words that look the same yet print out different results, I know there is in other cases but what about this case?</description>
    
    <lastBuildDate>Fri, 12 Jan 2018 07:50:58 +0000</lastBuildDate>
    <category>Parsing</category>
    <atom:link href="https://forum.rebol.info/t/question-about-binding-in-parse/461.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Question about binding in parse</title>
        <dc:creator><![CDATA[Brett]]></dc:creator>
        <description><![CDATA[
            <p>You could potentially force a context solution but in effect I expect you'll end up with a stack anyway (of contexts) and as <a class="mention" href="/u/rgchris">@rgchris</a> points out doing so is likely to be costly and tricky (at least right now).</p>
<p>Parse <a href="https://forum.rebol.info/t/separating-parse-rules-across-contexts/313/4">does need something more</a> to make life easier in this regard.</p>
          <p><a href="https://forum.rebol.info/t/question-about-binding-in-parse/461/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/question-about-binding-in-parse/461/4</link>
        <pubDate>Fri, 12 Jan 2018 07:50:58 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-461-4</guid>
        <source url="https://forum.rebol.info/t/question-about-binding-in-parse/461.rss">Question about binding in parse</source>
      </item>
      <item>
        <title>Question about binding in parse</title>
        <dc:creator><![CDATA[JacobGood1]]></dc:creator>
        <description><![CDATA[
            <p>Yea, that is pretty much the way they introduce a stack is by parsing parentheses. So I guess it is a bad idea to think about context in this situation?</p>
          <p><a href="https://forum.rebol.info/t/question-about-binding-in-parse/461/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/question-about-binding-in-parse/461/3</link>
        <pubDate>Wed, 10 Jan 2018 23:25:01 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-461-3</guid>
        <source url="https://forum.rebol.info/t/question-about-binding-in-parse/461.rss">Question about binding in parse</source>
      </item>
      <item>
        <title>Question about binding in parse</title>
        <dc:creator><![CDATA[rgchris]]></dc:creator>
        <description><![CDATA[
            <p>The more common method of handling this is to use a stack:</p>
<pre><code class="lang-auto">stack: []
function-rule: [
   into [
      set code word! (append stack code)
      any [integer! | function-rule]
      (probe take stack)
   ]
]
</code></pre>
<p>To do this by manipulating context I believe would be tricky and likely costly.</p>
          <p><a href="https://forum.rebol.info/t/question-about-binding-in-parse/461/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/question-about-binding-in-parse/461/2</link>
        <pubDate>Wed, 10 Jan 2018 23:21:54 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-461-2</guid>
        <source url="https://forum.rebol.info/t/question-about-binding-in-parse/461.rss">Question about binding in parse</source>
      </item>
      <item>
        <title>Question about binding in parse</title>
        <dc:creator><![CDATA[JacobGood1]]></dc:creator>
        <description><![CDATA[
            <pre><code>parse x: copy/deep [(-hi-there- 1 2 3 (hello 2 3 4))] function-rule
</code></pre>
<p>rule definition:</p>
<pre><code>function-rule: [
   into [
      set code word! (probe code)
      any [integer! | function-rule]
   ]
]
</code></pre>
<p>-hi-there-<br>
hello</p>
<pre><code>function-rule: [
   into [
      set code word!
      any [integer! | function-rule]
      (probe code)
   ]
]
</code></pre>
<p>hello<br>
hello</p>
<p>The idea is to have code be like it is in the first rule definition. It makes sense as to why this is happening because code is being overshadowed by the inner definition of code so that the probe call is calling the same word twice. Is there a way to set up context-sensitive words that look the same yet print out different results, I know there is in other cases but what about this case?</p>
          <p><a href="https://forum.rebol.info/t/question-about-binding-in-parse/461/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/question-about-binding-in-parse/461/1</link>
        <pubDate>Wed, 10 Jan 2018 23:07:20 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-461-1</guid>
        <source url="https://forum.rebol.info/t/question-about-binding-in-parse/461.rss">Question about binding in parse</source>
      </item>
  </channel>
</rss>
