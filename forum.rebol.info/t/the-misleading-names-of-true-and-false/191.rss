<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>The misleading names of TRUE? and FALSE?</title>
    <link>https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191</link>
    <description>One might think that the way to test a value for being logic truth is TRUE?...though that&#39;s misleading, since all values except LOGIC! false and BLANK! are true.  Similarly, FALSE? doesn&#39;t just test for LOGIC! false... it also says blank is false.

*(Note: If you&#39;ve found yourself writing things like `all [logic? foo | foo]`...that is more succinctly done as `foo = true`.)*

In any case, TRUE? is a somewhat rare operation...because usually testing for &quot;truthiness&quot; is implicit in conditional operations.  You don&#39;t have to say **if true? foo [...]** or **case [true? foo [...] ...]**.  The only real time you would use it would be to coerce things to a logic, which is covered by TO-LOGIC in modern Ren-C (which doesn&#39;t consider 0 to be false as Rebol2 did.   I managed to [get this change accepted](https://github.com/rebol/rebol/pull/181) to Github rebol/rebol back around the time of the open sourcing.)

@earl argued that TRUE? was somewhat more readable, but a lot has changed with chaining.  Getting a logic result from FIND is now done with FIND? instead of `TRUE? FIND` (or `FOUND? FIND`), and other routines have XXX? forms that are chained into TO-LOGIC.  So I believe this swings the balance to where having a misleading operation that people might be tempted to use to mean **= true** or **= false** is simply not worth it.

So anywhere you would have used FALSE? instead use NOT.  Anywhere you would have used TRUE? instead use TO-LOGIC,.  And we kill these misleading operations.

---

It appears that Red has gone with the change in TO as well, so the same approach should work for them:

    --== Red 0.6.2 ==-- 
    Type HELP for starting information. 

    &gt;&gt; to-logic 0
    == true
    &gt;&gt; to-logic 1
    == true
    &gt;&gt; to-logic none
    == false
    &gt;&gt; to-logic false
    == false
    &gt;&gt; to-logic true
    == true</description>
    
    <lastBuildDate>Sun, 08 Apr 2018 11:00:29 +0000</lastBuildDate>
    <category>Naming</category>
    <atom:link href="https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>The misleading names of TRUE? and FALSE?</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>With all these improvements in the language, perhaps there will be a need for a helper program that transforms old Rebol 2 code towards Ren-C style code. This way helping porting old R2 scripts to the new environment.<br>
I even can imagine a tool in an IDE that signals old-school programmers at work and suggesting them the new way of handling code.</p>
          <p><a href="https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191/10</link>
        <pubDate>Sun, 08 Apr 2018 11:00:29 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-191-10</guid>
        <source url="https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191.rss">The misleading names of TRUE? and FALSE?</source>
      </item>
      <item>
        <title>The misleading names of TRUE? and FALSE?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>As time passed, I came to like DID...a lot.  Enough that I wrote an article about it:</p>
<p><a href="http://blog.hostilefork.com/did-programming-opposite-of-not/" class="onebox" target="_blank" rel="nofollow noopener">http://blog.hostilefork.com/did-programming-opposite-of-not/</a></p>
<p>The <code>?</code> <a href="https://trello.com/c/lz9DgFAO/146-chain-for-making-a-pipeline-of-functions-that-process-each-others-results" rel="nofollow noopener">CHAIN functions</a> into TRUTHY? that were once introduced in Ren-C are all axed, so no more <code>all?</code> / <code>find?</code> and friends.   Use <code>did all</code> or <code>did find</code>, etc.  It's nice to not have the clutter of a symbol, or to have to push the shift key...so it looks much smoother.  And it's good to not be generating a bunch of unnecessary function variations for every possible logic-returning thing...though they were a good test of CHAIN while they lasted.</p>
<p>Note that for conditionals, replacing the "was a branch taken" forms should not use DID directly, as their protocol is to test for "valueness" and not "truthiness".  So what was once called <code>if?</code> or <code>switch?</code> should actually look like <code>not void? switch</code> or <code>any-value? if</code>.  Someday VALUE? will get retaken, and you can just write <code>value? if</code>, which is relatively succinct.</p>
<p>If someone can think of a word that tests for value-ness or void-ness which doesn't have a ? in it, that would be interesting:</p>
<pre><code>branch-taken: FOO case [
     condition1 [...]
     condition2 [...]
     condition3 [...]
     ;-- otherwise, no match, only way CASE returns void
]

assert [logic? branch-taken]
</code></pre>
<p>Solve for FOO, where FOO != 'VALUE?  <img src="//forum.rebol.info/images/emoji/twitter/slight_smile.png?v=7" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p><code>TOOK</code>, perhaps?  Conflates a bit with TAKE.  <code>RAN</code>, maybe?</p>
<p>In any case, I think VALUE? is decent, and helps clarify what the protocol actually is.</p>
          <p><a href="https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191/9</link>
        <pubDate>Tue, 03 Apr 2018 17:15:54 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-191-9</guid>
        <source url="https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191.rss">The misleading names of TRUE? and FALSE?</source>
      </item>
      <item>
        <title>The misleading names of TRUE? and FALSE?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="7" data-topic="191">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="//forum.rebol.info/user_avatar/forum.rebol.info/mark-hi/40/212_2.png" class="avatar"> Mark-hi:</div>
<blockquote>
<p>Anyway, I just wanted to say I really like DID. No other language has it, and Rebol needs to claim all of those first.</p>
</blockquote>
</aside>
<p>I was just writing a test in the test dialect because I came across a <a href="https://github.com/rebol/rebol-issues/issues/1822" rel="nofollow noopener">stray resolved bug in rebol-issues</a> while searching for remarks on DIFFERENCE of DATE!.</p>
<p>At first I almost made a mistake and wrote:</p>
<pre><code>[
    #1822
    all [
        12:00 = difference 13/1/2011/12:00 13/1/2011
        12:00 = difference 13/1/2011/12:00 13/1/2011/0:0
    ]
]
</code></pre>
<p>For rigor, tests require all results to be actual logic true or false, not merely "truthy" or "falsey".  In this case it wouldn't be that bad since it returns a true on success, and a BLANK! on failure, which would fail anyway.  But I went to change it to use the ALL? form:</p>
<pre><code>[
    #1822
    all? [
        12:00 = difference 13/1/2011/12:00 13/1/2011
        12:00 = difference 13/1/2011/12:00 13/1/2011/0:0
    ]
]
</code></pre>
<p>Then I thought about how annoying all these specializations are... ALL?, FIND?, etc. and contrasted the appearance with:</p>
<pre><code>[
    #1822
    did all [
        12:00 = difference 13/1/2011/12:00 13/1/2011
        12:00 = difference 13/1/2011/12:00 13/1/2011/0:0
    ]
]
</code></pre>
<p>And I thought it felt more solid than ALL?.  Where TO-LOGIC, TO LOGIC! and TRUTHY? look bad, it kind of works.  So maybe we should take it seriously?  Try it out for a while...contemplate it.</p>
          <p><a href="https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191/8</link>
        <pubDate>Wed, 24 Jan 2018 01:54:11 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-191-8</guid>
        <source url="https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191.rss">The misleading names of TRUE? and FALSE?</source>
      </item>
      <item>
        <title>The misleading names of TRUE? and FALSE?</title>
        <dc:creator><![CDATA[Mark-hi]]></dc:creator>
        <description><![CDATA[
            <p>(Weird, it seems I had to create <em>another</em> account to reply here from work.)</p>
<p>Anyway, I just wanted to say I really like DID. No other language has it, and Rebol needs to claim all of those first.</p>
          <p><a href="https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191/7</link>
        <pubDate>Fri, 19 Jan 2018 15:11:57 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-191-7</guid>
        <source url="https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191.rss">The misleading names of TRUE? and FALSE?</source>
      </item>
      <item>
        <title>The misleading names of TRUE? and FALSE?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>Questions for what the truth-biased complement of NOT are have <a href="http://www.sciforums.com/threads/what-is-the-opposite-word-of-not.64611/" rel="nofollow noopener">puzzled many</a>.  Some might say it's SO.  <em>("is not!"..."is so!")</em></p>
<p>In chat we came up with a name that had slipped my memory.  Because I've thought to myself "hm, what was that idea we had as another name for TO-LOGIC or TRUTHY?" a couple of times, I dug it up.  <a href="https://chat.stackoverflow.com/transcript/message/40473373#40473373" rel="nofollow noopener">It was <strong>DID</strong></a>.</p>
<p>It does appear to work for some things.  For instance, it's better than FOUND? (which isn't necessary if you're just using it in an IF condition and not storing in a variable, but people did it anyway):</p>
<pre><code>if found? find [a b c] d [...]

if did find [a b c] d [...]
</code></pre>
<p>It works even combined with negatives:</p>
<pre><code>if did not find [a b c] d [...]
</code></pre>
<p>As a generalized "anti-NOT" it is far from perfect, but its current competition is TRUTHY?, so any imperfections in the concept might be worth glossing over:</p>
<pre><code>logic-value: not any [a b c]
logic-value: did any [a b c]
</code></pre>
<p>Hmmm.  Perhaps WAS might work in some other situations.  <strong>was any [...]</strong>, <strong>was all [...]</strong></p>
<p>Saying <code>did 1</code> =&gt; true and <code>not 1</code> =&gt; false is a bit weird, given that no function ran.  But then again, isn't <code>not "abc"</code> =&gt; false pretty weird too if you sit down and analyze it?  Isn't the only reason that seems "coherent" (assuming it does) because you're used to it?</p>
<p>Sometimes you have to kind of set a trend in programming.  Someone came up with FOR and other constructs, we're just looking at something people <a href="https://stackoverflow.com/questions/10307281/c-operator-is-a-two-not" rel="nofollow noopener">haven't seemingly done much better than <code>not not</code></a> for.</p>
<p>Anyway, we said we were going to try TRUTHY? and FALSEY? as an experiment to see how we liked them.  They've been around and I probably like them less than I used to.</p>
<p>I think I'd rather go with DID, NOT, and TO-LOGIC.</p>
          <p><a href="https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191/6</link>
        <pubDate>Fri, 19 Jan 2018 07:54:21 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-191-6</guid>
        <source url="https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191.rss">The misleading names of TRUE? and FALSE?</source>
      </item>
      <item>
        <title>The misleading names of TRUE? and FALSE?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="4" data-topic="191">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="//forum.rebol.info/user_avatar/forum.rebol.info/rgchris/40/14_2.png" class="avatar"> rgchris:</div>
<blockquote>
<p>I do agree that TRUE?/FALSE? are misleading and should go.</p>
</blockquote>
</aside>
<p>Yup.  Seen too many incorrect uses.</p>
<p>So the deed is done...I went ahead and added:</p>
<pre><code>truthy?: :to-logic
falsey?: :not
</code></pre>
<p>Because I guess for anyone who uses them, that's what they wanted.  If people gravitate toward them, they can stay.  If not, we'll get rid of one or both.</p>
          <p><a href="https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191/5</link>
        <pubDate>Thu, 06 Jul 2017 22:02:43 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-191-5</guid>
        <source url="https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191.rss">The misleading names of TRUE? and FALSE?</source>
      </item>
      <item>
        <title>The misleading names of TRUE? and FALSE?</title>
        <dc:creator><![CDATA[rgchris]]></dc:creator>
        <description><![CDATA[
            <p>Fair enough on NOT vs. FALSEY? I do agree that TRUE?/FALSE? are misleading and should go.</p>
<blockquote>
<p>"Truthiness is the belief or assertion that a particular statement is true based on the intuition or perceptions of some individual or individuals, without regard to evidence, logic, intellectual examination, or facts."</p>
</blockquote>
          <p><a href="https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191/4</link>
        <pubDate>Thu, 06 Jul 2017 20:52:34 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-191-4</guid>
        <source url="https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191.rss">The misleading names of TRUE? and FALSE?</source>
      </item>
      <item>
        <title>The misleading names of TRUE? and FALSE?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>My point above is that we need to look at the real examples.  You wouldn't write <code>if to logic! some-result [...]</code> because you could say <code>if some-result [...]</code> and your "truthy" is intrinsic.</p>
<p>The cases you would use TO-LOGIC are going to read more sensibly:</p>
<pre><code>some-logic-var: to-logic select [a b c] d
</code></pre>
<p>Because you really are doing essentially a cast.  But again, there is now SELECT? etc.</p>
<p>I'm not opposed to <code>truthy?</code> existing; one might argue that just using <code>not</code> would be better than going as far as <code>falsey?</code>.  I just don't see places where TO-LOGIC doesn't appear to fit better into the scheme.  e.g.</p>
<pre><code>all?: redescribe [
    {Shortcut AND, ignores voids. Unlike plain ALL, forces result to LOGIC!}
](
    chain [:all | :to-value | :truthy?]
)
</code></pre>
<p>Doesn't it actually make more sense with:</p>
<pre><code>all?: redescribe [
    {Shortcut AND, ignores voids. Unlike plain ALL, forces result to LOGIC!}
](
    chain [:all | :to-value | :to-logic]
)
</code></pre>
<p>But short answer being, I don't have a problem with <code>truthy?</code> if you think you would use it, and would even add <code>falsey?</code>.  I just think it's time for TRUE? and FALSE? to go.</p>
          <p><a href="https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191/3</link>
        <pubDate>Thu, 06 Jul 2017 20:49:18 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-191-3</guid>
        <source url="https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191.rss">The misleading names of TRUE? and FALSE?</source>
      </item>
      <item>
        <title>The misleading names of TRUE? and FALSE?</title>
        <dc:creator><![CDATA[rgchris]]></dc:creator>
        <description><![CDATA[
            <p>Are you advocating use of a TO-* function? <img src="//forum.rebol.info/images/emoji/twitter/slight_smile.png?v=7" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>With apologies to certain late-night comedians, could also introduce TRUTHY? (with corresponding FALSEY?)</p>
<p>My only objection to using TO-LOGIC is that the intent is not as clear as with TRUE? (or TRUTHY?).</p>
<pre><code>if to logic! some-result [...]
</code></pre>
<p>Is a little less direct in meaning than:</p>
<pre><code>if truthy? some-result [...]
</code></pre>
<p>It also kind of reads: <em>if this is converted to logic, then ...</em></p>
          <p><a href="https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191/2</link>
        <pubDate>Thu, 06 Jul 2017 20:43:55 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-191-2</guid>
        <source url="https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191.rss">The misleading names of TRUE? and FALSE?</source>
      </item>
      <item>
        <title>The misleading names of TRUE? and FALSE?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>One might think that the way to test a value for being logic truth is TRUE?...though that's misleading, since all values except LOGIC! false and BLANK! are true.  Similarly, FALSE? doesn't just test for LOGIC! false... it also says blank is false.</p>
<p><em>(Note: If you've found yourself writing things like <code>all [logic? foo | foo]</code>...that is more succinctly done as <code>foo = true</code>.)</em></p>
<p>In any case, TRUE? is a somewhat rare operation...because usually testing for "truthiness" is implicit in conditional operations.  You don't have to say <strong>if true? foo [...]</strong> or <strong>case [true? foo [...] ...]</strong>.  The only real time you would use it would be to coerce things to a logic, which is covered by TO-LOGIC in modern Ren-C (which doesn't consider 0 to be false as Rebol2 did.   I managed to <a href="https://github.com/rebol/rebol/pull/181" rel="nofollow noopener">get this change accepted</a> to Github rebol/rebol back around the time of the open sourcing.)</p>
<p><span class="mention">@earl</span> argued that TRUE? was somewhat more readable, but a lot has changed with chaining.  Getting a logic result from FIND is now done with FIND? instead of <code>TRUE? FIND</code> (or <code>FOUND? FIND</code>), and other routines have XXX? forms that are chained into TO-LOGIC.  So I believe this swings the balance to where having a misleading operation that people might be tempted to use to mean <strong>= true</strong> or <strong>= false</strong> is simply not worth it.</p>
<p>So anywhere you would have used FALSE? instead use NOT.  Anywhere you would have used TRUE? instead use TO-LOGIC,.  And we kill these misleading operations.</p>
<hr>
<p>It appears that Red has gone with the change in TO as well, so the same approach should work for them:</p>
<pre><code>--== Red 0.6.2 ==-- 
Type HELP for starting information. 

&gt;&gt; to-logic 0
== true
&gt;&gt; to-logic 1
== true
&gt;&gt; to-logic none
== false
&gt;&gt; to-logic false
== false
&gt;&gt; to-logic true
== true</code></pre>
          <p><a href="https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191/1</link>
        <pubDate>Thu, 06 Jul 2017 20:23:36 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-191-1</guid>
        <source url="https://forum.rebol.info/t/the-misleading-names-of-true-and-false/191.rss">The misleading names of TRUE? and FALSE?</source>
      </item>
  </channel>
</rss>
