<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Should Built-In Constructs Leverage More &quot;Reserved Words&quot;?</title>
    <link>https://forum.rebol.info/t/should-built-in-constructs-leverage-more-reserved-words/1622</link>
    <description>I was looking at an old proposal for using **|** in PRINT to mean &quot;newline&quot;.

    print [
        &quot;DESCRIPTION:&quot; |
        tab, any [description, &quot;(undocumented)&quot;] |
        tab (uppercase word) {is} classification #&quot;.&quot;
    ]

That was taken off the table due to **|** being used as an expression barrier.  But COMMA! is doing a much better job of that, so it&#39;s back in the realm of possibility.

And I was also looking at some API code in ODBC like this:

    rebValue(
        &quot;switch @&quot;, ARG(encoding), &quot;[&quot;,
            &quot;&#39;utf-8 [&quot;, rebI(CHAR_COL_UTF8), &quot;]&quot;,
            &quot;&#39;ucs-2 [&quot;, rebI(CHAR_COL_UTF16), &quot;]&quot;,
            &quot;&#39;utf-16 [&quot;, rebI(CHAR_COL_UTF16), &quot;]&quot;,
            &quot;&#39;latin-1 [&quot;, rebI(CHAR_COL_LATIN1), &quot;]&quot;,
        &quot;] else [&quot;,
            &quot;fail {ENCODING must be UTF-8, UCS-2, UTF-16, or LATIN-1}&quot;
        &quot;]&quot;
    );

It made me wonder what if SWITCH let you use something like, say, fat arrow:

    rebValue(
        &quot;switch @&quot;, ARG(encoding), &quot;[&quot;,
            &quot;&#39;utf-8 =&gt;&quot;, rebI(CHAR_COL_UTF8),
            &quot;&#39;ucs-2 =&gt;&quot;, rebI(CHAR_COL_UTF16),
            &quot;&#39;utf-16 =&gt;&quot;, rebI(CHAR_COL_UTF16),
            &quot;&#39;latin-1 =&gt;&quot;, rebI(CHAR_COL_LATIN1),
        &quot;] else [&quot;,
            &quot;fail {ENCODING must be UTF-8, UCS-2, UTF-16, or LATIN-1}&quot;
        &quot;]&quot;
    );

## Are Core Constructs Underplaying Their Hand?

I&#39;ve felt for a long time that PRINT is not strong enough, because it hasn&#39;t taken things like TAG! away to signal format changes (colors?).

And when I look at the difference we get in SWITCH above, esp in the API, it makes me wonder if something like that is appropriate.  Though maybe the @ symbol is better to be pushed further to this purpose as a legal branch type...

...anyway the details aren&#39;t important.  I guess I&#39;m asking more *&quot;could we make a better language if we were more willing to steal words&quot;*.

Do we need distinctions...such as &quot;core switch&quot; and &quot;rich switch&quot;, and then let people pick which they use?  Where they&#39;re expected to hack up the switch to customize it to their tastes?

(Just wanted to put this out there, as I&#39;m deleting a note about | as newline in PRINT on the Trello.)</description>
    
    <lastBuildDate>Sat, 05 Jun 2021 16:47:03 +0000</lastBuildDate>
    <category>Philosophy</category>
    <atom:link href="https://forum.rebol.info/t/should-built-in-constructs-leverage-more-reserved-words/1622.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Should Built-In Constructs Leverage More &quot;Reserved Words&quot;?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>I was looking at an old proposal for using <strong>|</strong> in PRINT to mean "newline".</p>
<pre><code>print [
    "DESCRIPTION:" |
    tab, any [description, "(undocumented)"] |
    tab (uppercase word) {is} classification #"."
]
</code></pre>
<p>That was taken off the table due to <strong>|</strong> being used as an expression barrier.  But COMMA! is doing a much better job of that, so it's back in the realm of possibility.</p>
<p>And I was also looking at some API code in ODBC like this:</p>
<pre><code>rebValue(
    "switch @", ARG(encoding), "[",
        "'utf-8 [", rebI(CHAR_COL_UTF8), "]",
        "'ucs-2 [", rebI(CHAR_COL_UTF16), "]",
        "'utf-16 [", rebI(CHAR_COL_UTF16), "]",
        "'latin-1 [", rebI(CHAR_COL_LATIN1), "]",
    "] else [",
        "fail {ENCODING must be UTF-8, UCS-2, UTF-16, or LATIN-1}"
    "]"
);
</code></pre>
<p>It made me wonder what if SWITCH let you use something like, say, fat arrow:</p>
<pre><code>rebValue(
    "switch @", ARG(encoding), "[",
        "'utf-8 =&gt;", rebI(CHAR_COL_UTF8),
        "'ucs-2 =&gt;", rebI(CHAR_COL_UTF16),
        "'utf-16 =&gt;", rebI(CHAR_COL_UTF16),
        "'latin-1 =&gt;", rebI(CHAR_COL_LATIN1),
    "] else [",
        "fail {ENCODING must be UTF-8, UCS-2, UTF-16, or LATIN-1}"
    "]"
);
</code></pre>
<h2>Are Core Constructs Underplaying Their Hand?</h2>
<p>I've felt for a long time that PRINT is not strong enough, because it hasn't taken things like TAG! away to signal format changes (colors?).</p>
<p>And when I look at the difference we get in SWITCH above, esp in the API, it makes me wonder if something like that is appropriate.  Though maybe the @ symbol is better to be pushed further to this purpose as a legal branch type...</p>
<p>...anyway the details aren't important.  I guess I'm asking more <em>"could we make a better language if we were more willing to steal words"</em>.</p>
<p>Do we need distinctions...such as "core switch" and "rich switch", and then let people pick which they use?  Where they're expected to hack up the switch to customize it to their tastes?</p>
<p>(Just wanted to put this out there, as I'm deleting a note about | as newline in PRINT on the Trello.)</p>
          <p><a href="https://forum.rebol.info/t/should-built-in-constructs-leverage-more-reserved-words/1622/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/should-built-in-constructs-leverage-more-reserved-words/1622/1</link>
        <pubDate>Sat, 05 Jun 2021 16:47:03 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1622-1</guid>
        <source url="https://forum.rebol.info/t/should-built-in-constructs-leverage-more-reserved-words/1622.rss">Should Built-In Constructs Leverage More &quot;Reserved Words&quot;?</source>
      </item>
  </channel>
</rss>
