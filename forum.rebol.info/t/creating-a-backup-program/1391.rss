<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Creating a Backup program</title>
    <link>https://forum.rebol.info/t/creating-a-backup-program/1391</link>
    <description>This should be an &#39;easy&#39; project.
Creating a little piece of backup software using Ren-C.

What should it be able to do?

- Connect to a remote backup location
- Use a password that will be stored encrypted after it is provided (or not stored and required for every use)

- Know which folders to backup
- Only backup the files that were changes since last backup on the chosen backup volume
- Preferably have an incremental backup

This is not primarily meant for backing up sourcecode, because git and other svn systems are taking that role already. It is for other documentation and stuff that hangs around on your computer and would be nice to recover after machine loss or transfer to a new one.</description>
    
    <lastBuildDate>Sat, 07 Nov 2020 12:21:14 +0000</lastBuildDate>
    <category>System Tools</category>
    <atom:link href="https://forum.rebol.info/t/creating-a-backup-program/1391.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Creating a Backup program</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>I'm in favor of seeing the tackling of small tools that have existing solutions in other languages, to show a new way of doing them.</p>
<p>The focus should be on making that tool as small and clear as possible, while having a surprising amount of features.</p>
<p>A dialect which let you intermix specification with triggers of some added code to run along with the backup would be an good example.  So that you're not just making wildcarded-file lists...but also if there is a GROUP! in the middle of that file list (or whatever) then it knows to run code it if anything in the block of patterns has changed.</p>
<p>Maybe what's in the GROUP! generates some kind of "derived file", e.g. if the files it detects a change in is source code, it might trigger a compilation process and add the resulting executable to the backup.</p>
<hr>
<p>Doing a good job of something like this is best if you have a streaming hash mechanism.  So you can get a fingerprint of files without loading them all into memory at once.</p>
<p>Fortunately we have all of our hashes (and ciphers) in streaming form now.  Unfortunately, we have no exposure of that streaming implementation yet.</p>
<p>So for the moment, you'll have to read files in memory to hash them.  But that will improve in the Someday(tm) time period.</p>
<hr>
<p>The place to really focus on here isn't the wire protocols or encryption kind of stuff, but the code itself.  How do the new patterns of expressions in PATH! and TUPLE! help you?</p>
<p>What do these backup dialect rules like, and how do you cross the domain of a normal script that happens to have a backup portion in it?  Like what if I want my program to leverage backing up or mirroring folders as part of the implementation...tracking differences in its own files?</p>
<p>If you can design a dialect that is useful there as well as an independent tool, then that is best.</p>
          <p><a href="https://forum.rebol.info/t/creating-a-backup-program/1391/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/creating-a-backup-program/1391/2</link>
        <pubDate>Sat, 07 Nov 2020 12:21:14 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1391-2</guid>
        <source url="https://forum.rebol.info/t/creating-a-backup-program/1391.rss">Creating a Backup program</source>
      </item>
      <item>
        <title>Creating a Backup program</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>This should be an 'easy' project.<br>
Creating a little piece of backup software using Ren-C.</p>
<p>What should it be able to do?</p>
<ul>
<li>
<p>Connect to a remote backup location</p>
</li>
<li>
<p>Use a password that will be stored encrypted after it is provided (or not stored and required for every use)</p>
</li>
<li>
<p>Know which folders to backup</p>
</li>
<li>
<p>Only backup the files that were changes since last backup on the chosen backup volume</p>
</li>
<li>
<p>Preferably have an incremental backup</p>
</li>
</ul>
<p>This is not primarily meant for backing up sourcecode, because git and other svn systems are taking that role already. It is for other documentation and stuff that hangs around on your computer and would be nice to recover after machine loss or transfer to a new one.</p>
          <p><a href="https://forum.rebol.info/t/creating-a-backup-program/1391/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/creating-a-backup-program/1391/1</link>
        <pubDate>Sat, 07 Nov 2020 10:16:08 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1391-1</guid>
        <source url="https://forum.rebol.info/t/creating-a-backup-program/1391.rss">Creating a Backup program</source>
      </item>
  </channel>
</rss>
