<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Skip over a unit of DO work: the DON&#39;T operator?</title>
    <link>https://forum.rebol.info/t/skip-over-a-unit-of-do-work-the-dont-operator/401</link>
    <description>&gt; **Update:** *(discovered very shortly after this was written)*... the situations in which it does work aren&#39;t interesting...basically all the situations you&#39;d want it for are the ones where it *can&#39;t* work.  Short-circuiting doesn&#39;t know the shape, e.g. **if action? :x and x [a] [b] [c] [...]** doesn&#39;t know what the arity of X would have been if it *were* an action.
&gt;
&gt; So it doesn&#39;t know how much to skip.  Ultimately AND and OR had to use BLOCK!s and GROUP!s on the right hand side to short-circuit, but the result is pretty good anyway.  So it was a good line of thinking, but DON&#39;T was accurately named.  DON&#39;T do it!
&gt;
&gt; Original post preserved below, namely because Discourse won&#39;t let you delete topics...

---

Imagine an operator called DON&#39;T, that works something like this:

     &gt;&gt; code: [print 10 + 20 print &quot;Hello&quot;]

     &gt;&gt; code: don&#39;t code
     ;-- outputs nothing.  heh heh

     &gt;&gt; probe code
     [print &quot;Hello&quot;]

Basically, it&#39;s the anti-DO/NEXT.  It shifts the evaluator into neutral, and skips one unit of work.

This could likely power short-circuiting forms of AND, OR, NOR...

    and: enfix function [left [any-value!] right [any-value! &lt;...&gt;]]
        if not left [
            don&#39;t right
            false
        ] else [
            truthy? take right
        ]
    ]

Since failure will be common, one might make it conditional to provide more informative errors.  So you get the new position returned or a BLANK! if it got an expression it couldn&#39;t calculate through the arity of without running it.

    and: enfix function [left [any-value!] right [any-value! &lt;...&gt;]]
        case [
            left [truthy? take right]
            don&#39;t right [false]
        ]
        fail [
            &quot;Right hand side of AND can&#39;t be variadic expression.&quot; |
            &quot;Use ALL [...] or put the variadic expression in a GROUP!&quot; |
            &quot;(or if non-short circuit and prefix is okay, use BOTH?)&quot;
        ]
    ]

And if that isn&#39;t cool I don&#39;t know what is.  :stuck_out_tongue:

If one wanted to be perfectly parallel to DO then it would actually be something like DON&#39;T/NEXT, but then there wouldn&#39;t be a whole lot of point to DON&#39;T-ing without a /NEXT, besides I guess checking it for if it is well-formed.  But it wouldn&#39;t be 100%, because this won&#39;t work for any variadics in the block.  (They&#39;d have to be put in GROUP!s.)</description>
    
    <lastBuildDate>Sat, 04 Aug 2018 21:38:18 +0000</lastBuildDate>
    <category>Naming</category>
    <atom:link href="https://forum.rebol.info/t/skip-over-a-unit-of-do-work-the-dont-operator/401.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Skip over a unit of DO work: the DON&#39;T operator?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <blockquote>
<p><strong>Update:</strong> <em>(discovered very shortly after this was written)</em>... the situations in which it does work aren't interesting...basically all the situations you'd want it for are the ones where it <em>can't</em> work.  Short-circuiting doesn't know the shape, e.g. <strong>if action? :x and x [a] [b] [c] [...]</strong> doesn't know what the arity of X would have been if it <em>were</em> an action.</p>
<p>So it doesn't know how much to skip.  Ultimately AND and OR had to use BLOCK!s and GROUP!s on the right hand side to short-circuit, but the result is pretty good anyway.  So it was a good line of thinking, but DON'T was accurately named.  DON'T do it!</p>
<p>Original post preserved below, namely because Discourse won't let you delete topics...</p>
</blockquote>
<hr>
<p>Imagine an operator called DON'T, that works something like this:</p>
<pre><code> &gt;&gt; code: [print 10 + 20 print "Hello"]

 &gt;&gt; code: don't code
 ;-- outputs nothing.  heh heh

 &gt;&gt; probe code
 [print "Hello"]
</code></pre>
<p>Basically, it's the anti-DO/NEXT.  It shifts the evaluator into neutral, and skips one unit of work.</p>
<p>This could likely power short-circuiting forms of AND, OR, NOR...</p>
<pre><code>and: enfix function [left [any-value!] right [any-value! &lt;...&gt;]]
    if not left [
        don't right
        false
    ] else [
        truthy? take right
    ]
]
</code></pre>
<p>Since failure will be common, one might make it conditional to provide more informative errors.  So you get the new position returned or a BLANK! if it got an expression it couldn't calculate through the arity of without running it.</p>
<pre><code>and: enfix function [left [any-value!] right [any-value! &lt;...&gt;]]
    case [
        left [truthy? take right]
        don't right [false]
    ]
    fail [
        "Right hand side of AND can't be variadic expression." |
        "Use ALL [...] or put the variadic expression in a GROUP!" |
        "(or if non-short circuit and prefix is okay, use BOTH?)"
    ]
]
</code></pre>
<p>And if that isn't cool I don't know what is.  <img src="//forum.rebol.info/images/emoji/twitter/stuck_out_tongue.png?v=7" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<p>If one wanted to be perfectly parallel to DO then it would actually be something like DON'T/NEXT, but then there wouldn't be a whole lot of point to DON'T-ing without a /NEXT, besides I guess checking it for if it is well-formed.  But it wouldn't be 100%, because this won't work for any variadics in the block.  (They'd have to be put in GROUP!s.)</p>
          <p><a href="https://forum.rebol.info/t/skip-over-a-unit-of-do-work-the-dont-operator/401/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/skip-over-a-unit-of-do-work-the-dont-operator/401/1</link>
        <pubDate>Fri, 01 Dec 2017 11:50:24 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-401-1</guid>
        <source url="https://forum.rebol.info/t/skip-over-a-unit-of-do-work-the-dont-operator/401.rss">Skip over a unit of DO work: the DON&#39;T operator?</source>
      </item>
  </channel>
</rss>
