<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Rethinking the Console Prompt: &gt;&gt; to ? or .\</title>
    <link>https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489</link>
    <description>Rebol has historically used `&gt;&gt;` for the console prompt.  It also inside the language uses `&lt;&lt;` and `&gt;&gt;` for bit shift operators.  Red continues this, and it looks a little weird, e.g.

    &gt;&gt; 2 &gt;&gt; 1
    == 1

The use of some form of **&gt;** is fairly common as prompts, going back to **`C:\&gt;`** and before.  It&#39;s rather common to just find the single character `&gt;` used.  Yet even in those languages, they use &gt; to mean &quot;greater than&quot;.  So the idea of prompts themselves pursuing an out-of-band nature is apparently kind of a big thought.

@BrianOtto [asked about what I thought of using `&lt;&lt;` and `&gt;&gt;` for comments](https://forum.rebol.info/t/should-followed-by-space-be-used-for-comments/275/26), and I wanted to mention that I think they are **&quot;high value&quot; asymmetric symbol patterns**.  There&#39;s a relatively scarce space of things that can act as short, clean-looking, asymmetric delimiters.

So I think they&#39;re wasted as bit shift operators, when more suboptimal choices are being made.  e.g. Red has chosen `#()` to express literal MAP!s, a parallel to JSON&#39;s [associative arrays](https://www.xul.fr/javascript/associative.php).

    &gt;&gt; x: #(a: 10 b: 20)
    == #(
        a: 10
        b: 20
    )

    &gt;&gt; x/b
    == 20

*(On a related note, @rgchris and I believe that if anything, construction syntax should have been the one to take **#()** instead of **#[]**, in the sense that it&#39;s not creating a BLOCK! of anything...rather it&#39;s splicing (kind of like evaluating) an element inline.)*

But what if we tried to make the prompt something that didn&#39;t have meaning in the language?  Let&#39;s imagine for a moment that we take that pesky lone **?** I&#39;ve been looking for a &quot;higher&quot; purpose for *(after all, `h` is a fine console shortcut for help, if one is really too lazy to type `help`)*.  And then the complementary **!**.  Let&#39;s imagine their higher purpose is *no purpose* in the language by default, and use them for console prompts...then take `&lt;&lt;` and `&gt;&gt;` for MAP! literals:

    ? x: &lt;&lt;a: 10 b: 20&gt;&gt;
    ! &lt;&lt;
        a: 10
        b: 20
    &gt;&gt;

    ? x/b
    ! 20

Contrast with Red&#39;s scheme: when you think about looking at a long list of keys and values...and you get to the end and see just a **`)`**, you have to scan up to know if you&#39;re looking at a GROUP! or not.  But here you&#39;d be better off.  I think there&#39;s a lot more need for something like this than bit shifting.

**?** is just an idea.  Because I&#39;d been looking for a good purpose for **?** and **!**.  I kind of thought it might be fun if they were postfix, so it could be like asking a question of something...but that never came off very well.  I thought it might be okay for **? foo** being shorthand of **set? &#39;foo** but while it saves some typing it makes the code look unnatural...and that&#39;s not what Rebol is about.

*(Same arguments about why we&#39;ve scrapped the definition **!: :not**... it&#39;s ugly to say **! condition** when you could say **not condition**, and there&#39;s no reason to support it.)*

So with lone ? and ! being enigmatic, thin and unpopular... the idea of not giving them any default meaning has some amount of appeal...and then they&#39;d be something you could visually filter out.  But on that note, regarding [recent discussions of backslash](https://forum.rebol.info/t/should-followed-by-space-be-used-for-comments/275/23) of it not being used *at all*...what if that property were exploited for fun and profit?

    Welcome to Rebol.  For more information please type in the commands below:

      HELP    - For starting information
      ABOUT   - Information about your Rebol
      CHANGES - What&#39;s different about this version

    .\

---

    .\ comment &quot;I actually like dot backslash as the prompt&quot;

    &gt;\ comment &quot;other symbols combine noisily, lone backslash too minimal&quot;

    breakpoint(3) .\ repeat x 2 [print [x &quot;stuff to the left&quot;]]
    1 stuff to the left
    2 stuff to the left

    .\ &lt;&lt;a: &quot;doesn&#39;t&quot; b: &quot;clash&quot; c: &quot;with chevrons!&quot;&gt;&gt; 

    .\ 1 + 2
    =\ 3

    .\ all [
    [\  1 &lt; 2 (
    (\  3)
    [\  ]
    =\ 3

    .\ quote ==
    =\ ==

    .\ quote &gt;&gt;
    =\ &gt;&gt;

*(Colorization would of course help somewhat.)*

The interesting thing about what I&#39;ve done above--including a little cleverness with the multiline--is that you wind up with a transcript that can be pasted into a console session and filtered to run the commands again.  Using some of the same rationale as when discussing the backslash being filtered by a &quot;dumb&quot; parser, it doesn&#39;t take a lot of intelligence for the console to figure out what your commands were distinct from the output.

Then again, the convention could say that if it sees a backslash it ignores up to one character on the right of it, possibly a space...which might be more conventional-seeming.

    breakpoint(3) \&gt; repeat x 2 [print [x &quot;stuff to the left&quot;]]
    1 stuff to the left
    2 stuff to the left

    \. &lt;&lt;a: &quot;doesn&#39;t&quot; b: &quot;clash&quot; c: &quot;with chevrons!&quot;&gt;&gt; 

    \. 1 + 2
    \= 3

    \. all [
    \[  1 &lt; 2 (
    \(  3)
    \[  ]
    \= 3

Maybe even some kind of hybrid?  :-/

    .\ 1 + 2
    \= 3

Anyway I&#39;m not going to say MAP! literals are the final ante on what might be done with the very valuable `&lt;&lt;` and `&gt;&gt;`, but it&#39;s more in league with the level I think it should be at.  And if it&#39;s that prominent (or moreso) in the language, then being able to avoid its use in the console prompts has an advantage...so I think these contemplations are worthwhile.</description>
    
    <lastBuildDate>Wed, 24 Jan 2018 03:24:15 +0000</lastBuildDate>
    <category>Console</category>
    <atom:link href="https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Rethinking the Console Prompt: &gt;&gt; to ? or .\</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>A post was split to a new topic: <a href="/t/console-transcript-replay-i-want-it/1711">Console Transcript Replay: I Want It</a></p>
          <p><a href="https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489/6</link>
        <pubDate>Sat, 11 Sep 2021 16:30:51 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-489-6</guid>
        <source url="https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489.rss">Rethinking the Console Prompt: &gt;&gt; to ? or .\</source>
      </item>
      <item>
        <title>Rethinking the Console Prompt: &gt;&gt; to ? or .\</title>
        <dc:creator><![CDATA[Brett]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="8" data-topic="489">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="//forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>Given that single : is not legal as a WORD!, I don't know how bad it would be if single ? and single ! were also removed from the pool for the sake of giving this more rigor.</p>
</blockquote>
</aside>
<p>Not sure that's a good enough trade and why there has to be a trade. I want as many tokens/symbols available as possible - even if they have no useful meaning in DO they may be highly useful for other dialects that may need specialised notations.  If a dialect wants to use a single <strong>:</strong> may be it should be able to even if DO wants to reject it.</p>
<aside class="quote no-group" data-post="8" data-topic="489">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="//forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>it would be hard to tell if a bracket starting a line is the result of some mold of a block from code executing or a line continuation, too many heuristics would be needed.</p>
</blockquote>
</aside>
<p>Ah yes. Ok.</p>
<p>Then I'd wonder whether the sender prepare the transcript in a reasonable format since it may (probably not now) may have more information.</p>
          <p><a href="https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489/9</link>
        <pubDate>Wed, 24 Jan 2018 03:24:15 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-489-9</guid>
        <source url="https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489.rss">Rethinking the Console Prompt: &gt;&gt; to ? or .\</source>
      </item>
      <item>
        <title>Rethinking the Console Prompt: &gt;&gt; to ? or .\</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="7" data-topic="489">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="//forum.rebol.info/user_avatar/forum.rebol.info/brett/40/177_2.png" class="avatar"> Brett:</div>
<blockquote>
<p>I'm not enamoured with .\ as a console prompt.</p>
</blockquote>
</aside>
<p>I started out by suggesting the lone question mark and exclamation point, and if you consider it being called out with color then that could make it stand out more.  If the question mark was stepped in by one space, it could provide room for the concept I give above of leaving room for markup, and be intermixed with backslash:</p>
<pre><code>  ? all [
 [\     1 &lt; 2 {
 {\     hello} (
 (\     3) 
 ]\ ]
  ! 3
</code></pre>
<p>Given that single <strong><code>:</code></strong> is not legal as a WORD!, I don't know how bad it would be if single <strong>?</strong> and single <strong>!</strong> were also removed from the pool for the sake of giving this more rigor.  It would never be perfect as you could always have PRINT statements that chose to output the line patterns to fool you, though.  But the point here is about how <strong>==</strong> won't mean equality and <strong>&gt;&gt;</strong> may have a significant and common meaning, calling their roles into question.</p>
<p>Anyway, as I said in the beginning a colorful or bold ? seems like a noble application of the ? I was thinking of.</p>
<blockquote>
<p>But first, is there another way to achieve a similar result? E.g. if the console or api can recognise a transcript due to the speed of delivery and the use of "^/do " then can it not pre-process it into code?</p>
</blockquote>
<p>Some version of it could be done.</p>
<p>The console would have to be more stylized than it is now, at minimum like the backslashes above.  If you just have something like how line continuations are today, it would be hard to tell if a bracket starting a line is the result of some <strong>mold</strong> of a block from code executing or a line continuation, too many heuristics would be needed.</p>
          <p><a href="https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489/8</link>
        <pubDate>Wed, 24 Jan 2018 02:14:38 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-489-8</guid>
        <source url="https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489.rss">Rethinking the Console Prompt: &gt;&gt; to ? or .\</source>
      </item>
      <item>
        <title>Rethinking the Console Prompt: &gt;&gt; to ? or .\</title>
        <dc:creator><![CDATA[Brett]]></dc:creator>
        <description><![CDATA[
            <p>It's a powerful point that <strong>&lt;&lt;</strong> and <strong>&gt;&gt;</strong> are asymmetric symbol patterns that when paired can deliver high value to syntax.</p>
<p>I'm not enamoured with .\ as a console prompt.</p>
<p>Apart from the variadic appearance "do " might be an interesting console prompt.</p>
<p>The transcript idea is very interesting.  But first, is there another way to achieve a similar result?  E.g. if the console or api can recognise a transcript due to the speed of delivery and the use of "^/do " then can it not pre-process it into code?  May be it could even mark up the embedded results so that they can be automatically compared with the current session. Just wondering.</p>
          <p><a href="https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489/7</link>
        <pubDate>Wed, 24 Jan 2018 02:00:26 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-489-7</guid>
        <source url="https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489.rss">Rethinking the Console Prompt: &gt;&gt; to ? or .\</source>
      </item>
      <item>
        <title>Rethinking the Console Prompt: &gt;&gt; to ? or .\</title>
        <dc:creator><![CDATA[BlackATTR]]></dc:creator>
        <description><![CDATA[
            <p>I agree with Graham on this. Since it's configurable, leave it as is and allow the user to change/configure in their settings.</p>
          <p><a href="https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489/5</link>
        <pubDate>Tue, 23 Jan 2018 21:03:28 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-489-5</guid>
        <source url="https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489.rss">Rethinking the Console Prompt: &gt;&gt; to ? or .\</source>
      </item>
      <item>
        <title>Rethinking the Console Prompt: &gt;&gt; to ? or .\</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="2" data-topic="489" data-full="true">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="//forum.rebol.info/user_avatar/forum.rebol.info/blackattr/40/204_2.png" class="avatar"> BlackATTR:</div>
<blockquote>
<p>Can this be easily configurable?</p>
</blockquote>
</aside>
<p>It is already configurable.  You can override just the prompt itself:</p>
<pre><code>system/console/prompt: ".\ "
</code></pre>
<p>Or if you want you can override the code that uses that prompt text currently:</p>
<pre><code>system/console/print-prompt: does [
    loop 3 [write-stdout "&gt;"]
]
</code></pre>
<p><em>(Long term you probably will want to think twice about overriding more than just the prompt symbol, because the prompt function will do more than just print it...it will gather information about the debug state/etc. and combine that in.  You probably would rather ADAPT the existing prompt function if there's just some code you want to run each time a prompt shows up.)</em></p>
<p>And I'm rather proud of the error tolerance, which is done via some amount of cleverness in how the C code interacts with the usermode console code via its protocol:</p>
<pre><code>&gt;&gt; system/console/print-prompt: does [fail "check this out"]

** Error: check this out
** Where: fail print-prompt _
** Near: [fail "check this out" ~~]

** UNSAFE ERROR ENCOUNTERED IN CONSOLE SKIN
** REVERTING TO DEFAULT SKIN

&gt;&gt;
</code></pre>
<p>For more on console skinning, see: <a href="https://github.com/r3n/reboldocs/wiki/User-and-Console" rel="nofollow noopener">@draegtun's writeup</a></p>
<p>So people using old tutorials could not only put the system into Rebol2/Red mode, it could also change the prompt.  I'm not worried about that.</p>
<p>But here in the <em>Deep-Thoughts-R-Us</em> department, my point was just that as we rethink what <code>&lt;&lt;</code> and <code>&gt;&gt;</code> might mean, there could be a better default choice, taking advantage of out-of-band signaling.</p>
          <p><a href="https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489/4</link>
        <pubDate>Tue, 23 Jan 2018 20:39:06 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-489-4</guid>
        <source url="https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489.rss">Rethinking the Console Prompt: &gt;&gt; to ? or .\</source>
      </item>
      <item>
        <title>Rethinking the Console Prompt: &gt;&gt; to ? or .\</title>
        <dc:creator><![CDATA[gchiu]]></dc:creator>
        <description><![CDATA[
            <p>Sounds like it should be a user config setting.  Aesthetics differ between people and I'm not seeing a compelling issue to change the default prompt ( which might mean changing all rebol documentation worldwide ! ).</p>
          <p><a href="https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489/3</link>
        <pubDate>Tue, 23 Jan 2018 19:04:12 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-489-3</guid>
        <source url="https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489.rss">Rethinking the Console Prompt: &gt;&gt; to ? or .\</source>
      </item>
      <item>
        <title>Rethinking the Console Prompt: &gt;&gt; to ? or .\</title>
        <dc:creator><![CDATA[BlackATTR]]></dc:creator>
        <description><![CDATA[
            <p>Can this be easily configurable?</p>
          <p><a href="https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489/2</link>
        <pubDate>Tue, 23 Jan 2018 14:22:47 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-489-2</guid>
        <source url="https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489.rss">Rethinking the Console Prompt: &gt;&gt; to ? or .\</source>
      </item>
      <item>
        <title>Rethinking the Console Prompt: &gt;&gt; to ? or .\</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>Rebol has historically used <code>&gt;&gt;</code> for the console prompt.  It also inside the language uses <code>&lt;&lt;</code> and <code>&gt;&gt;</code> for bit shift operators.  Red continues this, and it looks a little weird, e.g.</p>
<pre><code>&gt;&gt; 2 &gt;&gt; 1
== 1
</code></pre>
<p>The use of some form of <strong>&gt;</strong> is fairly common as prompts, going back to <strong><code>C:\&gt;</code></strong> and before.  It's rather common to just find the single character <code>&gt;</code> used.  Yet even in those languages, they use &gt; to mean "greater than".  So the idea of prompts themselves pursuing an out-of-band nature is apparently kind of a big thought.</p>
<p><a class="mention" href="/u/brianotto">@BrianOtto</a> <a href="https://forum.rebol.info/t/should-followed-by-space-be-used-for-comments/275/26">asked about what I thought of using <code>&lt;&lt;</code> and <code>&gt;&gt;</code> for comments</a>, and I wanted to mention that I think they are <strong>"high value" asymmetric symbol patterns</strong>.  There's a relatively scarce space of things that can act as short, clean-looking, asymmetric delimiters.</p>
<p>So I think they're wasted as bit shift operators, when more suboptimal choices are being made.  e.g. Red has chosen <code>#()</code> to express literal MAP!s, a parallel to JSON's <a href="https://www.xul.fr/javascript/associative.php" rel="nofollow noopener">associative arrays</a>.</p>
<pre><code>&gt;&gt; x: #(a: 10 b: 20)
== #(
    a: 10
    b: 20
)

&gt;&gt; x/b
== 20
</code></pre>
<p><em>(On a related note, <a class="mention" href="/u/rgchris">@rgchris</a> and I believe that if anything, construction syntax should have been the one to take <strong>#()</strong> instead of <strong>#[]</strong>, in the sense that it's not creating a BLOCK! of anything...rather it's splicing (kind of like evaluating) an element inline.)</em></p>
<p>But what if we tried to make the prompt something that didn't have meaning in the language?  Let's imagine for a moment that we take that pesky lone <strong>?</strong> I've been looking for a "higher" purpose for <em>(after all, <code>h</code> is a fine console shortcut for help, if one is really too lazy to type <code>help</code>)</em>.  And then the complementary <strong>!</strong>.  Let's imagine their higher purpose is <em>no purpose</em> in the language by default, and use them for console prompts...then take <code>&lt;&lt;</code> and <code>&gt;&gt;</code> for MAP! literals:</p>
<pre><code>? x: &lt;&lt;a: 10 b: 20&gt;&gt;
! &lt;&lt;
    a: 10
    b: 20
&gt;&gt;

? x/b
! 20
</code></pre>
<p>Contrast with Red's scheme: when you think about looking at a long list of keys and values...and you get to the end and see just a <strong><code>)</code></strong>, you have to scan up to know if you're looking at a GROUP! or not.  But here you'd be better off.  I think there's a lot more need for something like this than bit shifting.</p>
<p><strong>?</strong> is just an idea.  Because I'd been looking for a good purpose for <strong>?</strong> and <strong>!</strong>.  I kind of thought it might be fun if they were postfix, so it could be like asking a question of something...but that never came off very well.  I thought it might be okay for <strong>? foo</strong> being shorthand of <strong>set? 'foo</strong> but while it saves some typing it makes the code look unnatural...and that's not what Rebol is about.</p>
<p><em>(Same arguments about why we've scrapped the definition <strong>!: :not</strong>... it's ugly to say <strong>! condition</strong> when you could say <strong>not condition</strong>, and there's no reason to support it.)</em></p>
<p>So with lone ? and ! being enigmatic, thin and unpopular... the idea of not giving them any default meaning has some amount of appeal...and then they'd be something you could visually filter out.  But on that note, regarding <a href="https://forum.rebol.info/t/should-followed-by-space-be-used-for-comments/275/23">recent discussions of backslash</a> of it not being used <em>at all</em>...what if that property were exploited for fun and profit?</p>
<pre><code>Welcome to Rebol.  For more information please type in the commands below:

  HELP    - For starting information
  ABOUT   - Information about your Rebol
  CHANGES - What's different about this version

.\
</code></pre>
<hr>
<pre><code>.\ comment "I actually like dot backslash as the prompt"

&gt;\ comment "other symbols combine noisily, lone backslash too minimal"

breakpoint(3) .\ repeat x 2 [print [x "stuff to the left"]]
1 stuff to the left
2 stuff to the left

.\ &lt;&lt;a: "doesn't" b: "clash" c: "with chevrons!"&gt;&gt; 

.\ 1 + 2
=\ 3

.\ all [
[\  1 &lt; 2 (
(\  3)
[\  ]
=\ 3

.\ quote ==
=\ ==

.\ quote &gt;&gt;
=\ &gt;&gt;
</code></pre>
<p><em>(Colorization would of course help somewhat.)</em></p>
<p>The interesting thing about what I've done above--including a little cleverness with the multiline--is that you wind up with a transcript that can be pasted into a console session and filtered to run the commands again.  Using some of the same rationale as when discussing the backslash being filtered by a "dumb" parser, it doesn't take a lot of intelligence for the console to figure out what your commands were distinct from the output.</p>
<p>Then again, the convention could say that if it sees a backslash it ignores up to one character on the right of it, possibly a space...which might be more conventional-seeming.</p>
<pre><code>breakpoint(3) \&gt; repeat x 2 [print [x "stuff to the left"]]
1 stuff to the left
2 stuff to the left

\. &lt;&lt;a: "doesn't" b: "clash" c: "with chevrons!"&gt;&gt; 

\. 1 + 2
\= 3

\. all [
\[  1 &lt; 2 (
\(  3)
\[  ]
\= 3
</code></pre>
<p>Maybe even some kind of hybrid?  :-/</p>
<pre><code>.\ 1 + 2
\= 3
</code></pre>
<p>Anyway I'm not going to say MAP! literals are the final ante on what might be done with the very valuable <code>&lt;&lt;</code> and <code>&gt;&gt;</code>, but it's more in league with the level I think it should be at.  And if it's that prominent (or moreso) in the language, then being able to avoid its use in the console prompts has an advantage...so I think these contemplations are worthwhile.</p>
          <p><a href="https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489/1</link>
        <pubDate>Tue, 23 Jan 2018 09:00:42 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-489-1</guid>
        <source url="https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489.rss">Rethinking the Console Prompt: &gt;&gt; to ? or .\</source>
      </item>
  </channel>
</rss>
