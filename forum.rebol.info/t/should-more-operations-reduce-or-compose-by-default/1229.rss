<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Should More Operations REDUCE (or COMPOSE) by Default?</title>
    <link>https://forum.rebol.info/t/should-more-operations-reduce-or-compose-by-default/1229</link>
    <description>For reasons that seem pretty good in practice, PRINT reduces a block given to it.

    x: 10
    print [&quot;x is&quot; x]  ; gives you `x is 10`, not `x is x`

An alternative would be that you needed to say **`print reduce [&quot;x is&quot; x]`**.  But that seems laborious.  Ren-C has GET-BLOCK!, and though [that hasn&#39;t been entirely resolved for what it means](https://forum.rebol.info/t/get-block-get-and-reduce/1183), it opens the door to **`print :[&quot;x is&quot; x]`**.  That&#39;s briefer, but even that seems kind of lame compared to the historical non-colon-needing behavior with reducing.

**What exactly was it about PRINT that makes it sensible to REDUCE?  Can it be articulated what properties it has that distinguish it from something like APPEND, that would provide guidance to those making their own routines?**

## New Options with QUOTED! and META-XXX!

We now have META-WORD!, META-BLOCK!, etc.  They produce QUOTED! values.

    &gt;&gt; x: 1020

    &gt;&gt; print [&quot;x is&quot; x]
    x is 1020

    &gt;&gt; print ^[&quot;x is&quot; x]
    x is x

    &gt;&gt; block: [&quot;x is&quot; x]

    &gt;&gt; print block
    x is 1020

    &gt;&gt; print ^block
    [x is x]

Just something to consider.  I don&#39;t really have answers here, I was just throwing out the question.</description>
    
    <lastBuildDate>Thu, 08 Jul 2021 21:12:04 +0000</lastBuildDate>
    <category>Dialects/DSLs</category>
    <atom:link href="https://forum.rebol.info/t/should-more-operations-reduce-or-compose-by-default/1229.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Should More Operations REDUCE (or COMPOSE) by Default?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="1" data-topic="1229">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<pre><code>&gt;&gt; print ^["x is" x]
x is x
</code></pre>
</blockquote>
</aside>
<p>I did something along these lines, but where actually a PRINT of a quoted thing will MOLD it:</p>
<pre><code>&gt;&gt; print ^["x is" x]
["x is" x]
</code></pre>
<p>I think this turns out to be more useful.  This gives back some of the ability that people might have liked from simple <strong>print ^some-integer</strong> if they don't want to type <strong>print [some-integer]</strong>.</p>
<p>(Of course what they probably want is <strong>-- some-integer</strong> to dump it.)</p>
<p>As a reminder on why PRINT limits its inputs, it's simply a bit dangerous to get people in the habit of saying <strong><code>print value</code></strong> and then having it all seem to work fine and well until one day you have <strong><code>value: [format hard drive]</code></strong>.  Using PRINT as a generic value dumper when it has active behavior on blocks has a gotcha...I've limited branch types for similar reasons.</p>
<aside class="quote no-group" data-username="iArnold" data-post="2" data-topic="1229">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/iarnold/40/226_2.png" class="avatar"> iArnold:</div>
<blockquote>
<p>We all could have been using the REPRINT function for years, neglecting the obvious PRINT because that did not reduce.</p>
</blockquote>
</aside>
<p>Quite right.</p>
<p>Right now I'm looking at examples of CALL with a BLOCK!.  And you nearly always want to REDUCE or COMPOSE it.</p>
<p>Very occasionally you do not want to process it... <em>but usually only because it was already reduced</em>.</p>
<p><strong>So rather than going down the avenue of RECALL <img src="https://forum.rebol.info/images/emoji/twitter/roll_eyes.png?v=9" title=":roll_eyes:" class="emoji" alt=":roll_eyes:">  I propose that CALL at least COMPOSE its argument.</strong>  If you don't want it to do this, you use a quoted block.</p>
<p>Since there are now more legal options for words, the advantage of doing COMPOSE instead of reduce is being able to say something like:</p>
<pre><code>call [(system.options.boot) --do "print {hi}"]
</code></pre>
<p>If it ran REDUCE then you'd have to say things like:</p>
<pre><code>call [system.options.boot "--do" "print {hi}"]
</code></pre>
<p>That lines up a little less with how a real command line looks.</p>
          <p><a href="https://forum.rebol.info/t/should-more-operations-reduce-or-compose-by-default/1229/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/should-more-operations-reduce-or-compose-by-default/1229/3</link>
        <pubDate>Thu, 08 Jul 2021 21:05:31 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1229-3</guid>
        <source url="https://forum.rebol.info/t/should-more-operations-reduce-or-compose-by-default/1229.rss">Should More Operations REDUCE (or COMPOSE) by Default?</source>
      </item>
      <item>
        <title>Should More Operations REDUCE (or COMPOSE) by Default?</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>Because it makes more sense to do so, and besides that, what else do you expect, for the suggested result "x is x", well let's say, does not compute <img src="https://forum.rebol.info/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
<p>In the end this behaviour is just why everybody was using REJOIN instead of JOIN.</p>
<p>So where it made sense to Carl to have a JOIN and a REJOIN, from the perspective of having similar behaviour in functional behaviour in respect to naming of functions, making that consistent, practise has proven a different need.<br>
We all could have been using the REPRINT function for years, neglecting the obvious PRINT because that did not reduce.<br>
Naming functions is difficult. Best guidance I can think of now is to always be prepared to rename for a better alternative name has been thought of or the given name implies a (slightly) different generally expected behaviour.</p>
          <p><a href="https://forum.rebol.info/t/should-more-operations-reduce-or-compose-by-default/1229/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/should-more-operations-reduce-or-compose-by-default/1229/2</link>
        <pubDate>Fri, 11 Oct 2019 11:39:34 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1229-2</guid>
        <source url="https://forum.rebol.info/t/should-more-operations-reduce-or-compose-by-default/1229.rss">Should More Operations REDUCE (or COMPOSE) by Default?</source>
      </item>
      <item>
        <title>Should More Operations REDUCE (or COMPOSE) by Default?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>For reasons that seem pretty good in practice, PRINT reduces a block given to it.</p>
<pre><code>x: 10
print ["x is" x]  ; gives you `x is 10`, not `x is x`
</code></pre>
<p>An alternative would be that you needed to say <strong><code>print reduce ["x is" x]</code></strong>.  But that seems laborious.  Ren-C has GET-BLOCK!, and though <a href="https://forum.rebol.info/t/get-block-get-and-reduce/1183">that hasn't been entirely resolved for what it means</a>, it opens the door to <strong><code>print :["x is" x]</code></strong>.  That's briefer, but even that seems kind of lame compared to the historical non-colon-needing behavior with reducing.</p>
<p><strong>What exactly was it about PRINT that makes it sensible to REDUCE?  Can it be articulated what properties it has that distinguish it from something like APPEND, that would provide guidance to those making their own routines?</strong></p>
<h2>New Options with QUOTED! and META-XXX!</h2>
<p>We now have META-WORD!, META-BLOCK!, etc.  They produce QUOTED! values.</p>
<pre><code>&gt;&gt; x: 1020

&gt;&gt; print ["x is" x]
x is 1020

&gt;&gt; print ^["x is" x]
x is x

&gt;&gt; block: ["x is" x]

&gt;&gt; print block
x is 1020

&gt;&gt; print ^block
[x is x]
</code></pre>
<p>Just something to consider.  I don't really have answers here, I was just throwing out the question.</p>
          <p><a href="https://forum.rebol.info/t/should-more-operations-reduce-or-compose-by-default/1229/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/should-more-operations-reduce-or-compose-by-default/1229/1</link>
        <pubDate>Fri, 11 Oct 2019 10:04:51 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1229-1</guid>
        <source url="https://forum.rebol.info/t/should-more-operations-reduce-or-compose-by-default/1229.rss">Should More Operations REDUCE (or COMPOSE) by Default?</source>
      </item>
  </channel>
</rss>
