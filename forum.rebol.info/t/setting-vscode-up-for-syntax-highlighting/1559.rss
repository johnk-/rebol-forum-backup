<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Setting VSCode Up for Syntax Highlighting</title>
    <link>https://forum.rebol.info/t/setting-vscode-up-for-syntax-highlighting/1559</link>
    <description>I&#39;ve completely abandoned Visual Studio on Windows, and I&#39;m phasing out Sublime Text use...so I&#39;m thus committing to a VSCode-based workflow.

I wanted to get very basic syntax highlighting...where SET-WORD!s are bold, and comments are a different color.

The shortest path to having something right now seems to be to use the [VSCode extension for Red](https://github.com/red/VScode-extension).  You can install it from the extensions marketplace.  The extensions icon is on the left sidebar, the four little boxes with the box in the upper right hand corner popped out.  

## Change the File Associations for Rebol and Red

It won&#39;t by default recognize .rebol, .r, or .reb files.  It thinks .r is R language.

So you have to open a file of with the suffix you want to remap.

With a file of your target type open, do **Control-Shift-P** and type in **&quot;Change Language Mode&quot;** (it will autocomplete).  Run the command, and you will get a drop down menu.  Say it&#39;s Red.

You should get the syntax highlighting.

## Customize Any Colors In Your `settings.json`

I&#39;ve made my opinion known that it&#39;s not good to be colorizing the likes of IF and RETURN specially from other WORD!s.  There are not supposed to be keywords, this undermines the message.

So getting rid of the Froot Loops colors is the first order of business.  There&#39;s no UI to speak of for configuring the colors in VSCode.  You have to edit a JSON file.

Again with **Control-Shift-P** but type in **&quot;Preferences: Open Settings (JSON)&quot;** (it will autocomplete).  A JSON file will open.

You can customize the environment itself (toolbars, etc.) or you can customize the syntax in the file.  For the syntax in the file, that&#39;s done under **editor.tokenColorCustomizations**.  For example:

    &quot;editor.tokenColorCustomizations&quot;: {
        &quot;comments&quot;: {  // gray is more subtle than the garish &quot;green&quot; comment
            &quot;foreground&quot;: &quot;#919191&quot;,
            &quot;fontStyle&quot;: &quot;&quot;
        },
        &quot;strings&quot;: {  // darken the shade of red used for strings
            &quot;foreground&quot;: &quot;#7c2424&quot;,
            &quot;fontStyle&quot;: &quot;&quot;
        },
        &quot;textMateRules&quot;: [
            {  // make SET-WORD!s bold, dark blue seems a bit subtler than black
                &quot;scope&quot;: [&quot;variable.name.red&quot;],
                &quot;settings&quot;: {
                    &quot;foreground&quot;: &quot;#242650&quot;,
                    &quot;fontStyle&quot;: &quot;bold&quot;
                }
            },
            {  // Ren-C has no keywords, don&#39;t highlight &quot;Red/System words&quot;
                &quot;scope&quot;: [&quot;storage.type.function.reds.red&quot;],
                &quot;settings&quot;: {
                    &quot;foreground&quot;: &quot;#000000&quot;,
                    &quot;fontStyle&quot;: &quot;&quot;
                }
            },
            {  // Ren-C has no keywords, don&#39;t highlight &quot;Red words&quot;
                &quot;scope&quot;: [&quot;storage.type.function.red&quot;],
                &quot;settings&quot;: {
                    &quot;foreground&quot;: &quot;#000000&quot;,
                    &quot;fontStyle&quot;: &quot;&quot;
                }
            },
            {  // So long as ending in ! still makes words, don&#39;t colorize
                &quot;scope&quot;: [&quot;storage.type.cs.red&quot;],  // word ending in !
                &quot;settings&quot;: {
                    &quot;foreground&quot;: &quot;#000000&quot;,
                    &quot;fontStyle&quot;: &quot;&quot;
                }
            },
			{  // Can&#39;t figure out how to recolor tags, it ignores this
                &quot;scope&quot;: [&quot;meta.tag.red&quot;],
                &quot;settings&quot;: {
                    &quot;foreground&quot;: &quot;#22492e&quot;,
                    &quot;fontStyle&quot;: &quot;&quot;
                }
            },
            {  // Tag color doesn&#39;t seem to come from HTML
                &quot;scope&quot;: [&quot;entity.name.tag.html&quot;],
                &quot;settings&quot;: {
                    &quot;foreground&quot;: &quot;#4a9ec5&quot;
                }
            }
        ]

Autocompletion will hint you about things like comments and strings that are basic across all grammars.  But if you&#39;re wondering how to know the list of things like **variable.name.red** to colorize just for Redbols, you have to look at this file from the extension:

[syntaxes/Red.tmLanguage.json](https://github.com/red/VScode-extension/blob/master/syntaxes/Red.tmLanguage.json)

Poke around there for anything that says **name:**, e.g. `&quot;name&quot;: &quot;variable.name.red&quot;` to find the possibilities.

I can&#39;t figure out how to override the color of tags, however.  I can make them bold, but it seems to be getting the color from somewhere else.

## Hacking On The Rules

If one wants to hack on the syntax highlighting file, it&#39;s stored locally under the .vscode directory of your home directory, e.g.

    \.vscode\extensions\red-auto.red-0.4.3\syntaxes\Red.tmLanguage.json

Edits to that file seem to be picked up on restart.  You can back up a local copy, or just restore it from the web if you mess it up.

I&#39;m not that big of a fan of syntax highlighting, so it probably won&#39;t be me who makes a fork of this extension to have support for things like COMMA! or SYM-XXX!  But, who knows, maybe I&#39;ll get inspired sometime.</description>
    
    <lastBuildDate>Sun, 14 Mar 2021 08:36:01 +0000</lastBuildDate>
    <category>General Tools</category>
    <atom:link href="https://forum.rebol.info/t/setting-vscode-up-for-syntax-highlighting/1559.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Setting VSCode Up for Syntax Highlighting</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>I've completely abandoned Visual Studio on Windows, and I'm phasing out Sublime Text use...so I'm thus committing to a VSCode-based workflow.</p>
<p>I wanted to get very basic syntax highlighting...where SET-WORD!s are bold, and comments are a different color.</p>
<p>The shortest path to having something right now seems to be to use the <a href="https://github.com/red/VScode-extension">VSCode extension for Red</a>.  You can install it from the extensions marketplace.  The extensions icon is on the left sidebar, the four little boxes with the box in the upper right hand corner popped out.</p>
<h2>Change the File Associations for Rebol and Red</h2>
<p>It won't by default recognize .rebol, .r, or .reb files.  It thinks .r is R language.</p>
<p>So you have to open a file of with the suffix you want to remap.</p>
<p>With a file of your target type open, do <strong>Control-Shift-P</strong> and type in <strong>"Change Language Mode"</strong> (it will autocomplete).  Run the command, and you will get a drop down menu.  Say it's Red.</p>
<p>You should get the syntax highlighting.</p>
<h2>Customize Any Colors In Your <code>settings.json</code>
</h2>
<p>I've made my opinion known that it's not good to be colorizing the likes of IF and RETURN specially from other WORD!s.  There are not supposed to be keywords, this undermines the message.</p>
<p>So getting rid of the Froot Loops colors is the first order of business.  There's no UI to speak of for configuring the colors in VSCode.  You have to edit a JSON file.</p>
<p>Again with <strong>Control-Shift-P</strong> but type in <strong>"Preferences: Open Settings (JSON)"</strong> (it will autocomplete).  A JSON file will open.</p>
<p>You can customize the environment itself (toolbars, etc.) or you can customize the syntax in the file.  For the syntax in the file, that's done under <strong>editor.tokenColorCustomizations</strong>.  For example:</p>
<pre><code>"editor.tokenColorCustomizations": {
    "comments": {  // gray is more subtle than the garish "green" comment
        "foreground": "#919191",
        "fontStyle": ""
    },
    "strings": {  // darken the shade of red used for strings
        "foreground": "#7c2424",
        "fontStyle": ""
    },
    "textMateRules": [
        {  // make SET-WORD!s bold, dark blue seems a bit subtler than black
            "scope": ["variable.name.red"],
            "settings": {
                "foreground": "#242650",
                "fontStyle": "bold"
            }
        },
        {  // Ren-C has no keywords, don't highlight "Red/System words"
            "scope": ["storage.type.function.reds.red"],
            "settings": {
                "foreground": "#000000",
                "fontStyle": ""
            }
        },
        {  // Ren-C has no keywords, don't highlight "Red words"
            "scope": ["storage.type.function.red"],
            "settings": {
                "foreground": "#000000",
                "fontStyle": ""
            }
        },
        {  // So long as ending in ! still makes words, don't colorize
            "scope": ["storage.type.cs.red"],  // word ending in !
            "settings": {
                "foreground": "#000000",
                "fontStyle": ""
            }
        },
		{  // Can't figure out how to recolor tags, it ignores this
            "scope": ["meta.tag.red"],
            "settings": {
                "foreground": "#22492e",
                "fontStyle": ""
            }
        },
        {  // Tag color doesn't seem to come from HTML
            "scope": ["entity.name.tag.html"],
            "settings": {
                "foreground": "#4a9ec5"
            }
        }
    ]
</code></pre>
<p>Autocompletion will hint you about things like comments and strings that are basic across all grammars.  But if you're wondering how to know the list of things like <strong>variable.name.red</strong> to colorize just for Redbols, you have to look at this file from the extension:</p>
<p><a href="https://github.com/red/VScode-extension/blob/master/syntaxes/Red.tmLanguage.json">syntaxes/Red.tmLanguage.json</a></p>
<p>Poke around there for anything that says <strong>name:</strong>, e.g. <code>"name": "variable.name.red"</code> to find the possibilities.</p>
<p>I can't figure out how to override the color of tags, however.  I can make them bold, but it seems to be getting the color from somewhere else.</p>
<h2>Hacking On The Rules</h2>
<p>If one wants to hack on the syntax highlighting file, it's stored locally under the .vscode directory of your home directory, e.g.</p>
<pre><code>\.vscode\extensions\red-auto.red-0.4.3\syntaxes\Red.tmLanguage.json
</code></pre>
<p>Edits to that file seem to be picked up on restart.  You can back up a local copy, or just restore it from the web if you mess it up.</p>
<p>I'm not that big of a fan of syntax highlighting, so it probably won't be me who makes a fork of this extension to have support for things like COMMA! or SYM-XXX!  But, who knows, maybe I'll get inspired sometime.</p>
          <p><a href="https://forum.rebol.info/t/setting-vscode-up-for-syntax-highlighting/1559/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/setting-vscode-up-for-syntax-highlighting/1559/1</link>
        <pubDate>Sun, 14 Mar 2021 08:36:01 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1559-1</guid>
        <source url="https://forum.rebol.info/t/setting-vscode-up-for-syntax-highlighting/1559.rss">Setting VSCode Up for Syntax Highlighting</source>
      </item>
  </channel>
</rss>
