<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>REJOIN ugliness and the usefulness of tests</title>
    <link>https://forum.rebol.info/t/rejoin-ugliness-and-the-usefulness-of-tests/248</link>
    <description>Short summary: We need more tests and should ask ourselves if they make sense.

Discovering a bug in REJOIN motivated me to create some tests for it (it had none) and the outcome of that was I was quite surprised at how weird REJOIN&#39;s current behaviour is.

Though I have used REJOIN extensively in my R2 code, I must be using it in a way that avoids some behavioural ugliness.

Have a look at the [tests](https://github.com/codebybrett/ren-c/blob/95b07ed2e6cbb1890a5336e3aa69508388eb9467/tests/series/rejoin.test.reb) added to Ren-c for REJOIN.

Thought train:

* Why is REJOIN so weird?
* Maybe I don&#39;t want to REJOIN in my code anymore if it is that odd.
* I only became aware of how weird it is by writing the tests.
* Tests serve as documentation and can therefore draw attention to weirdness perhaps motiving a better solution.
* I wonder if it would be useful to formalise the &quot;tests as documentation&quot; notion?</description>
    
    <lastBuildDate>Mon, 16 Aug 2021 20:19:42 +0000</lastBuildDate>
    <category>Internals</category>
    <atom:link href="https://forum.rebol.info/t/rejoin-ugliness-and-the-usefulness-of-tests/248.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>REJOIN ugliness and the usefulness of tests</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>REJOIN will only exist in Redbol, so I'll defer to Red's tests for it.  Whatever they do, we should be <em>able</em> to do (whether we think it's useful or not).</p>
<p>For the sake of not throwing things away completely, here were the REJOIN tests that were still hanging around despite not having any uses in Modern Ren-C:</p>
<pre><code>([] = rejoin [])
([] = rejoin [[]])
("~null~" = rejoin ["" null])
([] = rejoin [null null])
([[]] = rejoin [[][]])
([[][]] = rejoin [[][][]])
(
    block: [[][]]
    not same? first block first rejoin block
)
([1] = rejoin [[] 1])
("" = rejoin [{}])
("1" = rejoin [1])
(
    value: 1
    "1" = rejoin [value]
)
[
    https://github.com/metaeducation/ren-c/issues/1084
    (#ab = rejoin [#a #b])
]</code></pre>
          <p><a href="https://forum.rebol.info/t/rejoin-ugliness-and-the-usefulness-of-tests/248/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/rejoin-ugliness-and-the-usefulness-of-tests/248/6</link>
        <pubDate>Mon, 16 Aug 2021 20:19:42 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-248-6</guid>
        <source url="https://forum.rebol.info/t/rejoin-ugliness-and-the-usefulness-of-tests/248.rss">REJOIN ugliness and the usefulness of tests</source>
      </item>
      <item>
        <title>REJOIN ugliness and the usefulness of tests</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="Brett" data-post="1" data-topic="248">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/brett/40/177_2.png" class="avatar"> Brett:</div>
<blockquote>
<p>Maybe I don't want to REJOIN in my code anymore if it is that odd.</p>
</blockquote>
</aside>
<h2>I Think We Finally Have An Answer For Wiping Out REJOIN</h2>
<p>Let's say you want to make a BINARY! out of some reduced material with REJOIN.  You'd have done something like this:</p>
<pre><code>&gt;&gt; rejoin [#{} "ABC" 1 + 2 3 + 4]
== #{4142430307}
</code></pre>
<p>But let's imagine a world where JOIN not only does not implicitly REDUCE, but also allows a datatype as the thing to "join to".  Since you can't join to a datatype, it assumes that's what you want.</p>
<pre><code>&gt;&gt; join binary! reduce ["ABC" 1 + 2 3 + 4]
== #{4142430307}
</code></pre>
<p>And wait... Ren-C has the generic GET-BLOCK! as a shorthand for REDUCE.</p>
<pre><code>&gt;&gt; join binary! :["ABC" 1 + 2 3 + 4]
== #{4142430307}
</code></pre>
<p>Kablammo.  And hey, now we have the name for a non-reducing JOIN.  <em>It's JOIN.</em></p>
<p><img src="https://forum.rebol.info/images/emoji/twitter/fireworks.png?v=9" title=":fireworks:" class="emoji only-emoji" alt=":fireworks:"></p>
<p><strong>We can still add a /REDUCE refinement to APPEND, INSERT, CHANGE, JOIN, etc.</strong>  This would avoid the creation of an intermediate block...the reduced products could be merged into the built result as you go.</p>
<p>I doubt I'd put the names REJOIN, REMOLD, REFORM etc. "in the box".  But if there was a REJOIN, it would be arity-2 and mean JOIN/REDUCE, where the default JOIN does not reduce.  The old notion of REJOIN is now dead as a doornail.  <img src="https://forum.rebol.info/images/emoji/twitter/door.png?v=9" title=":door:" class="emoji" alt=":door:"> <img src="https://forum.rebol.info/images/emoji/twitter/hammer.png?v=9" title=":hammer:" class="emoji" alt=":hammer:"></p>
<p>It's going to always be possible to add sneaky optimization refinements to things.  However, I don't think you should have to use them...and we should stylize for the best and clearest experience.  This points in that direction.</p>
          <p><a href="https://forum.rebol.info/t/rejoin-ugliness-and-the-usefulness-of-tests/248/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/rejoin-ugliness-and-the-usefulness-of-tests/248/5</link>
        <pubDate>Mon, 16 Aug 2021 19:46:58 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-248-5</guid>
        <source url="https://forum.rebol.info/t/rejoin-ugliness-and-the-usefulness-of-tests/248.rss">REJOIN ugliness and the usefulness of tests</source>
      </item>
      <item>
        <title>REJOIN ugliness and the usefulness of tests</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="1" data-topic="248">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/brett/40/177_2.png" class="avatar"> Brett:</div>
<blockquote>
<p>I only became aware of how weird it is by writing the tests.</p>
</blockquote>
</aside>
<p>Well, now you know why I made SPACED and UNSPACED!</p>
          <p><a href="https://forum.rebol.info/t/rejoin-ugliness-and-the-usefulness-of-tests/248/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/rejoin-ugliness-and-the-usefulness-of-tests/248/4</link>
        <pubDate>Thu, 10 Aug 2017 07:42:40 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-248-4</guid>
        <source url="https://forum.rebol.info/t/rejoin-ugliness-and-the-usefulness-of-tests/248.rss">REJOIN ugliness and the usefulness of tests</source>
      </item>
      <item>
        <title>REJOIN ugliness and the usefulness of tests</title>
        <dc:creator><![CDATA[Brett]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="2" data-topic="248">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="//forum.rebol.info/user_avatar/forum.rebol.info/iarnold/40/226_2.png" class="avatar"> iArnold:</div>
<blockquote>
<p>About the code of REJOIN</p>
</blockquote>
</aside>
<p>The link I gave was to the commit.</p>
<p>You can find the current REJOIN <a href="https://github.com/metaeducation/ren-c/blob/132e5c81b516e815b69362700c788f3ab92071f9/src/mezz/mezz-legacy.r#L109" rel="nofollow noopener">here</a>, which I have written to emulate R3, it is not using the newer functions.</p>
          <p><a href="https://forum.rebol.info/t/rejoin-ugliness-and-the-usefulness-of-tests/248/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/rejoin-ugliness-and-the-usefulness-of-tests/248/3</link>
        <pubDate>Thu, 10 Aug 2017 07:40:39 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-248-3</guid>
        <source url="https://forum.rebol.info/t/rejoin-ugliness-and-the-usefulness-of-tests/248.rss">REJOIN ugliness and the usefulness of tests</source>
      </item>
      <item>
        <title>REJOIN ugliness and the usefulness of tests</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>And REJOIN suggests that you join pieces of something that broke back together again. Most of us have started out using JOIN to put things together, then found out it did not do what they wanted and so they got pointed to REJOIN that does the expected thing.<br>
Long story short, JOIN is seldom used and we all use REJOIN all the time, where we initially want to read just JOIN.</p>
<p>The name REJOIN is unlucky too because in an alphabetic list of functions it does not show up next to JOIN and will easily be overlooked, where JOIN-ALL will be found because is is right underneath JOIN.<br>
Perhaps a longer name like JOIN-ON-FIRST will be better describing that the JOIN will result in something of the TYPE! of the first item.<br>
SPACED and UNSPACED, I will have to get used to those. Perhaps I am better of with alias JOIN-SPACED and JOIN-UNSPACED for those.</p>
<p>About the code of REJOIN in <a href="https://github.com/metaeducation/ren-c/blob/622d376b4504f828e35a18bf9b1c394c29efc527/src/mezz/mezz-legacy.r#L300" rel="nofollow noopener">https://github.com/metaeducation/ren-c/blob/622d376b4504f828e35a18bf9b1c394c29efc527/src/mezz/mezz-legacy.r#L300</a> there are still a few unfamiliar functions for me in there (CHAIN, SPECIALIZE) so I cannot directly say what is wrong in its definition.</p>
          <p><a href="https://forum.rebol.info/t/rejoin-ugliness-and-the-usefulness-of-tests/248/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/rejoin-ugliness-and-the-usefulness-of-tests/248/2</link>
        <pubDate>Thu, 10 Aug 2017 07:33:08 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-248-2</guid>
        <source url="https://forum.rebol.info/t/rejoin-ugliness-and-the-usefulness-of-tests/248.rss">REJOIN ugliness and the usefulness of tests</source>
      </item>
      <item>
        <title>REJOIN ugliness and the usefulness of tests</title>
        <dc:creator><![CDATA[Brett]]></dc:creator>
        <description><![CDATA[
            <p>Short summary: We need more tests and should ask ourselves if they make sense.</p>
<p>Discovering a bug in REJOIN motivated me to create some tests for it (it had none) and the outcome of that was I was quite surprised at how weird REJOIN's current behaviour is.</p>
<p>Though I have used REJOIN extensively in my R2 code, I must be using it in a way that avoids some behavioural ugliness.</p>
<p>Have a look at the <a href="https://github.com/codebybrett/ren-c/blob/95b07ed2e6cbb1890a5336e3aa69508388eb9467/tests/series/rejoin.test.reb" rel="nofollow noopener">tests</a> added to Ren-c for REJOIN.</p>
<p>Thought train:</p>
<ul>
<li>Why is REJOIN so weird?</li>
<li>Maybe I don't want to REJOIN in my code anymore if it is that odd.</li>
<li>I only became aware of how weird it is by writing the tests.</li>
<li>Tests serve as documentation and can therefore draw attention to weirdness perhaps motiving a better solution.</li>
<li>I wonder if it would be useful to formalise the "tests as documentation" notion?</li>
</ul>
          <p><a href="https://forum.rebol.info/t/rejoin-ugliness-and-the-usefulness-of-tests/248/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/rejoin-ugliness-and-the-usefulness-of-tests/248/1</link>
        <pubDate>Thu, 10 Aug 2017 06:48:49 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-248-1</guid>
        <source url="https://forum.rebol.info/t/rejoin-ugliness-and-the-usefulness-of-tests/248.rss">REJOIN ugliness and the usefulness of tests</source>
      </item>
  </channel>
</rss>
