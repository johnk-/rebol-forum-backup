<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>&quot;Destructuring&quot; in FOR-EACH</title>
    <link>https://forum.rebol.info/t/destructuring-in-for-each/1738</link>
    <description>@gchiu wrote some code that made a list of drugs and filenames related to those drugs:

     drugs: [
         [&quot;Benzbromarone&quot; &quot;SA1537.pdf&quot;]
         [&quot;Teriparatide&quot; &quot;SA1139.pdf&quot;]
         [&quot;Adalimumab&quot; &quot;SA1847.pdf&quot;]
         [&quot;Etanercept&quot; &quot;SA1812.pdf&quot;]
     ]

This is inconvenient to enumerate.  It won&#39;t work if you say:

    for-each [drugname filename] [...]

Because what you get then is two successive blocks... e.g. drugname winds up being **[&quot;Benzbromarone&quot; &quot;SA1537.pdf&quot;]** and then filename is **[&quot;Teriparatide&quot; &quot;SA1139.pdf&quot;]**.

If this were to work, it would have to offer something like:

    for-each [[drugname filename]] [...]

That could communicate that the information you were looking for was actually in a nested block level.

Though we don&#39;t want to get too literal with the dialect.  If you have:

     drugs: [
         (&quot;Benzbromarone&quot; &quot;SA1537.pdf&quot;)
         (&quot;Teriparatide&quot; &quot;SA1139.pdf&quot;)
         (&quot;Adalimumab&quot; &quot;SA1847.pdf&quot;)
         (&quot;Etanercept&quot; &quot;SA1812.pdf&quot;)
     ]

...we don&#39;t want to make the meaning of GROUP!s in FOR-EACH have to be related to this structure, because we use groups to say that the variable&#39;s name is calculated.  :-/

Similarly, we might imagine more interesting meanings for blocks in FOR-EACH than to point out a nested block level.  Maybe this would be done with quoted blocks and quoted groups?

    for-each [&#39;(drugname filename)] [...]

It gets a bit hairy because you&#39;re starting to tread into parsing territory.  Hard to know where to stop.

Since I&#39;m not sure I just switched Graham&#39;s case to use a flat block.

     drugs: [
         &quot;Benzbromarone&quot; &quot;SA1537.pdf&quot;
         &quot;Teriparatide&quot; &quot;SA1139.pdf&quot;
         &quot;Adalimumab&quot; &quot;SA1847.pdf&quot;
         &quot;Etanercept&quot; &quot;SA1812.pdf&quot;
     ]

But it should be thought about more.</description>
    
    <lastBuildDate>Tue, 05 Oct 2021 19:04:32 +0000</lastBuildDate>
    <category>Internals</category>
    <atom:link href="https://forum.rebol.info/t/destructuring-in-for-each/1738.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>&quot;Destructuring&quot; in FOR-EACH</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>In case of the nested block, it becomes something like for-each blck [d: first blck f: second blck]</p>
          <p><a href="https://forum.rebol.info/t/destructuring-in-for-each/1738/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/destructuring-in-for-each/1738/2</link>
        <pubDate>Tue, 05 Oct 2021 19:04:32 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1738-2</guid>
        <source url="https://forum.rebol.info/t/destructuring-in-for-each/1738.rss">&quot;Destructuring&quot; in FOR-EACH</source>
      </item>
      <item>
        <title>&quot;Destructuring&quot; in FOR-EACH</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p><a class="mention" href="/u/gchiu">@gchiu</a> wrote some code that made a list of drugs and filenames related to those drugs:</p>
<pre><code> drugs: [
     ["Benzbromarone" "SA1537.pdf"]
     ["Teriparatide" "SA1139.pdf"]
     ["Adalimumab" "SA1847.pdf"]
     ["Etanercept" "SA1812.pdf"]
 ]
</code></pre>
<p>This is inconvenient to enumerate.  It won't work if you say:</p>
<pre><code>for-each [drugname filename] [...]
</code></pre>
<p>Because what you get then is two successive blocks... e.g. drugname winds up being <strong>["Benzbromarone" "SA1537.pdf"]</strong> and then filename is <strong>["Teriparatide" "SA1139.pdf"]</strong>.</p>
<p>If this were to work, it would have to offer something like:</p>
<pre><code>for-each [[drugname filename]] [...]
</code></pre>
<p>That could communicate that the information you were looking for was actually in a nested block level.</p>
<p>Though we don't want to get too literal with the dialect.  If you have:</p>
<pre><code> drugs: [
     ("Benzbromarone" "SA1537.pdf")
     ("Teriparatide" "SA1139.pdf")
     ("Adalimumab" "SA1847.pdf")
     ("Etanercept" "SA1812.pdf")
 ]
</code></pre>
<p>...we don't want to make the meaning of GROUP!s in FOR-EACH have to be related to this structure, because we use groups to say that the variable's name is calculated.  :-/</p>
<p>Similarly, we might imagine more interesting meanings for blocks in FOR-EACH than to point out a nested block level.  Maybe this would be done with quoted blocks and quoted groups?</p>
<pre><code>for-each ['(drugname filename)] [...]
</code></pre>
<p>It gets a bit hairy because you're starting to tread into parsing territory.  Hard to know where to stop.</p>
<p>Since I'm not sure I just switched Graham's case to use a flat block.</p>
<pre><code> drugs: [
     "Benzbromarone" "SA1537.pdf"
     "Teriparatide" "SA1139.pdf"
     "Adalimumab" "SA1847.pdf"
     "Etanercept" "SA1812.pdf"
 ]
</code></pre>
<p>But it should be thought about more.</p>
          <p><a href="https://forum.rebol.info/t/destructuring-in-for-each/1738/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/destructuring-in-for-each/1738/1</link>
        <pubDate>Mon, 04 Oct 2021 20:08:44 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1738-1</guid>
        <source url="https://forum.rebol.info/t/destructuring-in-for-each/1738.rss">&quot;Destructuring&quot; in FOR-EACH</source>
      </item>
  </channel>
</rss>
