<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>`call` asynchronously?</title>
    <link>https://forum.rebol.info/t/call-asynchronously/1509</link>
    <description>On Atronix R3 when I run `call &quot;zathura&quot;` the program runs asynchronously. When I do the same in Ren-C it waits for the program to terminate. The available refinements do not seem to help.</description>
    
    <lastBuildDate>Tue, 16 Feb 2021 14:00:15 +0000</lastBuildDate>
    <category>Usage</category>
    <atom:link href="https://forum.rebol.info/t/call-asynchronously/1509.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>`call` asynchronously?</title>
        <dc:creator><![CDATA[okram]]></dc:creator>
        <description><![CDATA[
            <p>I'm still around. Other things are taking up a lot of time...</p>
          <p><a href="https://forum.rebol.info/t/call-asynchronously/1509/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/call-asynchronously/1509/6</link>
        <pubDate>Tue, 16 Feb 2021 14:00:15 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1509-6</guid>
        <source url="https://forum.rebol.info/t/call-asynchronously/1509.rss">`call` asynchronously?</source>
      </item>
      <item>
        <title>`call` asynchronously?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="okram" data-post="4" data-topic="1509">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/letter_avatar_proxy/v4/letter/o/b9bd4f/40.png" class="avatar"> okram:</div>
<blockquote>
<p>I had found that other post of yours</p>
</blockquote>
</aside>
<p>Glad you're still around and looking at this mess.  It <em>is</em> a mess, but... it's in service of an experiment.  A different way of attacking programming problems.</p>
<p>It's definitely different.  Though...</p>
<p><img src="http://28.media.tumblr.com/tumblr_labmz1v2QU1qd0a5no1_500.jpg" alt="" width="500" height="375"></p>
          <p><a href="https://forum.rebol.info/t/call-asynchronously/1509/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/call-asynchronously/1509/5</link>
        <pubDate>Tue, 16 Feb 2021 13:57:11 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1509-5</guid>
        <source url="https://forum.rebol.info/t/call-asynchronously/1509.rss">`call` asynchronously?</source>
      </item>
      <item>
        <title>`call` asynchronously?</title>
        <dc:creator><![CDATA[okram]]></dc:creator>
        <description><![CDATA[
            <p>Thanks! I had found that other post of yours, but it didn't seem to answer my question.</p>
          <p><a href="https://forum.rebol.info/t/call-asynchronously/1509/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/call-asynchronously/1509/4</link>
        <pubDate>Tue, 16 Feb 2021 13:53:37 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1509-4</guid>
        <source url="https://forum.rebol.info/t/call-asynchronously/1509.rss">`call` asynchronously?</source>
      </item>
      <item>
        <title>`call` asynchronously?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="okram" data-post="1" data-topic="1509">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/letter_avatar_proxy/v4/letter/o/b9bd4f/40.png" class="avatar"> okram:</div>
<blockquote>
<p>On Atronix R3 when I run <code>call "zathura"</code> the program runs asynchronously. When I do the same in Ren-C it waits for the program to terminate.</p>
</blockquote>
</aside>
<p>CALL is a specialization of a more basic <code>CALL*</code>, which forces it to wait:</p>
<p><a href="https://github.com/metaeducation/ren-c/blob/5d54daea5979911b00455a98fbcfa28c15af6951/extensions/process/ext-process-init.reb#L58">/extensions/process/ext-process-init.reb#L58</a></p>
<p>So you can just use <code>CALL*</code> <em>(which is itself a layer that does some usermode preprocessing over parameters before they get to <code>CALL-INTERNAL*</code>.  For anything not performance-criticial, it's best to avoid trying to write it in C where it is harder to change, so the C code tries to keep it to the bare minimum of what's needed to expose the system functions)</em>.</p>
<p>There's actually some kind of interesting code going on here, glossing the command line differences between Windows and POSIX.  Windows operates on the basis of one big command line string, while UNIX expects an array of individual elements.</p>
<p>So if you're on POSIX and call with a single string, the native code hooked to exec() and pipe() will call out to the usermode <a href="https://github.com/metaeducation/ren-c/blob/5d54daea5979911b00455a98fbcfa28c15af6951/extensions/process/ext-process-init.reb#L60">parse-command-to-argv*</a></p>
<p>And if you're on Windows and call with a block, the native code hooked to CreateProcess will call out to the usermode <a href="https://github.com/metaeducation/ren-c/blob/5d54daea5979911b00455a98fbcfa28c15af6951/extensions/process/ext-process-init.reb#L60">argv-block-to-command*</a></p>
<p>I've written about this and I think it's neat.</p>
<aside class="quote quote-modified" data-post="1" data-topic="1100">
  <div class="title">
    <div class="quote-controls"></div>
    <img alt="" width="20" height="20" src="/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar">
    <a href="https://forum.rebol.info/t/open-your-mind-a-collect-in-parse-meditation/1100">Open Your Mind: A COLLECT in PARSE Meditation</a> <a class="badge-wrapper  bullet" href="/c/usage/show-and-tell/33"><span class="badge-category-parent-bg" style="background-color: #3AB54A;"></span><span class="badge-category-bg" style="background-color: #3AB54A;"></span><span style="" data-drop-close="true" class="badge-category clear-badge" title="Created something short and syrupy sweet?  Then post your scripts here; not confined to infinite length one-liners!">Show &amp; Tell</span></a>
  </div>
  <blockquote>
    The first time I used CALL, I griped that it was somewhat unusable (with a complaint that basically everyone else who tried it had, my complaint was far from unique).  I would have thought that if I said call {r3 --do "print {Hello}"} that it would "do what I meant".  Instead, what it did was try and find an executable file whose name (including spaces and quotes) was r3 --do "print {Hello}", and run it. 
As crazy as that interpretation may seem on the surface, it actually came from a desire to â€¦
  </blockquote>
</aside>

          <p><a href="https://forum.rebol.info/t/call-asynchronously/1509/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/call-asynchronously/1509/3</link>
        <pubDate>Mon, 15 Feb 2021 19:40:06 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1509-3</guid>
        <source url="https://forum.rebol.info/t/call-asynchronously/1509.rss">`call` asynchronously?</source>
      </item>
      <item>
        <title>`call` asynchronously?</title>
        <dc:creator><![CDATA[okram]]></dc:creator>
        <description><![CDATA[
            <p>As a work-around I now use <code>call/shell</code> with a <code>&amp;</code> added to the end of the command line.</p>
          <p><a href="https://forum.rebol.info/t/call-asynchronously/1509/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/call-asynchronously/1509/2</link>
        <pubDate>Mon, 15 Feb 2021 17:49:11 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1509-2</guid>
        <source url="https://forum.rebol.info/t/call-asynchronously/1509.rss">`call` asynchronously?</source>
      </item>
      <item>
        <title>`call` asynchronously?</title>
        <dc:creator><![CDATA[okram]]></dc:creator>
        <description><![CDATA[
            <p>On Atronix R3 when I run <code>call "zathura"</code> the program runs asynchronously. When I do the same in Ren-C it waits for the program to terminate. The available refinements do not seem to help.</p>
          <p><a href="https://forum.rebol.info/t/call-asynchronously/1509/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/call-asynchronously/1509/1</link>
        <pubDate>Mon, 15 Feb 2021 17:19:03 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1509-1</guid>
        <source url="https://forum.rebol.info/t/call-asynchronously/1509.rss">`call` asynchronously?</source>
      </item>
  </channel>
</rss>
