<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>&quot;DEBUG&quot; builds vs &quot;CHECKED&quot; builds</title>
    <link>https://forum.rebol.info/t/debug-builds-vs-checked-builds/1708</link>
    <description>Since this is a language project, the term &quot;Debug&quot; winds up having a bit of an overloaded meaning.

In an ideal world--and this ideal world will hopefully come to pass--the system will have a debugger in the interpreter for helping people diagnose their code.

But then, there is instrumentation added to the system itself--for its own debugging.  Today we call that &quot;a debug build&quot; of the interpreter.

This is pretty standard--when you ask for a debug build of something, that means it has symbols and asserts in it.  It&#39;s a known term in the development culture.  Julia or Python or whoever calls their instrumented version *&quot;The Debug Build&quot;*

  https://pythonextensionpatterns.readthedocs.io/en/latest/debugging/debug_python.html

But there is another term used in the kernel and OS world called a &quot;checked build&quot;.

## Would Calling It A &quot;Checked Build&quot; Be Clarifying or Confusing?

I feel like reserving the term &quot;debug&quot; to use for features related to what the user would call debugging of *their* code may make more sense--even though this may be a bit odd for a language project vs. an OS one.

Plus the flag names make more sense.  Take a flag with a name like DEBUG_UTF8_EVERYWHERE... if it were CHECK_UTF8_EVERYWHERE that sort of gives a better impression of what&#39;s going on.  *You&#39;re asking for instrumentation* that runs independent of whether you actually are debugging anything.  In fact, you can add these checks while not having any &quot;debug symbols&quot; in your build.

I happen to be doing some tweaks that make this a good time for such changes if they are to be made.</description>
    
    <lastBuildDate>Thu, 09 Sep 2021 14:58:55 +0000</lastBuildDate>
    <category>Naming</category>
    <atom:link href="https://forum.rebol.info/t/debug-builds-vs-checked-builds/1708.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>&quot;DEBUG&quot; builds vs &quot;CHECKED&quot; builds</title>
        <dc:creator><![CDATA[BlackATTR]]></dc:creator>
        <description><![CDATA[
            <p>This sounds like a reasonable approach.</p>
          <p><a href="https://forum.rebol.info/t/debug-builds-vs-checked-builds/1708/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/debug-builds-vs-checked-builds/1708/2</link>
        <pubDate>Thu, 09 Sep 2021 14:58:55 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1708-2</guid>
        <source url="https://forum.rebol.info/t/debug-builds-vs-checked-builds/1708.rss">&quot;DEBUG&quot; builds vs &quot;CHECKED&quot; builds</source>
      </item>
      <item>
        <title>&quot;DEBUG&quot; builds vs &quot;CHECKED&quot; builds</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>Since this is a language project, the term "Debug" winds up having a bit of an overloaded meaning.</p>
<p>In an ideal world--and this ideal world will hopefully come to pass--the system will have a debugger in the interpreter for helping people diagnose their code.</p>
<p>But then, there is instrumentation added to the system itself--for its own debugging.  Today we call that "a debug build" of the interpreter.</p>
<p>This is pretty standard--when you ask for a debug build of something, that means it has symbols and asserts in it.  It's a known term in the development culture.  Julia or Python or whoever calls their instrumented version <em>"The Debug Build"</em></p>
<p><a href="https://pythonextensionpatterns.readthedocs.io/en/latest/debugging/debug_python.html" class="inline-onebox">10.2. Building and Using a Debug Version of Python â€” Python Extension Patterns 0.1.0 documentation</a></p>
<p>But there is another term used in the kernel and OS world called a "checked build".</p>
<h2>Would Calling It A "Checked Build" Be Clarifying or Confusing?</h2>
<p>I feel like reserving the term "debug" to use for features related to what the user would call debugging of <em>their</em> code may make more sense--even though this may be a bit odd for a language project vs. an OS one.</p>
<p>Plus the flag names make more sense.  Take a flag with a name like DEBUG_UTF8_EVERYWHERE... if it were CHECK_UTF8_EVERYWHERE that sort of gives a better impression of what's going on.  <em>You're asking for instrumentation</em> that runs independent of whether you actually are debugging anything.  In fact, you can add these checks while not having any "debug symbols" in your build.</p>
<p>I happen to be doing some tweaks that make this a good time for such changes if they are to be made.</p>
          <p><a href="https://forum.rebol.info/t/debug-builds-vs-checked-builds/1708/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/debug-builds-vs-checked-builds/1708/1</link>
        <pubDate>Thu, 09 Sep 2021 14:53:10 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1708-1</guid>
        <source url="https://forum.rebol.info/t/debug-builds-vs-checked-builds/1708.rss">&quot;DEBUG&quot; builds vs &quot;CHECKED&quot; builds</source>
      </item>
  </channel>
</rss>
