<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>The New Ren-C GitHub Action: Run Natively, Run on Web!</title>
    <link>https://forum.rebol.info/t/the-new-ren-c-github-action-run-natively-run-on-web/1562</link>
    <description>[quote=&quot;hostilefork, post:1, topic:1547&quot;]
A GitHub Action can make including the feature as easy as one line for users. And we have the advantage of being able to make single-exe tools that could install on all the container types. *(All of them are 64-bit. Sorry, Red...)*
[/quote]

So I went through the pain and suffering of learning how to do this.

*It&#39;s a small thing in some sense, but very high leverage!*

**[A First Draft of a Quite Useful Ren-C Action](https://github.com/metaeducation/ren-c-action)**

* **It auto-detects your platform (Windows, Linux, MacOS) and downloads an R3 Executable for that platform**

* **It uses GitHub Actions caching to remember where it installed itself, so multiple steps can use the executable without doing multiple downloads**

* **It adds the r3 executable to your path, so you can use it from bash as well as with inline script code**

* ...and as a bonus feature... **It can run script code in the web build via browser automation, so you can use it to test scripts intended to be run on the web as well**.

You can see [how much nicer the web build test](https://github.com/metaeducation/ren-c/commit/f6b3411abf367be47d05e5ce58ea2de117255cc5) got by using it.  The Python code that lived in the ReplPad tests directory as well as the shell code for the web build are now both moved into the `ren-c-action`, and it&#39;s generalized. This should make it easy to add the action to a repository that is something like @gchiu&#39;s NZPower.

There are [a bunch of comments in the source](https://github.com/metaeducation/ren-c-action/tree/main/src) so you should be able to get the idea.  There&#39;s a few sticks and glue holding it together, but I think the basic approach is sound.

The main problem it has right now is that we don&#39;t have the latest builds getting uploaded.  So the next step for this to be useful will be to restore the uploading for OS X / Linux / Win32 builds.</description>
    
    <lastBuildDate>Tue, 16 Mar 2021 12:05:04 +0000</lastBuildDate>
    <category>Build System</category>
    <atom:link href="https://forum.rebol.info/t/the-new-ren-c-github-action-run-natively-run-on-web/1562.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>The New Ren-C GitHub Action: Run Natively, Run on Web!</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="1" data-topic="1547">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>A GitHub Action can make including the feature as easy as one line for users. And we have the advantage of being able to make single-exe tools that could install on all the container types. <em>(All of them are 64-bit. Sorry, Red...)</em></p>
</blockquote>
</aside>
<p>So I went through the pain and suffering of learning how to do this.</p>
<p><em>It's a small thing in some sense, but very high leverage!</em></p>
<p><strong><a href="https://github.com/metaeducation/ren-c-action">A First Draft of a Quite Useful Ren-C Action</a></strong></p>
<ul>
<li>
<p><strong>It auto-detects your platform (Windows, Linux, MacOS) and downloads an R3 Executable for that platform</strong></p>
</li>
<li>
<p><strong>It uses GitHub Actions caching to remember where it installed itself, so multiple steps can use the executable without doing multiple downloads</strong></p>
</li>
<li>
<p><strong>It adds the r3 executable to your path, so you can use it from bash as well as with inline script code</strong></p>
</li>
<li>
<p>...and as a bonus feature... <strong>It can run script code in the web build via browser automation, so you can use it to test scripts intended to be run on the web as well</strong>.</p>
</li>
</ul>
<p>You can see <a href="https://github.com/metaeducation/ren-c/commit/f6b3411abf367be47d05e5ce58ea2de117255cc5">how much nicer the web build test</a> got by using it.  The Python code that lived in the ReplPad tests directory as well as the shell code for the web build are now both moved into the <code>ren-c-action</code>, and it's generalized. This should make it easy to add the action to a repository that is something like <a class="mention" href="/u/gchiu">@gchiu</a>'s NZPower.</p>
<p>There are <a href="https://github.com/metaeducation/ren-c-action/tree/main/src">a bunch of comments in the source</a> so you should be able to get the idea.  There's a few sticks and glue holding it together, but I think the basic approach is sound.</p>
<p>The main problem it has right now is that we don't have the latest builds getting uploaded.  So the next step for this to be useful will be to restore the uploading for OS X / Linux / Win32 builds.</p>
          <p><a href="https://forum.rebol.info/t/the-new-ren-c-github-action-run-natively-run-on-web/1562/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/the-new-ren-c-github-action-run-natively-run-on-web/1562/1</link>
        <pubDate>Tue, 16 Mar 2021 06:52:21 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1562-1</guid>
        <source url="https://forum.rebol.info/t/the-new-ren-c-github-action-run-natively-run-on-web/1562.rss">The New Ren-C GitHub Action: Run Natively, Run on Web!</source>
      </item>
  </channel>
</rss>
