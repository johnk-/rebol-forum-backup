<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Belated 2021 Post-Mortem + New Years 2022 Vision ðŸ¤¹</title>
    <link>https://forum.rebol.info/t/belated-2021-post-mortem-new-years-2022-vision/1786</link>
    <description># Happy 2022!

**...and I Hope Your New Year&#39;s Was Better Than Mine...** :man_facepalming:

Though I&#39;ve spent most of the last few New Years Days (and this last one) traveling and in some hotel...I&#39;ve usually gotten myself a nice supply of beer, and worked start-to-finish through a post.  I talk about what worked and didn&#39;t work, and where things might go next.  Although it generally takes the greater part of a day to write those, it&#39;s in some ways kind of a fun thing to write...and I was always pleased to beat Red to the punch with accomplishments I found more impressive.

*This year felt unfortunately different.*  I had a big wave of pessimism for all kinds of reasons--ranging from personal relationships, to my new laptop screen getting cracked when it was in my bag...to just a general feeling that the world is going to hell in a handbasket.

**:skull: ...But It&#39;s Not As Grim As All That... :potato:**

After eating a ridiculous potato from [A Hipster Potato Restaurant In St. Petersburg](https://stpeterising.com/home/2021/9/16/a-loaded-baked-potato-restaurant-the-half-baked-potato-is-coming-soon-to-downtown-st-pete)--and inadvisedly drinking 2 Sugar-Free Red Bulls--my stomach and brain weren&#39;t going to sleep for a long time.

Though traveling makes retrieving a repaired laptop on an extended warranty difficult, I still had my old laptop with me.  So I dug it out, and found an unfinished post about a seemingly-esoteric point about invisible evaluations and void isotopes.  [Some deep realizations clicked into place](https://forum.rebol.info/t/pure-vs-impure-invisibility-do-we-need-both/1782).  Those realizations led to a proud thought:

**2021 was the year of invention for BAD-WORD!s, &quot;isotopes&quot;, and ^META.  While the older invention of NULL was akin to mathematicians inventing zero to solve previously hard problems... *isotopes and meta-transformations are like the invention of imaginary numbers*.**

Having that energy boost put me on a slight incline toward positive thinking.  Enough so that I&#39;m pushing out a New Year&#39;s post before the calendar ticks over to February... here goes:

## UPARSE Is Already a Big Success Story

Many who use Rebol got addicted because of PARSE.  But people who work with other languages and parser combinators have wondered what the big deal is.  Though Rebol&#39;s PARSE is a literate alternative to simple RegEx scenarios, it&#39;s weak at building high level structures from smaller simpler parsers--*there are too many inconveniences in writing reusable rules*.

UPARSE stands for [*(U)sermode PARSE*](https://github.com/metaeducation/ren-c/blob/26752e701d9585a7dd5bb1c4cb2e78c901908c5b/src/mezz/uparse.reb) and to me it deals Rebol back in the parsing game:

* It keeps the classic feel of PARSE alive, while bringing its power up to the level of combinators in other languages.  Arbitrary values can be synthesized from processing the input, instead of just data captures at the level of the input series.

* You can come up with &quot;new keywords&quot; without waiting for someone to do so.  These are expressed as ordinary functions with multiple return values, and hence can be optimized as natives.

* The behavior of values of certain datatypes themselves can be overridden, to bend parsing to entirely different meanings.

* It has a [generic architecture for rolling back the effects of combinators](https://github.com/metaeducation/ren-c/blob/26752e701d9585a7dd5bb1c4cb2e78c901908c5b/tests/parse/examples/maxmatch.parse.test.reb), with a default behavior that lets the average combinator author avoid the details if they just want any failure to roll back everything in the order it was done.

* As a proof of its flexibility, a Rebol2/Red-compatible combinator set is defined.

**But besides the combinators, the usermode implementation of the UPARSE engine itself that composes and runs them is as much of the story as anything else.**  Rebol has had a shaky history of giving usermode code the same perceptive power as what could be done from C...and that can be as basic as how to tell the difference between **[a b #[none]]** and **[a b]** with looking at the result of THIRD of the block.  All these upgrades come into the mix in UPARSE...from FRAME! mechanics and specializations to ^META and isotopes and generic quoting.

On the downside: it hasn&#39;t been optimized much yet, so the performance is abysmal...and a lot of work is left to do on error messages.  But seeing how to build a dialect in this way--where it&#39;s not like you have to be a C programmer, but you can wire together the pieces--is the &quot;Minecraft of Programming&quot; I talk about.

## The [Ren-C GitHub Action](https://forum.rebol.info/t/the-new-ren-c-github-action-run-natively-run-on-web/1562) Has Been Amazing

Although it required me gritting my teeth through some JavaScript programming, we now have a turnkey way to install an up to date interpreter with a line of code on a cloud runner for Mac, Linux, and Windows...as well as run automation of the latest web build.

It&#39;s a big force multiplier, and it&#39;s helped with testing the [Whitespace Interpreter Dialect](https://forum.rebol.info/t/whitespace-interpreter-revisited/1482) and the [USCII Dialect](https://forum.rebol.info/t/uscii-seen-with-new-eyes/1713)...both of which received major updates this year.  When Redbol examples are given they often risk merely showing the language is capable of generic computation and if you put enough hours into it then you might get something that sort-of-works.  But I feel these are approaching good examples of the form--where they lay out the particular power and composability that Ren-C has been angling for.

## [Devices are Gone](https://forum.rebol.info/t/devices-are-gone-but-what-were-they/1692) and [now it&#39;s all libUV](https://forum.rebol.info/t/libuv-integration-has-started-an-i-o-renaissance/1694) 

I think that libUV pretty much represents the objectives of what Carl might have wanted a device layer to be.  Not only is it pure C code that can be built with things like the TinyC compiler, it compiles for esoteric platforms like Haiku.  It&#39;s something Rebol might well have used had it been around.

And the web build doesn&#39;t use libUV at all--accomplishing its network reads and such through completely different mechanisms.  So it shows the language is staying pure and repurposeable on platforms that don&#39;t have threads or whatever dependencies libUV requires.  A simple stripped down version could just offer C stdio (for instance).

There&#39;s a long way to go for our usage of libUV to live up to its potential.  But it gives the foundations for doing things like a [good version of async IO, where you code in a synchronous style](https://forum.rebol.info/t/semantics-of-read-and-tcp-streams-past-and-future/1733).  (I&#39;ve explained that I think the old WAIT/AWAKE model really [represented a dead end](https://forum.rebol.info/t/the-weirdness-of-wait/1703), and so it had to be ripped out).

## [*Sea of Words*](https://forum.rebol.info/t/the-sea-of-words/1564) and Customizable Modularization Arrives

What was supposed to be unique about Rebol&#39;s modules was that the code that processed headers would be like a dialect.  That dialect was processed by usermode code, and you could write your own spin on it if you had some other idea of how you wanted modularization to work.

It&#39;s early yet to really say for sure how the mechanics behind this will evolve.  But there have been big steps taken--and the personal success I feel is how the test dialect can create modules out of individual tests.  So the test files are really making thousands upon thousands of isolating contexts, and when the tests are done running the user context is not contaminated at all.  This makes the tests less subject to weird side effects from each other...keeps things tidy...and is overall good for the garbage collector as well.

Disconnecting the use of words from the creation of variables is good for all the reasons I cite.  I&#39;ve been very happy with that idea, though what &quot;attachment&quot; to a context means has design work to do.  Make no mistake--this is a process of invention--and so it&#39;s going to be weird and take time.

## [PICK and POKE and Pathing Are Resolved](https://forum.rebol.info/t/get-set-vs-pick-poke-whats-the-difference/1719) (I Think)

I&#39;ve struggled since very early on to tame &quot;path dispatch&quot;, which was very oddly shaped.  I&#39;m not going to rehash all of the thought process.  But I&#39;m pleased with the outcome, and I think it will generalize well to extension types.

## First Try At String Binding + Interpolation

It isn&#39;t there yet, but it has been prototyped.  I&#39;ve written up a post about where I think binding/scoping has to go:

  https://forum.rebol.info/t/rebol-and-scopes-well-why-not/1751

There are still no easy answers.  But there&#39;s good news about having so many complex codebases in play (like UPARSE, whitespace dialect, etc.) that are not throwing softballs at the language.  If new binding concepts add functionality but don&#39;t break any of that, that&#39;s a good sign it may be good.

## ...A Lot Of Other Stuff Happened...

This is just a mini list of some of the things I find most notable to call out. As usual, you can scroll through posts or commit logs to see more.

But I also got the chance to visit @BlackATTR and meet his family and dogs, so that was fun.  We got some work done on his QUERY dialect, but more to go.

I managed to get ODBC and webserver bugs fixed for @gchiu so he could do a demo, and to put it on GitHub Actions with tests.

---

# What Hangs in the Balance for 2022?

I mentioned my bad New Years, and reading [Red&#39;s New Years post](https://www.red-lang.org/2021/12/2021-winding-down.html) did not help, because it felt so incredibly *cyclic*.  Seeing them start a New Year by long-windedly plagiarizing [Back to Personal Computing](https://forum.rebol.info/t/back-to-personal-computing/186)... *again*... made me fear their man-years of toil without heeding advice or warnings has grown no audience for either their work, nor Ren-C&#39;s inventions.  Their formerly active YCombinator group had a collective yawn about it...[one comment](https://news.ycombinator.com/item?id=29758024) at time of writing, so they seem to be slipping off the radar...even though they are much less research-oriented and more &quot;give-the-people-what-they-want-right-now&quot; oriented (in theory).

Apologies to Gregg Irwin for ranting at him.  **But we/I sadly can&#39;t count on Red to keep an audience alive for Redbols, as the old guard moves on and new people aren&#39;t there to replace them.**  And I&#39;m not a marketer, especially since I fundamentally disagree with the way social media power structures work.  So Ren-C&#39;s cool creations are at high risk of not even making it to @BlackATTR&#39;s &quot;bad&quot;-case outcome of becoming *&quot;a museum piece like the Antikythera mechanism.&quot;*

*(Makes me think of the [species extinction risk scale](https://en.wikipedia.org/wiki/Conservation_status).  Sure, the source code is on GitHub, and the topic list of this forum seems to be on the Internet Archive...but if you click through to individual pages there&#39;s nothing about the post contents.  Should we do a scrape of the data here and put it elsewhere?)*

I have always been able to consider the notion that Rebol&#39;s fundamental idea is flawed and it *should* die out.  In fact: I started out getting involved in Rebol *to prove to Reichart that it was bad*, and using it for Qtask was misguided.  My attempts to construct that proof ran up against the fact that its odd plasticity and choice to throw out the rulebook on what a computer language is-or-should-be gave it a slippery yet timeless nature...like English itself.

**But given the bus-factor-of-one nature of Ren-C, I should probably be thinking more about how to communicate that to new audiences, vs. going too deeply into an engineering project where I try to re-graft Ren-C onto a Go-like runtime model.**

So maybe I need to be better about making YouTube videos, packaging demos, and showing off the existing infrastructure.  **When I look at other WebAssembly language projects, we actually still compare favorably.**  And maybe I&#39;m too quiet about it for fear of looking a fool for all the things that I know aren&#39;t working right.  Still...my confidence increases as I&#39;ve been moving the architecture around to try and steer away from the obviously bad ideas, in a way that new people coming in would be able to shore up missing pieces.

## ...Predictions Are Hard To Make

It probably looks as if I&#39;ve been notoriously bad at predicting what things are going to get accomplished.  I&#39;d wanted 2021 to hopefully be when stacklessness got integrated, and I wanted to see progress on debugging.  And it may seem like none of that happened.

But sometimes progress is subtle.  There were major barriers to making R3-Alpha&#39;s PARSE architecture stackless, but the UPARSE design is much more amenable to it.  So I think the answer will just be that we&#39;ll skip stackless PARSE3 and just assume UPARSE is the future of PARSE.

And when it comes to debugging, I demonstrated some [impressive tracing in UPARSE](https://forum.rebol.info/t/getting-hooks-into-events-during-parse/1640/5?u=hostilefork) that works today...which is the sort of thing a user can customize.  Understanding how dialect authors are going to be able to hook and trace their dialects ties in a lot to seeing a big picture of how the evaluator itself might be traced, so all of this really does plug together.

Nevertheless, I feel skeptical of making new predictions.  Especially because here in 2022: *Realistically speaking, so long as I&#39;m traveling and trying to find a new home base it&#39;s hard to get very much done.*  I&#39;ve chosen to travel in Florida because things are open for business despite the existence of coronavirii...and that aligns with my belief that being vaccinated and boostered is enough to have a social life.  That means I am out maskless indoors doing a fair number of things with people...and changing locations every few days.  It may be a while before I can really focus on coding.

## So Let&#39;s Put Predictions On Hold, at least until I have a :derelict_house: 

One thing that&#39;s been working so far, it&#39;s my mandate on continuous integration and keeping all the things that are supposed to work, working, as new experiments are tried.  This is not a natural habit for the personality type that programs in Rebol.  People drawn to the language are not *&quot;correct-by-construction&quot;* folks, more like Larry The Cable Guy &quot;Git-R-Done&quot; mentality.

I want to keep developing @BlackATTR&#39;s QUERY and make it part of that &quot;everything is kept working&quot; strategy.

All of @gchiu&#39;s projects, as well.  And my USCII, Whitespacers, `hostilefork.com` itself, etc.  Anything I can convince @giuliolunati to put in a GitHub workflow, as well!

I want to re-commit to [Rebmu](http://rebmu.hostilefork.com/), also, and make it part of the CI tests.  It might seem like I am always putting this off--even though I claim to say it&#39;s one of the big motivators, the *&quot;great code golf game in the sky&quot;* that I say I&#39;m pursuing.  (When have you seen me solve a puzzle or develop it lately?)  But it&#39;s actually in the back of my mind, always.

It was nice with Whitespace to actually draw some attention from a curator of [collections of implementations of whitespace](https://github.com/wspace/corpus)... @aarchi.  He said he found it to be one of the more interesting examples, and that&#39;s always been my goal with this.  To build on the novelty of the medium and give people a new tool to think.  (Recently re-watching that movie [&quot;Arrival&quot;](https://www.youtube.com/watch?v=8Fc-7SuebTQ) and the &quot;language/weapon/tool&quot; bit.)

I&#39;m a few minutes from February so I&#39;ll just close by saying: continue automating, continue examples, and maybe do a bit more YouTube evangelism.  I&#39;ll keep frittering with the mechanics.  And get my laptop fixed (!)</description>
    
    <lastBuildDate>Fri, 04 Feb 2022 19:20:37 +0000</lastBuildDate>
    <category>Announcements</category>
    <atom:link href="https://forum.rebol.info/t/belated-2021-post-mortem-new-years-2022-vision/1786.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Belated 2021 Post-Mortem + New Years 2022 Vision ðŸ¤¹</title>
        <dc:creator><![CDATA[Cplus]]></dc:creator>
        <description><![CDATA[
            <p>When this year can we expect to see full "message passing" inter-operability between Ren-C and Red?</p>
<p>The very basics - MOLD and SAVE are almost in place.</p>
<p>The "binary" equivalent with some form of compatible REBBIN is surely not that hard to agree between the two sets of developers.</p>
<p>Fuller, fluid, message passing - for example the seamless invoking of functions and continuations within a running instance of the other language would be an important demonstration of the REBOL cousins' languages abilities to do what they have stated is a desired characteristic of their respective dialects of REBOL.</p>
<p>This would also harness the strengths of both dialects - for each has been focused these last few years on different arenas. Together, they have the makings of a formidable whole.</p>
          <p><a href="https://forum.rebol.info/t/belated-2021-post-mortem-new-years-2022-vision/1786/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/belated-2021-post-mortem-new-years-2022-vision/1786/5</link>
        <pubDate>Fri, 04 Feb 2022 19:20:37 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1786-5</guid>
        <source url="https://forum.rebol.info/t/belated-2021-post-mortem-new-years-2022-vision/1786.rss">Belated 2021 Post-Mortem + New Years 2022 Vision ðŸ¤¹</source>
      </item>
      <item>
        <title>Belated 2021 Post-Mortem + New Years 2022 Vision ðŸ¤¹</title>
        <dc:creator><![CDATA[johnk]]></dc:creator>
        <description><![CDATA[
            <p>Happy New Year and thanks for the excellent update.</p>
<aside class="quote no-group" data-username="hostilefork" data-post="1" data-topic="1786">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>(Makes me think of the <a href="https://en.wikipedia.org/wiki/Conservation_status">species extinction risk scale</a>. Sure, the source code is on GitHub, and the topic list of this forum seems to be on the Internet Archive...but if you click through to individual pages there's nothing about the post contents. Should we do a scrape of the data here and put it elsewhere?)</p>
</blockquote>
</aside>
<p>Following this <code>wget</code> suggestion (<a href="https://meta.discourse.org/t/how-to-create-a-read-only-archive-version-of-discourse-content/139256" class="inline-onebox">How to create a read only, archive version of discourse content - support - Discourse Meta</a>) I just quickly did a full scrape of this forum (public posts only). It works very well.<br>
All the best, John</p>
          <p><a href="https://forum.rebol.info/t/belated-2021-post-mortem-new-years-2022-vision/1786/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/belated-2021-post-mortem-new-years-2022-vision/1786/4</link>
        <pubDate>Fri, 04 Feb 2022 01:08:44 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1786-4</guid>
        <source url="https://forum.rebol.info/t/belated-2021-post-mortem-new-years-2022-vision/1786.rss">Belated 2021 Post-Mortem + New Years 2022 Vision ðŸ¤¹</source>
      </item>
      <item>
        <title>Belated 2021 Post-Mortem + New Years 2022 Vision ðŸ¤¹</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>Like it is said, "if you do what everyone else is doing, you will get the same as all of them".<br>
The lack of continuity on the posts of the f00 team is legendary, and combined with the prioritised goals it is encouraging many to wander on.<br>
The dynamics of REN-C, changing even core behavior if seen as a promising experiment is on the complete other end of the spectrum. Not suitable for many seeking an alternative to the library madness, where using even for standard functionality refuge is sought in external API's, for their stable project needs.</p>
<p>Fortunately I am very busy with my new career, but as a downside almost no devtime. But still like what I am doing, so must do more now ... <img src="https://forum.rebol.info/images/emoji/twitter/smiley.png?v=9" title=":smiley:" class="emoji" alt=":smiley:"></p>
          <p><a href="https://forum.rebol.info/t/belated-2021-post-mortem-new-years-2022-vision/1786/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/belated-2021-post-mortem-new-years-2022-vision/1786/3</link>
        <pubDate>Thu, 03 Feb 2022 19:56:09 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1786-3</guid>
        <source url="https://forum.rebol.info/t/belated-2021-post-mortem-new-years-2022-vision/1786.rss">Belated 2021 Post-Mortem + New Years 2022 Vision ðŸ¤¹</source>
      </item>
      <item>
        <title>Belated 2021 Post-Mortem + New Years 2022 Vision ðŸ¤¹</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>A little addendum from one of my recent favorite YouTubers, Joel Haver, on doing what you love:</p>
<div class="onebox lazyYT lazyYT-container" data-youtube-id="BizvIhp5clM" data-youtube-title="Some Scattered Thoughts on Doing What You Love" data-parameters="feature=oembed&amp;wmode=opaque">
  <a href="https://www.youtube.com/watch?v=BizvIhp5clM" target="_blank" rel="noopener">
    <img class="ytp-thumbnail-image" src="https://i.ytimg.com/vi/BizvIhp5clM/maxresdefault.jpg" title="Some Scattered Thoughts on Doing What You Love" width="480" height="360">
  </a>
</div>

<p>And I think that is a good meditation on not really deviating from the parts of this that I find interesting, but staying that course...even if it takes time.</p>
<p>So I'll try and promise to keep doing the parts that impress me.  And someday, it might find an audience.</p>
          <p><a href="https://forum.rebol.info/t/belated-2021-post-mortem-new-years-2022-vision/1786/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/belated-2021-post-mortem-new-years-2022-vision/1786/2</link>
        <pubDate>Tue, 01 Feb 2022 07:16:11 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1786-2</guid>
        <source url="https://forum.rebol.info/t/belated-2021-post-mortem-new-years-2022-vision/1786.rss">Belated 2021 Post-Mortem + New Years 2022 Vision ðŸ¤¹</source>
      </item>
      <item>
        <title>Belated 2021 Post-Mortem + New Years 2022 Vision ðŸ¤¹</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <h1>Happy 2022!</h1>
<p><strong>...and I Hope Your New Year's Was Better Than Mine...</strong> <img src="https://forum.rebol.info/images/emoji/twitter/man_facepalming.png?v=9" title=":man_facepalming:" class="emoji" alt=":man_facepalming:"></p>
<p>Though I've spent most of the last few New Years Days (and this last one) traveling and in some hotel...I've usually gotten myself a nice supply of beer, and worked start-to-finish through a post.  I talk about what worked and didn't work, and where things might go next.  Although it generally takes the greater part of a day to write those, it's in some ways kind of a fun thing to write...and I was always pleased to beat Red to the punch with accomplishments I found more impressive.</p>
<p><em>This year felt unfortunately different.</em>  I had a big wave of pessimism for all kinds of reasons--ranging from personal relationships, to my new laptop screen getting cracked when it was in my bag...to just a general feeling that the world is going to hell in a handbasket.</p>
<p><strong><img src="https://forum.rebol.info/images/emoji/twitter/skull.png?v=9" title=":skull:" class="emoji" alt=":skull:"> ...But It's Not As Grim As All That... <img src="https://forum.rebol.info/images/emoji/twitter/potato.png?v=9" title=":potato:" class="emoji" alt=":potato:"></strong></p>
<p>After eating a ridiculous potato from <a href="https://stpeterising.com/home/2021/9/16/a-loaded-baked-potato-restaurant-the-half-baked-potato-is-coming-soon-to-downtown-st-pete">A Hipster Potato Restaurant In St. Petersburg</a>--and inadvisedly drinking 2 Sugar-Free Red Bulls--my stomach and brain weren't going to sleep for a long time.</p>
<p>Though traveling makes retrieving a repaired laptop on an extended warranty difficult, I still had my old laptop with me.  So I dug it out, and found an unfinished post about a seemingly-esoteric point about invisible evaluations and void isotopes.  <a href="https://forum.rebol.info/t/pure-vs-impure-invisibility-do-we-need-both/1782">Some deep realizations clicked into place</a>.  Those realizations led to a proud thought:</p>
<p><strong>2021 was the year of invention for BAD-WORD!s, "isotopes", and ^META.  While the older invention of NULL was akin to mathematicians inventing zero to solve previously hard problems... <em>isotopes and meta-transformations are like the invention of imaginary numbers</em>.</strong></p>
<p>Having that energy boost put me on a slight incline toward positive thinking.  Enough so that I'm pushing out a New Year's post before the calendar ticks over to February... here goes:</p>
<h2>UPARSE Is Already a Big Success Story</h2>
<p>Many who use Rebol got addicted because of PARSE.  But people who work with other languages and parser combinators have wondered what the big deal is.  Though Rebol's PARSE is a literate alternative to simple RegEx scenarios, it's weak at building high level structures from smaller simpler parsers--<em>there are too many inconveniences in writing reusable rules</em>.</p>
<p>UPARSE stands for <a href="https://github.com/metaeducation/ren-c/blob/26752e701d9585a7dd5bb1c4cb2e78c901908c5b/src/mezz/uparse.reb"><em>(U)sermode PARSE</em></a> and to me it deals Rebol back in the parsing game:</p>
<ul>
<li>
<p>It keeps the classic feel of PARSE alive, while bringing its power up to the level of combinators in other languages.  Arbitrary values can be synthesized from processing the input, instead of just data captures at the level of the input series.</p>
</li>
<li>
<p>You can come up with "new keywords" without waiting for someone to do so.  These are expressed as ordinary functions with multiple return values, and hence can be optimized as natives.</p>
</li>
<li>
<p>The behavior of values of certain datatypes themselves can be overridden, to bend parsing to entirely different meanings.</p>
</li>
<li>
<p>It has a <a href="https://github.com/metaeducation/ren-c/blob/26752e701d9585a7dd5bb1c4cb2e78c901908c5b/tests/parse/examples/maxmatch.parse.test.reb">generic architecture for rolling back the effects of combinators</a>, with a default behavior that lets the average combinator author avoid the details if they just want any failure to roll back everything in the order it was done.</p>
</li>
<li>
<p>As a proof of its flexibility, a Rebol2/Red-compatible combinator set is defined.</p>
</li>
</ul>
<p><strong>But besides the combinators, the usermode implementation of the UPARSE engine itself that composes and runs them is as much of the story as anything else.</strong>  Rebol has had a shaky history of giving usermode code the same perceptive power as what could be done from C...and that can be as basic as how to tell the difference between <strong>[a b #[none]]</strong> and <strong>[a b]</strong> with looking at the result of THIRD of the block.  All these upgrades come into the mix in UPARSE...from FRAME! mechanics and specializations to ^META and isotopes and generic quoting.</p>
<p>On the downside: it hasn't been optimized much yet, so the performance is abysmal...and a lot of work is left to do on error messages.  But seeing how to build a dialect in this way--where it's not like you have to be a C programmer, but you can wire together the pieces--is the "Minecraft of Programming" I talk about.</p>
<h2>The <a href="https://forum.rebol.info/t/the-new-ren-c-github-action-run-natively-run-on-web/1562">Ren-C GitHub Action</a> Has Been Amazing</h2>
<p>Although it required me gritting my teeth through some JavaScript programming, we now have a turnkey way to install an up to date interpreter with a line of code on a cloud runner for Mac, Linux, and Windows...as well as run automation of the latest web build.</p>
<p>It's a big force multiplier, and it's helped with testing the <a href="https://forum.rebol.info/t/whitespace-interpreter-revisited/1482">Whitespace Interpreter Dialect</a> and the <a href="https://forum.rebol.info/t/uscii-seen-with-new-eyes/1713">USCII Dialect</a>...both of which received major updates this year.  When Redbol examples are given they often risk merely showing the language is capable of generic computation and if you put enough hours into it then you might get something that sort-of-works.  But I feel these are approaching good examples of the form--where they lay out the particular power and composability that Ren-C has been angling for.</p>
<h2>
<a href="https://forum.rebol.info/t/devices-are-gone-but-what-were-they/1692">Devices are Gone</a> and <a href="https://forum.rebol.info/t/libuv-integration-has-started-an-i-o-renaissance/1694">now it's all libUV</a>
</h2>
<p>I think that libUV pretty much represents the objectives of what Carl might have wanted a device layer to be.  Not only is it pure C code that can be built with things like the TinyC compiler, it compiles for esoteric platforms like Haiku.  It's something Rebol might well have used had it been around.</p>
<p>And the web build doesn't use libUV at all--accomplishing its network reads and such through completely different mechanisms.  So it shows the language is staying pure and repurposeable on platforms that don't have threads or whatever dependencies libUV requires.  A simple stripped down version could just offer C stdio (for instance).</p>
<p>There's a long way to go for our usage of libUV to live up to its potential.  But it gives the foundations for doing things like a <a href="https://forum.rebol.info/t/semantics-of-read-and-tcp-streams-past-and-future/1733">good version of async IO, where you code in a synchronous style</a>.  (I've explained that I think the old WAIT/AWAKE model really <a href="https://forum.rebol.info/t/the-weirdness-of-wait/1703">represented a dead end</a>, and so it had to be ripped out).</p>
<h2>
<a href="https://forum.rebol.info/t/the-sea-of-words/1564"><em>Sea of Words</em></a> and Customizable Modularization Arrives</h2>
<p>What was supposed to be unique about Rebol's modules was that the code that processed headers would be like a dialect.  That dialect was processed by usermode code, and you could write your own spin on it if you had some other idea of how you wanted modularization to work.</p>
<p>It's early yet to really say for sure how the mechanics behind this will evolve.  But there have been big steps taken--and the personal success I feel is how the test dialect can create modules out of individual tests.  So the test files are really making thousands upon thousands of isolating contexts, and when the tests are done running the user context is not contaminated at all.  This makes the tests less subject to weird side effects from each other...keeps things tidy...and is overall good for the garbage collector as well.</p>
<p>Disconnecting the use of words from the creation of variables is good for all the reasons I cite.  I've been very happy with that idea, though what "attachment" to a context means has design work to do.  Make no mistake--this is a process of invention--and so it's going to be weird and take time.</p>
<h2>
<a href="https://forum.rebol.info/t/get-set-vs-pick-poke-whats-the-difference/1719">PICK and POKE and Pathing Are Resolved</a> (I Think)</h2>
<p>I've struggled since very early on to tame "path dispatch", which was very oddly shaped.  I'm not going to rehash all of the thought process.  But I'm pleased with the outcome, and I think it will generalize well to extension types.</p>
<h2>First Try At String Binding + Interpolation</h2>
<p>It isn't there yet, but it has been prototyped.  I've written up a post about where I think binding/scoping has to go:</p>
<p><a href="https://forum.rebol.info/t/rebol-and-scopes-well-why-not/1751" class="inline-onebox">Rebol And Scopes: Well, Why Not?</a></p>
<p>There are still no easy answers.  But there's good news about having so many complex codebases in play (like UPARSE, whitespace dialect, etc.) that are not throwing softballs at the language.  If new binding concepts add functionality but don't break any of that, that's a good sign it may be good.</p>
<h2>...A Lot Of Other Stuff Happened...</h2>
<p>This is just a mini list of some of the things I find most notable to call out. As usual, you can scroll through posts or commit logs to see more.</p>
<p>But I also got the chance to visit <a class="mention" href="/u/blackattr">@BlackATTR</a> and meet his family and dogs, so that was fun.  We got some work done on his QUERY dialect, but more to go.</p>
<p>I managed to get ODBC and webserver bugs fixed for <a class="mention" href="/u/gchiu">@gchiu</a> so he could do a demo, and to put it on GitHub Actions with tests.</p>
<hr>
<h1>What Hangs in the Balance for 2022?</h1>
<p>I mentioned my bad New Years, and reading <a href="https://www.red-lang.org/2021/12/2021-winding-down.html">Red's New Years post</a> did not help, because it felt so incredibly <em>cyclic</em>.  Seeing them start a New Year by long-windedly plagiarizing <a href="https://forum.rebol.info/t/back-to-personal-computing/186">Back to Personal Computing</a>... <em>again</em>... made me fear their man-years of toil without heeding advice or warnings has grown no audience for either their work, nor Ren-C's inventions.  Their formerly active YCombinator group had a collective yawn about it...<a href="https://news.ycombinator.com/item?id=29758024">one comment</a> at time of writing, so they seem to be slipping off the radar...even though they are much less research-oriented and more "give-the-people-what-they-want-right-now" oriented (in theory).</p>
<p>Apologies to Gregg Irwin for ranting at him.  <strong>But we/I sadly can't count on Red to keep an audience alive for Redbols, as the old guard moves on and new people aren't there to replace them.</strong>  And I'm not a marketer, especially since I fundamentally disagree with the way social media power structures work.  So Ren-C's cool creations are at high risk of not even making it to <a class="mention" href="/u/blackattr">@BlackATTR</a>'s "bad"-case outcome of becoming <em>"a museum piece like the Antikythera mechanism."</em></p>
<p><em>(Makes me think of the <a href="https://en.wikipedia.org/wiki/Conservation_status">species extinction risk scale</a>.  Sure, the source code is on GitHub, and the topic list of this forum seems to be on the Internet Archive...but if you click through to individual pages there's nothing about the post contents.  Should we do a scrape of the data here and put it elsewhere?)</em></p>
<p>I have always been able to consider the notion that Rebol's fundamental idea is flawed and it <em>should</em> die out.  In fact: I started out getting involved in Rebol <em>to prove to Reichart that it was bad</em>, and using it for Qtask was misguided.  My attempts to construct that proof ran up against the fact that its odd plasticity and choice to throw out the rulebook on what a computer language is-or-should-be gave it a slippery yet timeless nature...like English itself.</p>
<p><strong>But given the bus-factor-of-one nature of Ren-C, I should probably be thinking more about how to communicate that to new audiences, vs. going too deeply into an engineering project where I try to re-graft Ren-C onto a Go-like runtime model.</strong></p>
<p>So maybe I need to be better about making YouTube videos, packaging demos, and showing off the existing infrastructure.  <strong>When I look at other WebAssembly language projects, we actually still compare favorably.</strong>  And maybe I'm too quiet about it for fear of looking a fool for all the things that I know aren't working right.  Still...my confidence increases as I've been moving the architecture around to try and steer away from the obviously bad ideas, in a way that new people coming in would be able to shore up missing pieces.</p>
<h2>...Predictions Are Hard To Make</h2>
<p>It probably looks as if I've been notoriously bad at predicting what things are going to get accomplished.  I'd wanted 2021 to hopefully be when stacklessness got integrated, and I wanted to see progress on debugging.  And it may seem like none of that happened.</p>
<p>But sometimes progress is subtle.  There were major barriers to making R3-Alpha's PARSE architecture stackless, but the UPARSE design is much more amenable to it.  So I think the answer will just be that we'll skip stackless PARSE3 and just assume UPARSE is the future of PARSE.</p>
<p>And when it comes to debugging, I demonstrated some <a href="https://forum.rebol.info/t/getting-hooks-into-events-during-parse/1640/5">impressive tracing in UPARSE</a> that works today...which is the sort of thing a user can customize.  Understanding how dialect authors are going to be able to hook and trace their dialects ties in a lot to seeing a big picture of how the evaluator itself might be traced, so all of this really does plug together.</p>
<p>Nevertheless, I feel skeptical of making new predictions.  Especially because here in 2022: <em>Realistically speaking, so long as I'm traveling and trying to find a new home base it's hard to get very much done.</em>  I've chosen to travel in Florida because things are open for business despite the existence of coronavirii...and that aligns with my belief that being vaccinated and boostered is enough to have a social life.  That means I am out maskless indoors doing a fair number of things with people...and changing locations every few days.  It may be a while before I can really focus on coding.</p>
<h2>So Let's Put Predictions On Hold, at least until I have a <img src="https://forum.rebol.info/images/emoji/twitter/derelict_house.png?v=9" title=":derelict_house:" class="emoji" alt=":derelict_house:">
</h2>
<p>One thing that's been working so far, it's my mandate on continuous integration and keeping all the things that are supposed to work, working, as new experiments are tried.  This is not a natural habit for the personality type that programs in Rebol.  People drawn to the language are not <em>"correct-by-construction"</em> folks, more like Larry The Cable Guy "Git-R-Done" mentality.</p>
<p>I want to keep developing <a class="mention" href="/u/blackattr">@BlackATTR</a>'s QUERY and make it part of that "everything is kept working" strategy.</p>
<p>All of <a class="mention" href="/u/gchiu">@gchiu</a>'s projects, as well.  And my USCII, Whitespacers, <code>hostilefork.com</code> itself, etc.  Anything I can convince <a class="mention" href="/u/giuliolunati">@giuliolunati</a> to put in a GitHub workflow, as well!</p>
<p>I want to re-commit to <a href="http://rebmu.hostilefork.com/">Rebmu</a>, also, and make it part of the CI tests.  It might seem like I am always putting this off--even though I claim to say it's one of the big motivators, the <em>"great code golf game in the sky"</em> that I say I'm pursuing.  (When have you seen me solve a puzzle or develop it lately?)  But it's actually in the back of my mind, always.</p>
<p>It was nice with Whitespace to actually draw some attention from a curator of <a href="https://github.com/wspace/corpus">collections of implementations of whitespace</a>... <a class="mention" href="/u/aarchi">@aarchi</a>.  He said he found it to be one of the more interesting examples, and that's always been my goal with this.  To build on the novelty of the medium and give people a new tool to think.  (Recently re-watching that movie <a href="https://www.youtube.com/watch?v=8Fc-7SuebTQ">"Arrival"</a> and the "language/weapon/tool" bit.)</p>
<p>I'm a few minutes from February so I'll just close by saying: continue automating, continue examples, and maybe do a bit more YouTube evangelism.  I'll keep frittering with the mechanics.  And get my laptop fixed (!)</p>
          <p><a href="https://forum.rebol.info/t/belated-2021-post-mortem-new-years-2022-vision/1786/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/belated-2021-post-mortem-new-years-2022-vision/1786/1</link>
        <pubDate>Tue, 01 Feb 2022 04:49:12 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1786-1</guid>
        <source url="https://forum.rebol.info/t/belated-2021-post-mortem-new-years-2022-vision/1786.rss">Belated 2021 Post-Mortem + New Years 2022 Vision ðŸ¤¹</source>
      </item>
  </channel>
</rss>
