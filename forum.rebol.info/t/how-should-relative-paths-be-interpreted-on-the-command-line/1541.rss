<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>How Should Relative Paths Be Interpreted On The Command Line?</title>
    <link>https://forum.rebol.info/t/how-should-relative-paths-be-interpreted-on-the-command-line/1541</link>
    <description>In Rebmake, you specify the path on the command line to make.r, and then you might specify other paths.  For example, to a config:

    $ ../somewhere/r3 ../../somewhere-else/make.r CONFIG=../configs/some-config.r

What happens is that **`system/options/boot`** will try its best to get a *full* path to wherever the r3 was.

Next, the make.r script will be found, and it *changes the current directory to the directory the script is in*.  The rationale for this change is that you can easily write that script to talk about files relative to its location without qualifying them.  That makes sense.

What to make of the CONFIG&#39;s relative path, then?  Intuitively it seems those paths should be relative to wherever you were at the moment you ran the command...because it&#39;s all part of the same *command line*.

Yet under this set of circumstances, you&#39;ve been changed into the directory of the script by the time it gets a chance to process the config.  It would thus interpret the above as **../../somewhere-else/../configs/some-config.r**

## Could Someone Research Precedent For Handling This?

My instincts are that command line arguments should be interpreted relatively to **system/options/path**, e.g. wherever you spawned r3 from.

Does anyone disagree with this being the general rule?  Do any programs give other precedent?</description>
    
    <lastBuildDate>Fri, 05 Mar 2021 13:23:07 +0000</lastBuildDate>
    <category>Console</category>
    <atom:link href="https://forum.rebol.info/t/how-should-relative-paths-be-interpreted-on-the-command-line/1541.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>How Should Relative Paths Be Interpreted On The Command Line?</title>
        <dc:creator><![CDATA[IngoHohmann]]></dc:creator>
        <description><![CDATA[
            <p>Off the cuff I can't think of any.</p>
          <p><a href="https://forum.rebol.info/t/how-should-relative-paths-be-interpreted-on-the-command-line/1541/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/how-should-relative-paths-be-interpreted-on-the-command-line/1541/2</link>
        <pubDate>Fri, 05 Mar 2021 13:23:07 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1541-2</guid>
        <source url="https://forum.rebol.info/t/how-should-relative-paths-be-interpreted-on-the-command-line/1541.rss">How Should Relative Paths Be Interpreted On The Command Line?</source>
      </item>
      <item>
        <title>How Should Relative Paths Be Interpreted On The Command Line?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>In Rebmake, you specify the path on the command line to make.r, and then you might specify other paths.  For example, to a config:</p>
<pre><code>$ ../somewhere/r3 ../../somewhere-else/make.r CONFIG=../configs/some-config.r
</code></pre>
<p>What happens is that <strong><code>system/options/boot</code></strong> will try its best to get a <em>full</em> path to wherever the r3 was.</p>
<p>Next, the make.r script will be found, and it <em>changes the current directory to the directory the script is in</em>.  The rationale for this change is that you can easily write that script to talk about files relative to its location without qualifying them.  That makes sense.</p>
<p>What to make of the CONFIG's relative path, then?  Intuitively it seems those paths should be relative to wherever you were at the moment you ran the command...because it's all part of the same <em>command line</em>.</p>
<p>Yet under this set of circumstances, you've been changed into the directory of the script by the time it gets a chance to process the config.  It would thus interpret the above as <strong>../../somewhere-else/../configs/some-config.r</strong></p>
<h2>Could Someone Research Precedent For Handling This?</h2>
<p>My instincts are that command line arguments should be interpreted relatively to <strong>system/options/path</strong>, e.g. wherever you spawned r3 from.</p>
<p>Does anyone disagree with this being the general rule?  Do any programs give other precedent?</p>
          <p><a href="https://forum.rebol.info/t/how-should-relative-paths-be-interpreted-on-the-command-line/1541/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/how-should-relative-paths-be-interpreted-on-the-command-line/1541/1</link>
        <pubDate>Fri, 05 Mar 2021 10:26:32 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1541-1</guid>
        <source url="https://forum.rebol.info/t/how-should-relative-paths-be-interpreted-on-the-command-line/1541.rss">How Should Relative Paths Be Interpreted On The Command Line?</source>
      </item>
  </channel>
</rss>
