<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Just moving ahead now with GTK3</title>
    <link>https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603</link>
    <description>Decided to just make a start at a GTK(3) extension.

Made a start and just add many GTK3 functions for all kind of GTKWidgets.

(Just have to figure out how to rebUnbox a single character and how to return one. Its type is now issue!)

You can find changes in the gtk3and4 branch
https://github.com/r3n/ren-c/tree/gtk3and4

(Oh I did not test any, and not even compiled, I said I made a start ;-) )</description>
    
    <lastBuildDate>Tue, 15 Jun 2021 20:00:10 +0000</lastBuildDate>
    <category>GUI</category>
    <atom:link href="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Just moving ahead now with GTK3</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>Yes, I had already figured that out, I am now in the process of getting the C function callback do exactly that.<br>
And I had that working too, but I  think I had it working with some unsaved code on top of it that I did save to commit a change and now I can't get the working version reconstructed.</p>
<p>(The callbacks are working but passing the function or block and rebElide that does not and is very likely to exit the console)</p>
<pre><code>// Signal helper C
static void self_signal_connect_helper(GtkWidget *widget,
                                       gpointer   user_data){
    rebElide("print {Inside self_signal_connect_helper}");
    rebElide("print {before rebElide of user_data}");
    rebElide(user_data);
    rebElide("print {After rebElide of user_data}");
    return;
}
</code></pre>
<p>And setting this in g-connect-signal-data</p>
<pre><code>result = g_signal_connect_data(instance, detailedsignal, G_CALLBACK(self_signal_connect_helper), chandler, NULL, flags);


gtk-main
Inside self_signal_connect_helper
before rebElide of user_data
Segmentatiefout (geheugendump gemaakt)
</code></pre>
<p>Probably need to cast the chandler to the data format, but somehow this was the change that made the thing work (apparently).</p>
          <p><a href="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/22">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/22</link>
        <pubDate>Tue, 15 Jun 2021 20:00:10 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1603-22</guid>
        <source url="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603.rss">Just moving ahead now with GTK3</source>
      </item>
      <item>
        <title>Just moving ahead now with GTK3</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>You cannot pass a Ren-C function as a callback.  C does not know how to call Ren-C functions without the rebXXX() wrapping.</p>
<p>What you can do is create a C function...pass <em>that</em> as a callback, and use the Ren-C API inside the C function.</p>
<p>I feel I have said something in this vein before.</p>
          <p><a href="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/21">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/21</link>
        <pubDate>Tue, 15 Jun 2021 19:44:52 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1603-21</guid>
        <source url="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603.rss">Just moving ahead now with GTK3</source>
      </item>
      <item>
        <title>Just moving ahead now with GTK3</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>So I had something working, but now the magic combination appears to have gotten lost in the battle.</p>
<p>When I use a debug build with <code>debug: asserts</code> the connect signal function kills the console:</p>
<pre><code>g-signal-connect-data get-handle button1 "clicked" get-handle :f get-handle :f null 0    
r3: /.../r3n-c/src/include/datatypes/sys-handle.h:54: Is_Handle_Cfunc: Controletest 'CELL_KIND(v) == REB_HANDLE' faalt.
Afgebroken (geheugendump gemaakt)
</code></pre>
<p>And that is not very helpful, even if I would translate it into English :-/</p>
<p>It is kind of essential that a REN-C function can be passed as or to a CALLBACK function. (GTK needs the CallBack function to be a C function).</p>
          <p><a href="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/20">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/20</link>
        <pubDate>Tue, 15 Jun 2021 18:04:08 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1603-20</guid>
        <source url="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603.rss">Just moving ahead now with GTK3</source>
      </item>
      <item>
        <title>Just moving ahead now with GTK3</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>In the course of all changes that were made to get Ren-C where it is today, how types work has been subject too. The way they used to be in R3-Alpha is incomparable to todays Ren-C source.</p>
<p>So do GOB! type inner working.<br>
If one makes a GOB type</p>
<pre><code>&gt;&gt; gobj: make gob! []
== make custom! [offset: 100.0x100.0 size: 0.0x0.0 alpha: 255]
</code></pre>
<p>you note that this is just a small subset of things you can think of that a graphics object needs.</p>
<p>Extending an existing GOB like you would do with an ordinary object does not work.</p>
<pre><code>&gt;&gt; gobj2: make gobj [extra: 1]
** Error: Datatype does not have a MAKE handler registered
** Where: make console
** Near: [*** make gobj [extra: 1] **]
** Line: 1
</code></pre>
<p>As this is rather cryptic code that will be taking me a lot of time figuring out, I will now "invent" a new type of object that will be just an object containing the items I will need in the process. The object type will be called a DOB! a Display OBject.<br>
This will do perfectly for now and will be extensible when needed.<br>
&gt;&gt; dob: make object! [offset: 100.0x100.0 size: 0.0x0.0 alpha: 255]<br>
** Syntax Error: invalid "pair" -- ""<br>
** Where: transcode if load trap ext-console-impl entrap console<br>
** Near: (line 1) dob: make object! [offset: 100.0x100.0 size: 0.0x0.0 alpha: 255]<br>
** File: -tmp-boot-<br>
** Line: 5307</p>
<p>Well okay like this <img src="https://forum.rebol.info/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
<pre><code>&gt;&gt; dob: make object! [offset: 100x100 size: 00x0 alpha: 255] 
== make object! [
    offset: 100x100
    size: 0x0
    alpha: 255
]
</code></pre>
<p>and now it can be extended too:</p>
<pre><code>&gt;&gt; dob2: make dob [extra: true]
== make object! [
    offset: 100x100
    size: 0x0
    alpha: 255
    extra: #[true]
]
</code></pre>
<p>There may be many other effects of the made changes that make working with Ren-C a challenge. That is not a bad thing, but where we find similar issues, it is good to think about bringing back a thing or two (not change things back but forward!).</p>
          <p><a href="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/19">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/19</link>
        <pubDate>Thu, 27 May 2021 07:46:19 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1603-19</guid>
        <source url="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603.rss">Just moving ahead now with GTK3</source>
      </item>
      <item>
        <title>Just moving ahead now with GTK3</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>It still has some extra debugging prints but basically it is a SUCCESS!!</p>
<p>This is some plain GTK code to enter (just copy and paste into your console)</p>
<pre><code>gtk-init
window: gtk-window-new 0
gtk-window-set-title window "Ren-C"
g-signal-connect-data window "destroy" get-handle :gtk-main-quit window null 2
box1: gtk-box-new 0 6
gtk-container-add window box1
label1: gtk-label-new "Label!"
blok: [print "Hello"]
f: function [][print "Greetings from function f!!!"]
button1: gtk-button-new-with-label "Impressive!"
g-signal-connect-data button1 "clicked" :f null null 0
gtk-container-add box1 label1
gtk-container-add box1 button1
gtk-widget-show-all window
gtk-box-set-homogeneous box1 true
gtk-box-get-homogeneous box1
gtk-main-level
gtk-main
</code></pre>
<p>And it is returning on the button click:</p>
<pre><code>&gt;&gt; gtk-main
Inside self_signal_connect_helper
main level is 1 HIGH
before rebElide of user_data
Greetings from function f!!!
After rebElide of user_data
</code></pre>
<p>I must clean up the code, but to preserve working code I just pushed to the r3n branch for you all to reproduce.</p>
<p>Having these things liberates the way  to the next level.</p>
<p>I have several code snippets of VIEW and LAYOUT functions laying around so time to decide on how to use GOB!s and what is most efficient for this project.</p>
          <p><a href="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/18</link>
        <pubDate>Sun, 23 May 2021 12:25:32 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1603-18</guid>
        <source url="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603.rss">Just moving ahead now with GTK3</source>
      </item>
      <item>
        <title>Just moving ahead now with GTK3</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>I implemented a little helper function I called GET-HANDLE to return a handle! from different kinds of input. So I hope that helps.</p>
          <p><a href="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/17</link>
        <pubDate>Sat, 22 May 2021 17:58:59 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1603-17</guid>
        <source url="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603.rss">Just moving ahead now with GTK3</source>
      </item>
      <item>
        <title>Just moving ahead now with GTK3</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="iArnold" data-post="15" data-topic="1603">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/iarnold/40/226_2.png" class="avatar"> iArnold:</div>
<blockquote>
<p>The way this is passed is by using <code>as-integer! :function</code>.</p>
<p>In Ren-C there seems not to be a way to get a handle like that.</p>
</blockquote>
</aside>
<p>You'll need to pass GTK a C function pointer, that uses the rebXXX() routines in its implementation.</p>
<p>Passing a pointer to a Rebol function to C directly requires FFI functionality, which I've removed for now.</p>
          <p><a href="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/16</link>
        <pubDate>Sat, 22 May 2021 16:16:24 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1603-16</guid>
        <source url="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603.rss">Just moving ahead now with GTK3</source>
      </item>
      <item>
        <title>Just moving ahead now with GTK3</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>When I look at the old GTK(2) binding that was made for Red versions before 0.4.2 then I notice that the GTK functions are mapped to the Redbol functions through a cdecl interfacing.</p>
<p>We do this binding with some more handcraftingwork, which may be a bit more work but comes with the advantage of being able to do a little steering inside.</p>
<p>Then when the g_signal_connect_data is available as connect-signal and is being invoked, the arguments need to be passed as well. One of the arguments is the callback function. The way this is passed is by using <code>as-integer! :function</code>.</p>
<p>In Ren-C there seems not to be a way to get a handle like that.<br>
Current state is for example TO INTEGER! only supports the ISSUE! type that was formerly known as CHAR! so #"s" thingy's.</p>
          <p><a href="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/15</link>
        <pubDate>Fri, 21 May 2021 20:21:12 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1603-15</guid>
        <source url="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603.rss">Just moving ahead now with GTK3</source>
      </item>
      <item>
        <title>Just moving ahead now with GTK3</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>The segfault was gone for a moment.<br>
But that was not good news, g-signal-connect-data just instantly quit the console at first call <img src="https://forum.rebol.info/images/emoji/twitter/frowning.png?v=9" title=":frowning:" class="emoji" alt=":frowning:"></p>
<p>Now the segfault is back. Still quitting console here.</p>
<p>Cleaned up again and now the g-signal-connect-data function is returning a result again. Segfault still when exiting "program".</p>
          <p><a href="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/14</link>
        <pubDate>Wed, 19 May 2021 17:37:57 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1603-14</guid>
        <source url="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603.rss">Just moving ahead now with GTK3</source>
      </item>
      <item>
        <title>Just moving ahead now with GTK3</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="iArnold" data-post="12" data-topic="1603">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/iarnold/40/226_2.png" class="avatar"> iArnold:</div>
<blockquote>
<p>Now</p>
<ol>
<li>Solve the segfault issue</li>
<li>Find a way to make it perform Rebol code and not just a C function.</li>
<li>Determine a good place to hold Rebol code for the view function, so it will only be included when the extension is built.</li>
<li>Add the world of gtk functions and rename some to become Rebol friendly.</li>
<li>WD</li>
</ol>
</blockquote>
</aside>
<p>Point 3 is trivial. It should be inside the <strong>ext-EXTENSIONNAME-init.reb</strong><br>
Point 5 is trivial as well, it follow after the new point 5 which is the way opens up to add more similar GUI interfaces for use on systems that do not provide GTK3 natively.</p>
<p>Point 1 I have an idea that it might be helpful to attack this with debug asserts on (I have these turned of atm.) But that could be of no use at all.</p>
<p>Point 2 I had an idea to use the data field in combination with a convenience function that performs the data by use of rebElide of a data block!<br>
(But that can be a bad idea too).</p>
<p>Point 4 anyone can assist to add new functions here. I have a large spreadsheet of available functions.</p>
          <p><a href="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/13</link>
        <pubDate>Tue, 18 May 2021 10:08:49 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1603-13</guid>
        <source url="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603.rss">Just moving ahead now with GTK3</source>
      </item>
      <item>
        <title>Just moving ahead now with GTK3</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>Thanks again!</p>
<p>Looks like the start of another breakthrough:</p>
<blockquote>
<blockquote>
<p>g-signal-connect-data window "destroy" :gtk-main-quit "" 0 0<br>
== 43</p>
</blockquote>
</blockquote>
<p>43 ???????<br>
shouldn't that be 42 <img src="https://forum.rebol.info/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
<blockquote>
<blockquote>
<p>gtk-main<br>
And when closing the applicationwindow<br>
Segmentatiefout (geheugendump gemaakt)<br>
(^ Dutch language)<br>
And exits the R3 console back into the terminal session.</p>
</blockquote>
</blockquote>
<p>Updated some code now and hereby provide the code to play with:</p>
<blockquote>
<p>gtk-init<br>
window: gtk-window-new 0<br>
gtk-window-set-title window "Ren-C"<br>
g-signal-connect-data window "destroy" :gtk-main-quit null null 2<br>
box1: gtk-box-new 0 6<br>
gtk-container-add window box1<br>
label1: gtk-label-new "Label!"<br>
button1: gtk-button-new-with-label "Impressive!"<br>
g-signal-connect-data button1 "clicked" :gtk-main-quit null null 0<br>
gtk-container-add box1 label1<br>
gtk-container-add box1 button1<br>
gtk-widget-show-all window<br>
gtk-main</p>
</blockquote>
<p>You can press the button and the application closes.<br>
(With the segfault that is)</p>
<p>Now</p>
<ol>
<li>Solve the segfault issue</li>
<li>Find a way to make it perform Rebol code and not just a C function.</li>
<li>Determine a good place to hold Rebol code for the view function, so it will only be included when the extension is built.</li>
<li>Add the world of gtk functions and rename some to become Rebol friendly.</li>
<li>WD</li>
</ol>
          <p><a href="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/12</link>
        <pubDate>Mon, 17 May 2021 12:47:20 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1603-12</guid>
        <source url="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603.rss">Just moving ahead now with GTK3</source>
      </item>
      <item>
        <title>Just moving ahead now with GTK3</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="iArnold" data-post="10" data-topic="1603">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/iarnold/40/226_2.png" class="avatar"> iArnold:</div>
<blockquote>
<p><code>** Script Error: NULL is ~unset~ (use GET/ANY to GET voids)</code></p>
</blockquote>
</aside>
<p>This is due to case-sensitivity, which is still kind of up in the air.</p>
<p>Use <strong><code>null</code></strong>, lowercase.</p>
<p>To get it accepted in types of a function use <strong><code>&lt;opt&gt;</code></strong> in the types, e.g. <strong><code>func [&lt;opt&gt; integer! text!]</code></strong></p>
<p>Interestingly, those null-2? null-1? things are now done a better way, with the BAD-WORD! <strong><code>~null~</code></strong>.  It's coming together pretty well.</p>
          <p><a href="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/11</link>
        <pubDate>Mon, 17 May 2021 12:18:03 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1603-11</guid>
        <source url="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603.rss">Just moving ahead now with GTK3</source>
      </item>
      <item>
        <title>Just moving ahead now with GTK3</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p><a class="mention" href="/u/hostilefork">@hostilefork</a> I need to pass a NULL as an argument to my function</p>
<blockquote>
<p>help "NULL"<br>
Found these related words:<br>
NULL            void!<br>
null-1?         action!    Determine if argument would have triggered an...<br>
null-2          action!    Make the heavy form of NULL (can't be WORD!-f...<br>
null-2?         action!    Tells you if the argument is the heavy isotop...<br>
null?           action!    Tells you if the argument is not a value</p>
</blockquote>
<blockquote>
<p>help "none"<br>
Found these related words:<br>
none            void!</p>
</blockquote>
<p>But if I use NULL or none</p>
<pre><code>** Script Error: NULL is ~unset~ (use GET/ANY to GET voids)

** Script Error: none is ~unset~ (use GET/ANY to GET voids)
</code></pre>
<p>The g-signal-connect-data function is a tricky thing to implement...</p>
          <p><a href="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/10</link>
        <pubDate>Mon, 17 May 2021 09:04:47 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1603-10</guid>
        <source url="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603.rss">Just moving ahead now with GTK3</source>
      </item>
      <item>
        <title>Just moving ahead now with GTK3</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>Started the raw test here.<br>
gtk-init function returns an empty line. Seems to go allright there.</p>
<p>So now assign a window<br>
window: gtk-window-new 0<br>
Segmentation fault (memory dump made) &lt;-- translated message here</p>
<p>And the Rebol Console is exited with that.</p>
<p><em>Entering thinking mode</em></p>
<p>Solved!<br>
Wrong extraction method on my integer! argument.</p>
<p>Code pushed but can do with a cleanup. It is getting late here.</p>
<p><img src="https://forum.rebol.info/uploads/default/original/1X/c6cc55803d6d2b70c61760bdabd27e7f3651a6a8.png" alt="afbeelding" data-base62-sha1="smEk0sgsrXt6S2f9E3uoo0Cxp3O" width="259" height="271"></p>
<p>Only had no quit code attached to the Closing-cross, so had to <code>&lt;ctrl&gt;-\</code> in the console to end it after the window had disappeared.</p>
          <p><a href="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/9</link>
        <pubDate>Sun, 16 May 2021 19:45:37 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1603-9</guid>
        <source url="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603.rss">Just moving ahead now with GTK3</source>
      </item>
      <item>
        <title>Just moving ahead now with GTK3</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>Almost forgetting a very important thing here.<br>
Now the extension can be compiled if you add the extension name to the config file.<br>
There has to be a place for some Rebol code to be placed that deals with the functions in the extension, because unlike the MySQL binding where I considered it to be acceptable to deal with this in the user script, this will provide a VIEW like interface.<br>
But if one is to place the code in a mezz source file there must be a way to discard this when there is no GTK extension.</p>
<p>By the way, I looked at the mezz-math.r code and I saw a MATH func there that should take a block!, but when I did that</p>
<pre><code>&gt;&gt; math [2 + 3 * 4]
** Script Error: add does not allow #[datatype! block!] for its value1 argument
** Where: reduce either math console
** Near: [add [[] [] 2] [multiply [[] [] 3] [[] [] 4]] **]
** File: -tmp-boot-
** Line: 7278
</code></pre>
<p>Lucky 2 + 3 * 4 still normally returns 20 (you know I consider this better behaviour) <img src="https://forum.rebol.info/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>Need to update the file though to to stay a little actual, must add value for tau.</p>
          <p><a href="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/8</link>
        <pubDate>Sun, 16 May 2021 13:00:03 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1603-8</guid>
        <source url="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603.rss">Just moving ahead now with GTK3</source>
      </item>
      <item>
        <title>Just moving ahead now with GTK3</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>I have had a struggle with the connect-signal function, but I won the first battle.<br>
Also added a few TextView and TextBuffer functions now.</p>
<p>I do not yet know how to read in a single character or return it. A character is an issue! type in Ren-C now. It is for the character to be set for masked fields, so for a convenience purpose, not needed right away.</p>
<p>So, with all the examples in the extension it will be a breeze to add other widget types in at a later stage.</p>
<p>Proceeding with the next phase. By now it will be entering Rebol land again.</p>
<p>Time to figure out how to work with all of this and how to store/keep the various widget elements and how to get them updated.</p>
<p>For example a button "Add 1" press leads to the update in another element, say a label element that displays a number, then afterwards the label displays that number plus one.</p>
<p>The way some VIEW implementations, that I have seen till now, work, is iterate over the block collecting items until a new set-word! or widget type is encountered and then construct the desired item.<br>
It is my plan to implement VIEW this way also.</p>
          <p><a href="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/7</link>
        <pubDate>Sun, 16 May 2021 09:53:40 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1603-7</guid>
        <source url="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603.rss">Just moving ahead now with GTK3</source>
      </item>
      <item>
        <title>Just moving ahead now with GTK3</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>Next on the list:</p>
<ol>
<li>Add the signal connect functions g_signal_connect(), g_signal_connect_swapped() and g_signal_connect_data()</li>
<li>Add many more functions for other widgets.</li>
<li>Test some functions the hard way (without VIEW function)</li>
<li>Create a draft of the VIEW function using some binding examples</li>
</ol>
<p>So a start was made here, an exiting expedition ahead.</p>
          <p><a href="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/6</link>
        <pubDate>Fri, 14 May 2021 08:57:38 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1603-6</guid>
        <source url="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603.rss">Just moving ahead now with GTK3</source>
      </item>
      <item>
        <title>Just moving ahead now with GTK3</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="4" data-topic="1603">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p><span class="hashtag">#define</span> DEBUG_STDIO_OK</p>
</blockquote>
</aside>
<p>That worked! (Of course it did, you said so!)</p>
<p>One really nasty bug I found</p>
<pre><code> //  export gtk-grid-insert-row : native [
</code></pre>
<p>I think I created it when somehow in action at one time the entire <code>: native [ </code><br>
got lost, which was also a real pita to spot.</p>
<p>But at last! The entire thing compiles! So I pushed it (again) to the r3n repo.</p>
          <p><a href="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/5</link>
        <pubDate>Fri, 14 May 2021 08:32:53 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1603-5</guid>
        <source url="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603.rss">Just moving ahead now with GTK3</source>
      </item>
      <item>
        <title>Just moving ahead now with GTK3</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="iArnold" data-post="3" data-topic="1603">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/iarnold/40/226_2.png" class="avatar"> iArnold:</div>
<blockquote>
<p>error: conflicting types for ‘dont_include_stdio_h’</p>
</blockquote>
</aside>
<p>This is a warning letting you know that something you are including is bringing in a dependency on things like printf().  We like to not build on top of that stuff if we can.</p>
<p>If you're pulling in a file that includes stdio.h and want to ignore that, you can put:</p>
<p><span class="hashtag">#define</span> DEBUG_STDIO_OK</p>
<p>At the top of your file, or wherever before you <code>#include "sys-core.h"</code>.</p>
          <p><a href="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/4</link>
        <pubDate>Thu, 13 May 2021 21:32:45 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1603-4</guid>
        <source url="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603.rss">Just moving ahead now with GTK3</source>
      </item>
      <item>
        <title>Just moving ahead now with GTK3</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>Thanks Brian,</p>
<p>It is complaining about</p>
<blockquote>
<p>/mnt/LINWERK/dev/r3n-c/src/include/sys-core.h:133:20: error: conflicting types for ‘dont_include_stdio_h’<br>
133 |     <span class="hashtag">#define</span> printf dont_include_stdio_h</p>
</blockquote>
<p>(And if I put <em>import &lt;gtk/gtk.h&gt;</em> before <em>import sys-core.h</em> the complaint is about stdio.h)</p>
<p>I know it is not your priority, this is why somebody else must do it. You know I have an interest and it is hard so a great opportunity to learn a lot <img src="https://forum.rebol.info/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>A lot of compilation error still, lots of pointer issues, I confuse *p and p when I declared<br>
Type * p and then think p is the pointer to use in a function argument that wants a Type *, but I  figure it out. Learning by repetition.</p>
          <p><a href="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/3</link>
        <pubDate>Thu, 13 May 2021 21:28:01 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1603-3</guid>
        <source url="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603.rss">Just moving ahead now with GTK3</source>
      </item>
      <item>
        <title>Just moving ahead now with GTK3</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>It's not on my priority list, but... you are the boss of you.</p>
<p>FYI: there is a GTK file picker, but it hasn't been built/maintained for some time, and I haven't mucked with the linker switches to get linked to GTK either:</p>
<aside class="onebox githubblob">
  <header class="source">
      <a href="https://github.com/metaeducation/ren-c/blob/a7e8f404c745a349c5c8df007a84feb7b005e06a/extensions/view/mod-view.c#L312" target="_blank" rel="noopener">github.com</a>
  </header>
  <article class="onebox-body">
    <h4><a href="https://github.com/metaeducation/ren-c/blob/a7e8f404c745a349c5c8df007a84feb7b005e06a/extensions/view/mod-view.c#L312" target="_blank" rel="noopener">metaeducation/ren-c/blob/a7e8f404c745a349c5c8df007a84feb7b005e06a/extensions/view/mod-view.c#L312</a></h4>
<pre class="onebox"><code class="lang-c"><ol class="start lines" start="302" style="counter-reset: li-counter 301 ;">
<li>  // the OPENFILENAME structure...so we free caches of what we put in.</li>
<li>  //</li>
<li>  if (REF(filter))</li>
<li>      rebFree(lpstrFilter);</li>
<li>  rebFree(lpstrFile);</li>
<li>  if (REF(file) and lpstrInitialDir != nullptr)</li>
<li>      rebFree(lpstrInitialDir);</li>
<li>  if (REF(title))</li>
<li>      rebFree(lpstrTitle);</li>
<li>
<li class="selected">#elif defined(USE_GTK_FILECHOOSER)</li>
<li>
<li>  // gtk_init_check() will not terminate the program if gtk cannot be</li>
<li>  // initialized, and it will return TRUE if GTK is successfully initialized</li>
<li>  // for the first time or if it's already initialized.</li>
<li>  //</li>
<li>  int argc = 0;</li>
<li>  if (not gtk_init_check(&amp;argc, nullptr))</li>
<li>      fail ("gtk_init_check() failed");</li>
<li>
<li>  UNUSED(REF(filter));  // not implemented in GTK for Atronix R3</li>
</ol></code></pre>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

          <p><a href="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/2</link>
        <pubDate>Thu, 13 May 2021 19:56:41 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1603-2</guid>
        <source url="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603.rss">Just moving ahead now with GTK3</source>
      </item>
      <item>
        <title>Just moving ahead now with GTK3</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>Decided to just make a start at a GTK(3) extension.</p>
<p>Made a start and just add many GTK3 functions for all kind of GTKWidgets.</p>
<p>(Just have to figure out how to rebUnbox a single character and how to return one. Its type is now issue!)</p>
<p>You can find changes in the gtk3and4 branch</p><aside class="onebox githubfolder">
  <header class="source">
      <img src="https://github.githubassets.com/favicons/favicon.svg" class="site-icon" width="32" height="32">
      <a href="https://github.com/r3n/ren-c/tree/gtk3and4" target="_blank" rel="noopener">github.com</a>
  </header>
  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:690/345;"><img src="https://opengraph.githubassets.com/c4c153f24fdc05e5e67b7c7a2d93ee3dcefd5085b2213c032a47ddf65f5ac62e/r3n/ren-c" class="thumbnail" width="690" height="345"></div>

<h3><a href="https://github.com/r3n/ren-c/tree/gtk3and4" target="_blank" rel="noopener">r3n/ren-c</a></h3>

<p><a href="https://github.com/r3n/ren-c/tree/gtk3and4" target="_blank" rel="noopener">gtk3and4</a></p>

  <p><span class="label1">Library for embedding a Rebol interpreter into C codebases</span></p>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p>(Oh I did not test any, and not even compiled, I said I made a start <img src="https://forum.rebol.info/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"> )</p>
          <p><a href="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603/1</link>
        <pubDate>Thu, 13 May 2021 18:28:16 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1603-1</guid>
        <source url="https://forum.rebol.info/t/just-moving-ahead-now-with-gtk3/1603.rss">Just moving ahead now with GTK3</source>
      </item>
  </channel>
</rss>
