<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>What were Rebol2 Ports Like?</title>
    <link>https://forum.rebol.info/t/what-were-rebol2-ports-like/620</link>
    <description>The [What is a PORT!](https://forum.rebol.info/t/what-is-a-port/617/6) post says something that is often said in things written by (presumably) Carl:

&gt; &quot;In Rebol 2, ports were built on a pure series model. However, we found this approach to be problematic because ports are not pure series. They also embody state (information).&quot;

&gt; &quot;Rebol 3 moves away from the pure series model of Rebol 2 and more toward an I/O stream model. Now it is closer to the concept found in other programming environments and languages.&quot;

&gt; The pure series model is gone. Ports are more pragmatic now, and this has resulted in a port system that is cleaner, smaller, faster, and more extensible than ever before.

But that doesn&#39;t seem to be people&#39;s experience.  I haven&#39;t heard this newfound &quot;smaller/faster/more-extensible&quot; pleasing anyone in particular.  Mostly just people complain that they didn&#39;t have the ports they used to have.

My questions:

* What about Rebol2 port code made it a &quot;pure series&quot;?  You couldn&#39;t PARSE a PORT! in Rebol2, I don&#39;t think.  How was it &quot;pure&quot; or &quot;impure&quot;?

* Is there any case of something that didn&#39;t work in Rebol2 that was suddenly able to work in R3-Alpha?  e.g. an example of Rebol2 code where the R3-Alpha is better?

* Does anyone have an example of going backwards?  Where Rebol2 code was good and R3-Alpha seems wrong?

cc: @gchiu @rgchris @Brett</description>
    
    <lastBuildDate>Thu, 17 May 2018 18:57:11 +0000</lastBuildDate>
    <category>Ports</category>
    <atom:link href="https://forum.rebol.info/t/what-were-rebol2-ports-like/620.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>What were Rebol2 Ports Like?</title>
        <dc:creator><![CDATA[gchiu]]></dc:creator>
        <description><![CDATA[
            <p>The other possible advantage for r3 was that downloads can be sent to disk, but all r2 reads were in memory which caused memory issues for large files. However, Anton Rolls did do a large file downloader for r2.</p>
          <p><a href="https://forum.rebol.info/t/what-were-rebol2-ports-like/620/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-were-rebol2-ports-like/620/5</link>
        <pubDate>Thu, 17 May 2018 18:57:11 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-620-5</guid>
        <source url="https://forum.rebol.info/t/what-were-rebol2-ports-like/620.rss">What were Rebol2 Ports Like?</source>
      </item>
      <item>
        <title>What were Rebol2 Ports Like?</title>
        <dc:creator><![CDATA[Brett]]></dc:creator>
        <description><![CDATA[
            <p>"pure series" ?</p>
<p>I had the idea once that I could make an in-memory port that would return a calculated series just-in-time - like some languages have iterators.  Perhaps it would be some incremental dialect thing. But ports are assumed to be tied to external/network activity - so that was too heavyweight for the ideas.</p>
<p>Why not just use an object for that?  I was just playing. A scheme offered a single "class" to put the definition while opening "multiple instances". It was an object that not only can primarily receive block messages but also reacts to control events like being opened and closed.</p>
<p>Finalisation...</p>
<p>I wrote a Rebol2 scheme called DO-POP for manipulating mailboxes via POP. According to the <a href="http://www.rebol.org/documentation.r?script=do-pop-scheme.r" rel="nofollow noopener">documentation</a> I said I used a port because a port will receive a close event when Rebol shuts down.  I don't think such a finalisation event was available anywhere else in Rebol2.  This event provided me the opportunity to issue a graceful quit to the server even if the client script/user quit without closing the port.  It's always been an annoyance to me that a finalisation event isn't available generally in Rebol.</p>
<p>Writing a scheme for R3-alpha was just as difficult as writing for Rebol2 because in both cases I don't think the concepts had been refined and documented properly - too much reverse engineering and sherlock holmesing…  Pushing data through is one thing, then there's the control aspect.</p>
          <p><a href="https://forum.rebol.info/t/what-were-rebol2-ports-like/620/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-were-rebol2-ports-like/620/4</link>
        <pubDate>Thu, 17 May 2018 00:12:45 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-620-4</guid>
        <source url="https://forum.rebol.info/t/what-were-rebol2-ports-like/620.rss">What were Rebol2 Ports Like?</source>
      </item>
      <item>
        <title>What were Rebol2 Ports Like?</title>
        <dc:creator><![CDATA[rgchris]]></dc:creator>
        <description><![CDATA[
            <p>I do find the Rebol 3 port interface to be much cleaner. Rebol 2 ports made a lot of assumptions in their design about a scheme being specifically a stream of bytes from somewhere and contained a lot of hidden state mechanics that had to be managed:</p>
<pre><code class="lang-nohighlight">SYSTEM/STANDARD/PORT is an object of value: 
   scheme          none!     none 
   host            none!     none 
   port-id         none!     none 
   user            none!     none 
   pass            none!     none 
   target          none!     none 
   path            none!     none 
   proxy           none!     none 
   access          none!     none 
   allow           none!     none 
   buffer-size     none!     none 
   limit           none!     none 
   handler         none!     none 
   status          none!     none 
   size            none!     none 
   date            none!     none 
   url             none!     none 
   sub-port        none!     none 
   locals          none!     none 
   state           none!     none 
   timeout         none!     none 
   local-ip        none!     none 
   local-service   none!     none 
   remote-service  none!     none 
   last-remote-service none! none 
   direction       none!     none 
   key             none!     none 
   strength        none!     none 
   algorithm       none!     none 
   block-chaining  none!     none 
   init-vector     none!     none 
   padding         none!     none 
   async-modes     none!     none 
   remote-ip       none!     none 
   local-port      none!     none 
   remote-port     none!     none 
   backlog         none!     none 
   device          none!     none 
   speed           none!     none 
   data-bits       none!     none 
   parity          none!     none 
   stop-bits       none!     none 
   rts-cts         logic!    true 
   user-data       none!     none 
   awake           none!     none
</code></pre>
<p>This didn't really make much sense where a scheme did not behave in this way. Pretty much any secondary scheme (that is, one built on top of a lower-level scheme—TCP, FILE, e.g. HTTP, MYSQL, S3) is likely more abstract.</p>
          <p><a href="https://forum.rebol.info/t/what-were-rebol2-ports-like/620/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-were-rebol2-ports-like/620/3</link>
        <pubDate>Tue, 15 May 2018 14:51:37 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-620-3</guid>
        <source url="https://forum.rebol.info/t/what-were-rebol2-ports-like/620.rss">What were Rebol2 Ports Like?</source>
      </item>
      <item>
        <title>What were Rebol2 Ports Like?</title>
        <dc:creator><![CDATA[gchiu]]></dc:creator>
        <description><![CDATA[
            <p>There was much more documentation about the r3 ports than for rebol 2. I wouldn't have attempted a r2 port due to this. But I was able to do all the protocols that were present in r2 with just a little help.</p>
<p>Also, r3 was asynchronous so that allowed the GUI to work unblocked. Whereas in r2 any network activity blocked the GUI.</p>
<p>But due to asynch nature some things are more complex.</p>
          <p><a href="https://forum.rebol.info/t/what-were-rebol2-ports-like/620/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-were-rebol2-ports-like/620/2</link>
        <pubDate>Tue, 15 May 2018 08:31:47 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-620-2</guid>
        <source url="https://forum.rebol.info/t/what-were-rebol2-ports-like/620.rss">What were Rebol2 Ports Like?</source>
      </item>
      <item>
        <title>What were Rebol2 Ports Like?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>The <a href="https://forum.rebol.info/t/what-is-a-port/617/6">What is a PORT!</a> post says something that is often said in things written by (presumably) Carl:</p>
<blockquote>
<p>"In Rebol 2, ports were built on a pure series model. However, we found this approach to be problematic because ports are not pure series. They also embody state (information)."</p>
</blockquote>
<blockquote>
<p>"Rebol 3 moves away from the pure series model of Rebol 2 and more toward an I/O stream model. Now it is closer to the concept found in other programming environments and languages."</p>
</blockquote>
<blockquote>
<p>The pure series model is gone. Ports are more pragmatic now, and this has resulted in a port system that is cleaner, smaller, faster, and more extensible than ever before.</p>
</blockquote>
<p>But that doesn't seem to be people's experience.  I haven't heard this newfound "smaller/faster/more-extensible" pleasing anyone in particular.  Mostly just people complain that they didn't have the ports they used to have.</p>
<p>My questions:</p>
<ul>
<li>
<p>What about Rebol2 port code made it a "pure series"?  You couldn't PARSE a PORT! in Rebol2, I don't think.  How was it "pure" or "impure"?</p>
</li>
<li>
<p>Is there any case of something that didn't work in Rebol2 that was suddenly able to work in R3-Alpha?  e.g. an example of Rebol2 code where the R3-Alpha is better?</p>
</li>
<li>
<p>Does anyone have an example of going backwards?  Where Rebol2 code was good and R3-Alpha seems wrong?</p>
</li>
</ul>
<p>cc: <a class="mention" href="/u/gchiu">@gchiu</a> <a class="mention" href="/u/rgchris">@rgchris</a> <a class="mention" href="/u/brett">@Brett</a></p>
          <p><a href="https://forum.rebol.info/t/what-were-rebol2-ports-like/620/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-were-rebol2-ports-like/620/1</link>
        <pubDate>Tue, 15 May 2018 07:14:35 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-620-1</guid>
        <source url="https://forum.rebol.info/t/what-were-rebol2-ports-like/620.rss">What were Rebol2 Ports Like?</source>
      </item>
  </channel>
</rss>
