<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Web Build: Dangers and Opportunities</title>
    <link>https://forum.rebol.info/t/web-build-dangers-and-opportunities/1113</link>
    <description>It&#39;s good to publish early, and publish often--and I&#39;m glad people are enthusiastic about the visibly cool possibilities of putting the interpreter into the browser!

BUT excited though one may be, there are some big points that need to be emphasized to anyone you choose to show things to (especially the Rebol-biased):

## 1. JavaScript is NOT bloating and contaminating the core

The JavaScript extension code may live in the main repo for versioning convenience, but [it is completely separate](https://github.com/metaeducation/ren-c/tree/master/src/extensions/javascript).  If you instead build an EXE, it isn&#39;t having to skip `#ifdef TO_JAVASCRIPT` smattered around in core files--it&#39;s simply not building ANY of the files in the directory the JavaScript bridge lives in.

Don&#39;t forget how we&#39;re fighting the dependency war more than ever.  You don&#39;t even need GNU make to build...just a Ren-C executable and a 350kb TCC compiler (though you need EMCC to target the web).  There&#39;s even a [TCC Extension](https://github.com/metaeducation/ren-c/tree/master/src/extensions/tcc) and *we&#39;re only a stone&#39;s throw from being able to bootstrap from a Ren-C executable and source alone.*

So the only influences of this endeavor on the core are good ones...helping make it versatile enough to embed in very foreign hosts.  It makes it likely to be able to repeat that success elsewhere (C#. Qt. Red...? :-/)

## 2. It&#39;s very early, and this is VERY ambitious

The techniques are experimental and use bleeding edge tools.  We&#39;re also trying to support a spectrum of browsers without making people fiddle with experimental settings so they won&#39;t be turned away by some initial hassle.  This complicates things even more--but I think is still worth it.  Again: see (1), this &quot;complexity&quot; is borne by the JavaScript extension alone.

I definitely don&#39;t have a thought out plan from the start--because I&#39;m having to learn what&#39;s possible and what is not possible as I go along.  If you can read between the lines, I think what&#39;s going on here is rather impressive--but you have to be pretty deeply experienced to articulate why in an informed way.  Still, even the deeply experienced probably shouldn&#39;t try to pass judgment on it...yet.

## 3. Beta/One is NOT about shipping a next-generation web framework

Beta/One is a 24/7 online tutorial that demonstrates a vetted subset of cool features...that we have reasonable confidence are not going to need to be unlearned.

Is it exciting that the *way* the tutorial is being built is with an eye to generality that can be applied to other web apps?  YES!

Is that web app generalization a &quot;product&quot; trying to publish this year?  NO, NO, NO!

So be mindful of what you tell people (including yourself).  If expectations aren&#39;t managed, then even Herculean successes can look like failures.  And if focus slips too much into infinite distractions there won&#39;t *be* a Beta/One.

---

*(Note: I do find this all kind of exciting, in spite of what I would think I&#39;d think.  Making a VID-like GUI, in a browser?  Ick!  But the reasons for liking it are only due to relatively recent technical advancements.  That&#39;s advancements in Ren-C and its design, and in the web tech: without WASM and pthreads and ES6+Promises and ASYNC+AWAIT this would be vastly less interesting, to the extent it would be possible.  It really is something you can only write circa 2019, trying it earlier would have been miserable and ugly!)*</description>
    
    <lastBuildDate>Tue, 28 Jul 2020 12:55:17 +0000</lastBuildDate>
    <category>Web</category>
    <atom:link href="https://forum.rebol.info/t/web-build-dangers-and-opportunities/1113.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Web Build: Dangers and Opportunities</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>It's good to publish early, and publish often--and I'm glad people are enthusiastic about the visibly cool possibilities of putting the interpreter into the browser!</p>
<p>BUT excited though one may be, there are some big points that need to be emphasized to anyone you choose to show things to (especially the Rebol-biased):</p>
<h2>1. JavaScript is NOT bloating and contaminating the core</h2>
<p>The JavaScript extension code may live in the main repo for versioning convenience, but <a href="https://github.com/metaeducation/ren-c/tree/master/src/extensions/javascript" rel="nofollow noopener">it is completely separate</a>.  If you instead build an EXE, it isn't having to skip <code>#ifdef TO_JAVASCRIPT</code> smattered around in core files--it's simply not building ANY of the files in the directory the JavaScript bridge lives in.</p>
<p>Don't forget how we're fighting the dependency war more than ever.  You don't even need GNU make to build...just a Ren-C executable and a 350kb TCC compiler (though you need EMCC to target the web).  There's even a <a href="https://github.com/metaeducation/ren-c/tree/master/src/extensions/tcc" rel="nofollow noopener">TCC Extension</a> and <em>we're only a stone's throw from being able to bootstrap from a Ren-C executable and source alone.</em></p>
<p>So the only influences of this endeavor on the core are good ones...helping make it versatile enough to embed in very foreign hosts.  It makes it likely to be able to repeat that success elsewhere (C#. Qt. Red...? :-/)</p>
<h2>2. It's very early, and this is VERY ambitious</h2>
<p>The techniques are experimental and use bleeding edge tools.  We're also trying to support a spectrum of browsers without making people fiddle with experimental settings so they won't be turned away by some initial hassle.  This complicates things even more--but I think is still worth it.  Again: see (1), this "complexity" is borne by the JavaScript extension alone.</p>
<p>I definitely don't have a thought out plan from the start--because I'm having to learn what's possible and what is not possible as I go along.  If you can read between the lines, I think what's going on here is rather impressive--but you have to be pretty deeply experienced to articulate why in an informed way.  Still, even the deeply experienced probably shouldn't try to pass judgment on it...yet.</p>
<h2>3. Beta/One is NOT about shipping a next-generation web framework</h2>
<p>Beta/One is a 24/7 online tutorial that demonstrates a vetted subset of cool features...that we have reasonable confidence are not going to need to be unlearned.</p>
<p>Is it exciting that the <em>way</em> the tutorial is being built is with an eye to generality that can be applied to other web apps?  YES!</p>
<p>Is that web app generalization a "product" trying to publish this year?  NO, NO, NO!</p>
<p>So be mindful of what you tell people (including yourself).  If expectations aren't managed, then even Herculean successes can look like failures.  And if focus slips too much into infinite distractions there won't <em>be</em> a Beta/One.</p>
<hr>
<p><em>(Note: I do find this all kind of exciting, in spite of what I would think I'd think.  Making a VID-like GUI, in a browser?  Ick!  But the reasons for liking it are only due to relatively recent technical advancements.  That's advancements in Ren-C and its design, and in the web tech: without WASM and pthreads and ES6+Promises and ASYNC+AWAIT this would be vastly less interesting, to the extent it would be possible.  It really is something you can only write circa 2019, trying it earlier would have been miserable and ugly!)</em></p>
          <p><a href="https://forum.rebol.info/t/web-build-dangers-and-opportunities/1113/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/web-build-dangers-and-opportunities/1113/1</link>
        <pubDate>Thu, 14 Mar 2019 13:02:20 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1113-1</guid>
        <source url="https://forum.rebol.info/t/web-build-dangers-and-opportunities/1113.rss">Web Build: Dangers and Opportunities</source>
      </item>
  </channel>
</rss>
