<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>What to Call Historical &quot;SKIP&quot; in PARSE?</title>
    <link>https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557</link>
    <description>SKIP suggests you&#39;re not using the result.  Yet historical SKIP doesn&#39;t really do that:

    rebol2&gt; parse [1] [set x skip]
    rebol2&gt; x
    == 1  ; How was this &quot;skipped&quot; exactly?

We could use another name for &quot;match next input element&quot;.  What should it be?

Moving thread here, starting with @IngoHohmann&#39;s original proposal that skip mean what I&#39;ve called &quot;elide&quot;, e.g. don&#39;t use result in a block assignment:

    &gt;&gt; uparse [1 2] [x: [skip integer!, integer!]]
    &gt;&gt; x
    == 2</description>
    
    <lastBuildDate>Sun, 06 Jun 2021 04:53:01 +0000</lastBuildDate>
    <category>Naming</category>
    <atom:link href="https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>What to Call Historical &quot;SKIP&quot; in PARSE?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="IngoHohmann" data-post="2" data-topic="1557">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/ingohohmann/40/195_2.png" class="avatar"> IngoHohmann:</div>
<blockquote>
<p>skip would be the natural name for your elide</p>
</blockquote>
</aside>
<p>In this vein, I just <a href="https://github.com/metaeducation/ren-c/commit/a511e669ad8ade639c3f5f95825b695e63dda4eb">added a new meaning to SKIP</a> which is a synonym for <strong><code>elide &lt;any&gt;</code></strong>, where <strong><code>&lt;any&gt;</code></strong> is my best answer so far for what to use for historical skip.</p>
<p>This is to say that it still "skips" an element but it is not value bearing.</p>
<p>So it's trying to avoid cases like:</p>
<pre><code>&gt;&gt; uparse [&lt;a&gt; 10] [tag! skip]
== 10  ; !!! I think this is confusing, you said to "skip" it!
</code></pre>
<p>But I'm willing to give this a chance:</p>
<pre><code>&gt;&gt; uparse [&lt;a&gt; 10] [tag! skip]
== &lt;a&gt;  ; this might be okay
</code></pre>
<p>It's a bit jarring that you're seeing SKIP with no argument, but...we can try it.</p>
          <p><a href="https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557/14</link>
        <pubDate>Sun, 06 Jun 2021 04:46:04 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1557-14</guid>
        <source url="https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557.rss">What to Call Historical &quot;SKIP&quot; in PARSE?</source>
      </item>
      <item>
        <title>What to Call Historical &quot;SKIP&quot; in PARSE?</title>
        <dc:creator><![CDATA[rgchris]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="1" data-topic="1557">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>We could use another name for "match next input element".</p>
</blockquote>
</aside>
<p>Could vary depending on the type used: <strong>binary!</strong> =&gt; <strong>byte(s)</strong>; <strong>any-string!</strong> =&gt; <strong>char(s)</strong>; <strong>any-block!</strong> =&gt; <strong>value(s)</strong> or a universal name <strong>atom(s)</strong>.</p>
          <p><a href="https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557/12</link>
        <pubDate>Mon, 15 Mar 2021 14:09:53 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1557-12</guid>
        <source url="https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557.rss">What to Call Historical &quot;SKIP&quot; in PARSE?</source>
      </item>
      <item>
        <title>What to Call Historical &quot;SKIP&quot; in PARSE?</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>WHAT should it be...</p>
          <p><a href="https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557/11</link>
        <pubDate>Mon, 15 Mar 2021 13:16:57 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1557-11</guid>
        <source url="https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557.rss">What to Call Historical &quot;SKIP&quot; in PARSE?</source>
      </item>
      <item>
        <title>What to Call Historical &quot;SKIP&quot; in PARSE?</title>
        <dc:creator><![CDATA[Brett]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="1" data-topic="1557">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>We could use another name for "match next input element". What should it be?</p>
</blockquote>
</aside>
<p>Maybe one of:<br>
Next, This, Item</p>
          <p><a href="https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557/10</link>
        <pubDate>Sun, 14 Mar 2021 23:30:24 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1557-10</guid>
        <source url="https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557.rss">What to Call Historical &quot;SKIP&quot; in PARSE?</source>
      </item>
      <item>
        <title>What to Call Historical &quot;SKIP&quot; in PARSE?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>SKIP suggests you're not using the result.  Yet historical SKIP doesn't really do that:</p>
<pre><code>rebol2&gt; parse [1] [set x skip]
rebol2&gt; x
== 1  ; How was this "skipped" exactly?
</code></pre>
<p>We could use another name for "match next input element".  What should it be?</p>
<p>Moving thread here, starting with <a class="mention" href="/u/ingohohmann">@IngoHohmann</a>'s original proposal that skip mean what I've called "elide", e.g. don't use result in a block assignment:</p>
<pre><code>&gt;&gt; uparse [1 2] [x: [skip integer!, integer!]]
&gt;&gt; x
== 2</code></pre>
          <p><a href="https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557/1</link>
        <pubDate>Sun, 14 Mar 2021 03:56:58 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1557-1</guid>
        <source url="https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557.rss">What to Call Historical &quot;SKIP&quot; in PARSE?</source>
      </item>
      <item>
        <title>What to Call Historical &quot;SKIP&quot; in PARSE?</title>
        <dc:creator><![CDATA[BlackATTR]]></dc:creator>
        <description><![CDATA[
            <p>I'm not that concerned with following conventions, but avoiding clashes with them.<br>
So the "this is kind of like what you may be familiar with in other languages, except if you use it like that it will bite you" is not a great flex. <img src="https://forum.rebol.info/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>Yeah, I don't care for dot. I do not mind plain old ? and BLANK! works better than I'd expect-- visually it looks like an empty "slot".</p>
          <p><a href="https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557/9</link>
        <pubDate>Sat, 13 Mar 2021 15:20:56 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1557-9</guid>
        <source url="https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557.rss">What to Call Historical &quot;SKIP&quot; in PARSE?</source>
      </item>
      <item>
        <title>What to Call Historical &quot;SKIP&quot; in PARSE?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="BlackATTR" data-post="7" data-topic="1557">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/blackattr/40/204_2.png" class="avatar"> BlackATTR:</div>
<blockquote>
<p>I dunno, this is breaking with a near-universal pattern-matching convention.</p>
</blockquote>
</aside>
<p>If we're interested in bowing to "universal" conventions, we could use dot.  It doesn't go along fantastically with commas, but you have brackets available there too:</p>
<pre><code>&gt;&gt; uparse [1 2] [x: ., y: .]
&gt;&gt; x 
== 1

&gt;&gt; uparse [1 2] [x: [.], y: [.]]
&gt;&gt; x 
== 1
</code></pre>
<p>BLANK! remains an option, which was what Ren-C had been using:</p>
<pre><code>&gt;&gt; uparse [1 2] [x: _, y: _]
&gt;&gt; x 
== 1

&gt;&gt; uparse [1 2] [x: [_], y: [_]]
&gt;&gt; x 
== 1
</code></pre>
<p>But this gets into the contentious meaning of what BLANK! is... as to whether it's a proxy for nothingness or a reified thing in its own right.</p>
<p>I need to reread my writing on the topic.</p>
          <p><a href="https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557/8</link>
        <pubDate>Sat, 13 Mar 2021 15:19:38 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1557-8</guid>
        <source url="https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557.rss">What to Call Historical &quot;SKIP&quot; in PARSE?</source>
      </item>
      <item>
        <title>What to Call Historical &quot;SKIP&quot; in PARSE?</title>
        <dc:creator><![CDATA[BlackATTR]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="6" data-topic="1557">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>The asterisk isn't terrible, and it may be silly to avoid it on the basis of its usual "match many things" meaning.</p>
</blockquote>
</aside>
<p>I dunno, this is breaking with a near-universal pattern-matching convention. Most devs spend their time in other languages, not Ren-C.</p>
          <p><a href="https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557/7</link>
        <pubDate>Sat, 13 Mar 2021 15:17:16 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1557-7</guid>
        <source url="https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557.rss">What to Call Historical &quot;SKIP&quot; in PARSE?</source>
      </item>
      <item>
        <title>What to Call Historical &quot;SKIP&quot; in PARSE?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="IngoHohmann" data-post="2" data-topic="1557" data-full="true">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/ingohohmann/40/195_2.png" class="avatar"> IngoHohmann:</div>
<blockquote>
<p>Seems to me, that skip would be the natural name for your elide.</p>
</blockquote>
</aside>
<p>Regardless of whether or not skip is the right name for elide (it feels like it may be), I'm continuing to be bothered by the likes of:</p>
<pre><code>&gt;&gt; uparse "a" [x: skip]
&gt;&gt; x
== #a  ; how was that "skipped"?

&gt;&gt; uparse [1] [x: skip]
&gt;&gt; x 
== 1  ; how was that "skipped?"
</code></pre>
<p><strong>skipping just doesn't seem like it should be "value-bearing".</strong>  And the Haskell uses skip for the meaning you would think of not gathering the data.</p>
<p>What we want is more along the shade of meaning of ACCEPT.  TAKE is a good short word, but it suggests mutation.</p>
<p>My suggestion that TAG! or otherwise might be an instruction makes <strong>&lt;?&gt;</strong> which might look better than ?:</p>
<pre><code>&gt;&gt; uparse [1] [x: ?]  ; seems thin
&gt;&gt; x 
== 1

&gt;&gt; uparse [1] [x: &lt;?&gt;]  ; a little more "heft"
&gt;&gt; x 
== 1
</code></pre>
<p>Actually, you could put it in its own block if you wanted to, and it should work the same:</p>
<pre><code>&gt;&gt; uparse [1] [x: [?]]  ; slower/costlier but could be optimized
&gt;&gt; x 
== 1
</code></pre>
<p>The asterisk isn't terrible, and it may be silly to avoid it on the basis of its usual "match many things" meaning.  COMMA! can make it easier to see how it plugs into the rules:</p>
<pre><code>&gt;&gt; uparse [1 2] [x: *, y: *]
&gt;&gt; x 
== 1

&gt;&gt; uparse [1 2] [x: [*], y: [*]]
&gt;&gt; x 
== 1
</code></pre>
<p>Right now <strong><code>*</code></strong> seems probably like the best of the ASCII offerings.  And at least one other person who has thought about it has decided on it, so, that's one vote from someone not present.</p>
<p>I'm going to switch SKIP to * for now and we can see how it feels.</p>
          <p><a href="https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557/6</link>
        <pubDate>Sat, 13 Mar 2021 13:36:54 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1557-6</guid>
        <source url="https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557.rss">What to Call Historical &quot;SKIP&quot; in PARSE?</source>
      </item>
      <item>
        <title>What to Call Historical &quot;SKIP&quot; in PARSE?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="BlackATTR" data-post="4" data-topic="1557">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/blackattr/40/204_2.png" class="avatar"> BlackATTR:</div>
<blockquote>
<p>Just a thought: maybe <strong>OMIT</strong></p>
</blockquote>
</aside>
<p>OMIT is a possible alternative term for ELIDE... a word more people know.  But I personally find the word ELIDE more pleasing.</p>
<p>I changed the existing SET to only allow you to set to one item.  This broke a bit of parse code in TLS on some servers, due to this rule:</p>
<pre><code>        set cmd [
            &lt;client-hello&gt; (
                client-hello/version ctx [1.0 1.2]  ; min/max versioning
            )
            | &lt;client-key-exchange&gt; (
                client-key-exchange ctx
            )
            | &lt;change-cipher-spec&gt; (
                change-cipher-spec ctx
            )
            | &lt;finished&gt; (
                encrypted-handshake-msg ctx finished ctx
            )
            | #application set arg [text! | binary!] (
                application-data ctx arg
            )
            | &lt;close-notify&gt; (
                alert-close-notify ctx
            )
        ]
</code></pre>
<p>The problem is that <strong><span class="hashtag">#application</span> set arg [text! | binary!]</strong> was expecting to set the command to <span class="hashtag">#application</span>.</p>
<p>Anyway, here was a real world case that was taking advantage of the "SET just sets to the first thing" property.  It would be a case where the ELIDE would come in handy.</p>
          <p><a href="https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557/5</link>
        <pubDate>Thu, 04 Mar 2021 21:58:29 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1557-5</guid>
        <source url="https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557.rss">What to Call Historical &quot;SKIP&quot; in PARSE?</source>
      </item>
      <item>
        <title>What to Call Historical &quot;SKIP&quot; in PARSE?</title>
        <dc:creator><![CDATA[BlackATTR]]></dc:creator>
        <description><![CDATA[
            <p>Just a thought: maybe <strong>OMIT</strong><br>
Then you'd have EMIT and OMIT.</p>
<p>(and perhaps a more plain-speech keyword could be: <strong>DROP</strong>)</p>
          <p><a href="https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557/4</link>
        <pubDate>Wed, 03 Mar 2021 18:56:24 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1557-4</guid>
        <source url="https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557.rss">What to Call Historical &quot;SKIP&quot; in PARSE?</source>
      </item>
      <item>
        <title>What to Call Historical &quot;SKIP&quot; in PARSE?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>The current meaning of SKIP has always seemed a bit off to me (e.g. <strong>item: skip</strong> looks weird, why would you be using a result you skipped?).  I wouldn't be that opposed to changing it.</p>
<p>Supporting the idea that not everyone loves SKIP, <a href="https://github.com/giesse/red-topaz-parse">Topaz</a> uses <strong><code>*</code></strong> as a synonym for match any single item.  I'm not crazy about it because it runs against the grain of what * tends to mean in matching dialects--which is "match many arbitrary things"--you'd think it would be a synonym for ANY.  The more typical case of "match one thing" would be <strong><code>?</code></strong>, which Ren-C has left open for dialects vs. canonizing for purposes of help.  <strong>item: ?, items: some ?</strong></p>
<p>Ren-C has an experiment where I thought it would be interesting to try using BLANK!, because of some precedent of its use for "match anything here"...but the idea hasn't exactly taken the world by storm.  It was a thinking point for how the source-level use of something in a dialect might differ from the fetched use...which is something I still wonder about.</p>
<p>Block rules could use ANY-VALUE!, which I've proposed offering a shortened form of as VALUE!.  That's not generic with string or binary parsing, where I've been thinking datatypes would run a TRANSCODE-like operation.  (e.g. <strong>parse "a" [c: char!]</strong> wouldn't work, but <strong>parse {#"a"} [c: char!]</strong> would.)  This also runs up against the long-pondered issue of "what is a datatype, anyway".</p>
<p>Long story short... I think you're right that SKIP would look nice there, but we'd have to cook up another name for what today's SKIP does.</p>
          <p><a href="https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557/3</link>
        <pubDate>Wed, 03 Mar 2021 14:11:41 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1557-3</guid>
        <source url="https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557.rss">What to Call Historical &quot;SKIP&quot; in PARSE?</source>
      </item>
      <item>
        <title>What to Call Historical &quot;SKIP&quot; in PARSE?</title>
        <dc:creator><![CDATA[IngoHohmann]]></dc:creator>
        <description><![CDATA[
            <p>Seems to me, that skip would be the natural name for your elide.</p>
          <p><a href="https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557/2</link>
        <pubDate>Wed, 03 Mar 2021 11:17:54 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1557-2</guid>
        <source url="https://forum.rebol.info/t/what-to-call-historical-skip-in-parse/1557.rss">What to Call Historical &quot;SKIP&quot; in PARSE?</source>
      </item>
  </channel>
</rss>
