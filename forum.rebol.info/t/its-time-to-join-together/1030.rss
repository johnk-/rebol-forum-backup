<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>It&#39;s Time To JOIN Together</title>
    <link>https://forum.rebol.info/t/its-time-to-join-together/1030</link>
    <description>There&#39;s been a tremendous amount of learning and good artifacts which have come out of not taking REJOIN/JOIN for granted.  As @Brett&#39;s critique pointed out, [REJOIN sucked](https://forum.rebol.info/t/rejoin-ugliness-and-the-usefulness-of-tests/248), and we now have much more palatable options and strategies...most notably DELIMIT+SPACED+UNSPACED, which have become nicely defined foundations for one&#39;s daily string work...doing the right kind of merging and null/blank handling, splicing single characters without delimiting, etc.

My initial impressions from the names were that JOIN and REJOIN were integrally linked, and so JOIN got kind of a bad reputation from that.  JOIN was a &quot;copies its first argument&quot; variant of &quot;REPEND&quot; (one of the badly named functions with REFORM and REMOLD).  In a system that mutates by default, I wondered if this should be flipped, and JOIN would be REPEND with a non-mutable variant (JOIN-OF?)

## Nice try, but it&#39;s time to move JOIN-OF back to JOIN

No grand new generalization ever gel&#39;d together.  Ideas like making non-mutating forms of all the operators be named things like APPEND-OF and JOIN-OF were overshadowed by the OF reflector gaining central prominence for that meaning (LENGTH OF BLOCK).  What we really probably just need are system internals for optimizing patterns like `append copy block ...` so that the append and copy can merge together internally in one pass, and I have ideas on how that can work. 

But besides nothing better emerging, NewPath has brought an issue to the forefront previously only hidden in TUPLE!s: **immutable paths have the need for a *fundamental* non-mutating operator to add stuff to them**.  You can&#39;t just say that JOIN takes a PATH!, copies it, and appends to it...because PATH!s no longer allow mutation.  COPY is a no-op on them, and the APPEND will fail with an invalid type error (it&#39;s an ANY-PATH! which now lacks a position...hence not an ANY-SERIES!, and it&#39;s immutable, where APPEND expects mutability).

JOIN is thus *distinct* from the mutable world that APPEND lives in.  It&#39;s its own thing. 

And I don&#39;t think anyone is going to be upset seeing a Rebol2-compatible JOIN come back.

## Easy impact to absorb...

The JOIN-OF synonym can stay working for a while, but ultimately it will be phased out.  Like I said above, OF has fit in nicely with a new purpose.

There are a few JOINs out there that have been introduced trying out a life as the &quot;new REPEND&quot;.  (I&#39;m probably the only one who did so.)  But if you did this, then rather than replacing those with REPEND, please just change them to **append x reduce [...]**.  Many cases of that pattern are about to get more efficient, and as I mentioned there are some internal ideas on folding these kind of operators together inside the evaluator.</description>
    
    <lastBuildDate>Thu, 24 Jan 2019 00:22:18 +0000</lastBuildDate>
    <category>Naming</category>
    <atom:link href="https://forum.rebol.info/t/its-time-to-join-together/1030.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>It&#39;s Time To JOIN Together</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>There's been a tremendous amount of learning and good artifacts which have come out of not taking REJOIN/JOIN for granted.  As <a class="mention" href="/u/brett">@Brett</a>'s critique pointed out, <a href="https://forum.rebol.info/t/rejoin-ugliness-and-the-usefulness-of-tests/248">REJOIN sucked</a>, and we now have much more palatable options and strategies...most notably DELIMIT+SPACED+UNSPACED, which have become nicely defined foundations for one's daily string work...doing the right kind of merging and null/blank handling, splicing single characters without delimiting, etc.</p>
<p>My initial impressions from the names were that JOIN and REJOIN were integrally linked, and so JOIN got kind of a bad reputation from that.  JOIN was a "copies its first argument" variant of "REPEND" (one of the badly named functions with REFORM and REMOLD).  In a system that mutates by default, I wondered if this should be flipped, and JOIN would be REPEND with a non-mutable variant (JOIN-OF?)</p>
<h2>Nice try, but it's time to move JOIN-OF back to JOIN</h2>
<p>No grand new generalization ever gel'd together.  Ideas like making non-mutating forms of all the operators be named things like APPEND-OF and JOIN-OF were overshadowed by the OF reflector gaining central prominence for that meaning (LENGTH OF BLOCK).  What we really probably just need are system internals for optimizing patterns like <code>append copy block ...</code> so that the append and copy can merge together internally in one pass, and I have ideas on how that can work.</p>
<p>But besides nothing better emerging, NewPath has brought an issue to the forefront previously only hidden in TUPLE!s: <strong>immutable paths have the need for a <em>fundamental</em> non-mutating operator to add stuff to them</strong>.  You can't just say that JOIN takes a PATH!, copies it, and appends to it...because PATH!s no longer allow mutation.  COPY is a no-op on them, and the APPEND will fail with an invalid type error (it's an ANY-PATH! which now lacks a position...hence not an ANY-SERIES!, and it's immutable, where APPEND expects mutability).</p>
<p>JOIN is thus <em>distinct</em> from the mutable world that APPEND lives in.  It's its own thing.</p>
<p>And I don't think anyone is going to be upset seeing a Rebol2-compatible JOIN come back.</p>
<h2>Easy impact to absorb...</h2>
<p>The JOIN-OF synonym can stay working for a while, but ultimately it will be phased out.  Like I said above, OF has fit in nicely with a new purpose.</p>
<p>There are a few JOINs out there that have been introduced trying out a life as the "new REPEND".  (I'm probably the only one who did so.)  But if you did this, then rather than replacing those with REPEND, please just change them to <strong>append x reduce [...]</strong>.  Many cases of that pattern are about to get more efficient, and as I mentioned there are some internal ideas on folding these kind of operators together inside the evaluator.</p>
          <p><a href="https://forum.rebol.info/t/its-time-to-join-together/1030/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/its-time-to-join-together/1030/1</link>
        <pubDate>Thu, 24 Jan 2019 00:03:00 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1030-1</guid>
        <source url="https://forum.rebol.info/t/its-time-to-join-together/1030.rss">It&#39;s Time To JOIN Together</source>
      </item>
  </channel>
</rss>
