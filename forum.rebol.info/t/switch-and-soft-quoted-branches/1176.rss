<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>SWITCH and soft-quoted branches</title>
    <link>https://forum.rebol.info/t/switch-and-soft-quoted-branches/1176</link>
    <description>A change that made sense to me for SWITCH was that [it should evaluate its switched-upon clauses](https://forum.rebol.info/t/facing-the-facts-switch-must-evaluate-clauses/603).

This means that you get the power of the evaluator, hence things like ELIDE and DEFAULT can work.  You can switch on things that are in variables:

    var: 10

    switch data [
       9 [print &quot;Ordinary cases work]

       elide print &quot;You can print here if it wasn&#39;t a 9&quot;

       var + 1 [
           print &quot;Able to use calculations...so switch on 11 here&quot;
       ]

       default [
           print &quot;DEFAULT works in concert with fallout due to evaluation&quot;
       ]
    ]

But... one feature that does not work under this scheme as written is [soft-quoted branching](https://forum.rebol.info/t/soft-quoted-branching-light-elegant-fast/1020).

    &gt;&gt; switch 1 [ 1 &#39;[1 2 3] 2 &#39;[4 5 6]]
    == 1

This faces a kind of fundamental barrier, that QUOTED! is the only way to get your switch cases to suppress evaluation:

    data: [#x b &lt;y&gt;]

    switch second data [
         &#39;a [print &quot;a&quot;]
         &#39;b [print &quot;b&quot;]
         ...
     ]

We might consider making a construct that operates more like CASE and goes in value/branch pairs (CHOOSE?)

     choose 2 [
        1 [&quot;a&quot;]
        2 &#39;&lt;b&gt;
     ]

That would have some odd properties, in line with some of CASE&#39;s historical peculiarities:

    &gt;&gt; choose lit &#39;b [
        &#39;a &#39;b
        &#39;b &#39;c
    ]
    == c

CHOOSE wouldn&#39;t have that flexibility of falling through on multiple branches, but it could use the GROUP! mode of soft quote escaping to reuse a branch:

    &gt;&gt; branch: [print &quot;reusable&quot;]
    == [print &quot;reusable&quot;]

    &gt;&gt; choose 2 [
        1 + 1 (branch)
        2 + 2 (branch)
    ]
    reusable

And it would work with DEFAULT and ELIDE, etc.

I really am pretty attached now to how evaluative switch works.  The unfortunate cost of that is that it doesn&#39;t fit into the soft-quoted branch model.  :-/  I think that&#39;s just life--you can look at it and realize why it has to do what it does, it recognizes BLOCK!s only as branches.</description>
    
    <lastBuildDate>Thu, 06 Jun 2019 15:02:02 +0000</lastBuildDate>
    <category>Internals</category>
    <atom:link href="https://forum.rebol.info/t/switch-and-soft-quoted-branches/1176.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>SWITCH and soft-quoted branches</title>
        <dc:creator><![CDATA[BlackATTR]]></dc:creator>
        <description><![CDATA[
            <p>Still looks like a big net-gain to me.</p>
          <p><a href="https://forum.rebol.info/t/switch-and-soft-quoted-branches/1176/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/switch-and-soft-quoted-branches/1176/2</link>
        <pubDate>Thu, 06 Jun 2019 15:02:02 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1176-2</guid>
        <source url="https://forum.rebol.info/t/switch-and-soft-quoted-branches/1176.rss">SWITCH and soft-quoted branches</source>
      </item>
      <item>
        <title>SWITCH and soft-quoted branches</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>A change that made sense to me for SWITCH was that <a href="https://forum.rebol.info/t/facing-the-facts-switch-must-evaluate-clauses/603">it should evaluate its switched-upon clauses</a>.</p>
<p>This means that you get the power of the evaluator, hence things like ELIDE and DEFAULT can work.  You can switch on things that are in variables:</p>
<pre><code>var: 10

switch data [
   9 [print "Ordinary cases work]

   elide print "You can print here if it wasn't a 9"

   var + 1 [
       print "Able to use calculations...so switch on 11 here"
   ]

   default [
       print "DEFAULT works in concert with fallout due to evaluation"
   ]
]
</code></pre>
<p>But... one feature that does not work under this scheme as written is <a href="https://forum.rebol.info/t/soft-quoted-branching-light-elegant-fast/1020">soft-quoted branching</a>.</p>
<pre><code>&gt;&gt; switch 1 [ 1 '[1 2 3] 2 '[4 5 6]]
== 1
</code></pre>
<p>This faces a kind of fundamental barrier, that QUOTED! is the only way to get your switch cases to suppress evaluation:</p>
<pre><code>data: [#x b &lt;y&gt;]

switch second data [
     'a [print "a"]
     'b [print "b"]
     ...
 ]
</code></pre>
<p>We might consider making a construct that operates more like CASE and goes in value/branch pairs (CHOOSE?)</p>
<pre><code> choose 2 [
    1 ["a"]
    2 '&lt;b&gt;
 ]
</code></pre>
<p>That would have some odd properties, in line with some of CASE's historical peculiarities:</p>
<pre><code>&gt;&gt; choose lit 'b [
    'a 'b
    'b 'c
]
== c
</code></pre>
<p>CHOOSE wouldn't have that flexibility of falling through on multiple branches, but it could use the GROUP! mode of soft quote escaping to reuse a branch:</p>
<pre><code>&gt;&gt; branch: [print "reusable"]
== [print "reusable"]

&gt;&gt; choose 2 [
    1 + 1 (branch)
    2 + 2 (branch)
]
reusable
</code></pre>
<p>And it would work with DEFAULT and ELIDE, etc.</p>
<p>I really am pretty attached now to how evaluative switch works.  The unfortunate cost of that is that it doesn't fit into the soft-quoted branch model.  :-/  I think that's just life--you can look at it and realize why it has to do what it does, it recognizes BLOCK!s only as branches.</p>
          <p><a href="https://forum.rebol.info/t/switch-and-soft-quoted-branches/1176/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/switch-and-soft-quoted-branches/1176/1</link>
        <pubDate>Thu, 06 Jun 2019 14:52:00 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1176-1</guid>
        <source url="https://forum.rebol.info/t/switch-and-soft-quoted-branches/1176.rss">SWITCH and soft-quoted branches</source>
      </item>
  </channel>
</rss>
