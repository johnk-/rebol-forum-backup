<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>UPARSE In Mezzanine: Use Experimentally (but sparingly)</title>
    <link>https://forum.rebol.info/t/uparse-in-mezzanine-use-experimentally-but-sparingly/1610</link>
    <description>I&#39;ve made UPARSE part of the mezzanine to make it easier to use in the web build.

It&#39;s a reminder that *zero* performance work has been done on it, and it is glacially slow.

But here it is extracting information from a GitLab URL

    uparse port.spec.path [
        &quot;/&quot;
        emit user: between &lt;here&gt; &quot;/&quot;
        emit repo: between &lt;here&gt; &quot;/&quot;
        [opt &quot;-/&quot;]
        &quot;raw/&quot;
        emit branch: between &lt;here&gt; &quot;/&quot;
        emit file_path: between &lt;here&gt; &lt;end&gt;
    ] then x -&gt; [
        replace/all x.file_path &quot;/&quot; &quot;%2F&quot;  ; API uses slashes for its delimiting

        if port.spec.scheme = &#39;http [
            port.spec.scheme: &#39;https
            write log:type=warn [&quot;Converting non-HTTPS URL to HTTPS:&quot; x.url]
        ]

        port.spec.path: join-all [
            &quot;/api/v4/projects/&quot;
            x.user &quot;%2F&quot; x.repo  ; surrogate for numeric id, use escaped `/`
            &quot;/repository/files/&quot; x.file_path &quot;/raw?ref=&quot; x.branch
        ]
    ]

Anyway, this is just an example of some fun usage of BETWEEN and a generated object.  It avoids the **to &quot;/&quot; skip** or **to &quot;/&quot; &quot;/&quot;** pattern that&#39;s so annoying.  And it means you can avoid naming locals for all the things you are extracting in a parse.

I&#39;m thinking that **use x** would be changed to a construct that would pull all x&#39;s fields into scope.  Right now there&#39;s an experiment for that called &quot;using&quot; but I like USE.

I&#39;ll do some performance work at some point, here.  But I&#39;m packing to relocate today, so I might be busy for a little bit...</description>
    
    <lastBuildDate>Tue, 18 May 2021 11:34:22 +0000</lastBuildDate>
    <category>Parsing</category>
    <atom:link href="https://forum.rebol.info/t/uparse-in-mezzanine-use-experimentally-but-sparingly/1610.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>UPARSE In Mezzanine: Use Experimentally (but sparingly)</title>
        <dc:creator><![CDATA[gchiu]]></dc:creator>
        <description><![CDATA[
            <p>Sample raw GitLab links:</p>
<pre><code>https://gitlab.com/Zhaoshirong/nzpower/-/raw/master/nzpower.reb
https://gitlab.com/Zhaoshirong/nzpower/raw/master/nzpower.reb
</code></pre>
<p>The port code splits that into a scheme, domain, and path.  This code breaks that path into an object:</p>
<pre><code>&gt;&gt; path: "/Zhaoshirong/nzpower/-/raw/master/nzpower.reb"

&gt;&gt; uparse path [
       "/"
       emit user: between &lt;here&gt; "/"
       emit repo: between &lt;here&gt; "/"
       [opt "-/"]
       "raw/"
       emit branch: between &lt;here&gt; "/"
       emit file_path: between &lt;here&gt; &lt;end&gt;
   ]
== make object! [
    user: "Zhaoshirong"
    repo: "nzpower"
    branch: "master"
    file_path: "nzpower.reb"
]</code></pre>
          <p><a href="https://forum.rebol.info/t/uparse-in-mezzanine-use-experimentally-but-sparingly/1610/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/uparse-in-mezzanine-use-experimentally-but-sparingly/1610/2</link>
        <pubDate>Tue, 18 May 2021 09:21:26 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1610-2</guid>
        <source url="https://forum.rebol.info/t/uparse-in-mezzanine-use-experimentally-but-sparingly/1610.rss">UPARSE In Mezzanine: Use Experimentally (but sparingly)</source>
      </item>
      <item>
        <title>UPARSE In Mezzanine: Use Experimentally (but sparingly)</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>I've made UPARSE part of the mezzanine to make it easier to use in the web build.</p>
<p>It's a reminder that <em>zero</em> performance work has been done on it, and it is glacially slow.</p>
<p>But here it is extracting information from a GitLab URL</p>
<pre><code>uparse port.spec.path [
    "/"
    emit user: between &lt;here&gt; "/"
    emit repo: between &lt;here&gt; "/"
    [opt "-/"]
    "raw/"
    emit branch: between &lt;here&gt; "/"
    emit file_path: between &lt;here&gt; &lt;end&gt;
] then x -&gt; [
    replace/all x.file_path "/" "%2F"  ; API uses slashes for its delimiting

    if port.spec.scheme = 'http [
        port.spec.scheme: 'https
        write log:type=warn ["Converting non-HTTPS URL to HTTPS:" x.url]
    ]

    port.spec.path: join-all [
        "/api/v4/projects/"
        x.user "%2F" x.repo  ; surrogate for numeric id, use escaped `/`
        "/repository/files/" x.file_path "/raw?ref=" x.branch
    ]
]
</code></pre>
<p>Anyway, this is just an example of some fun usage of BETWEEN and a generated object.  It avoids the <strong>to "/" skip</strong> or <strong>to "/" "/"</strong> pattern that's so annoying.  And it means you can avoid naming locals for all the things you are extracting in a parse.</p>
<p>I'm thinking that <strong>use x</strong> would be changed to a construct that would pull all x's fields into scope.  Right now there's an experiment for that called "using" but I like USE.</p>
<p>I'll do some performance work at some point, here.  But I'm packing to relocate today, so I might be busy for a little bit...</p>
          <p><a href="https://forum.rebol.info/t/uparse-in-mezzanine-use-experimentally-but-sparingly/1610/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/uparse-in-mezzanine-use-experimentally-but-sparingly/1610/1</link>
        <pubDate>Tue, 18 May 2021 07:54:52 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1610-1</guid>
        <source url="https://forum.rebol.info/t/uparse-in-mezzanine-use-experimentally-but-sparingly/1610.rss">UPARSE In Mezzanine: Use Experimentally (but sparingly)</source>
      </item>
  </channel>
</rss>
