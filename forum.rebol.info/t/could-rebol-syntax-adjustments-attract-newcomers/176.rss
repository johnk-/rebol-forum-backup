<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Could Rebol syntax adjustments attract newcomers?</title>
    <link>https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176</link>
    <description>In the category of &quot;rebol language design&quot; - curious if this has ever been discussed:

I myself am somewhat new to Rebol though I&#39;ve done some Racket and played a little with Clojure etc. so I have a tiny leg up learning lispy style languages.

But for those that don&#39;t have such a background I&#39;ve always felt these languages are difficult just cause they&#39;re so different, and the syntax is part of that (not all but part right).

It strikes me that Rebol is already more approachable than a classic lisp/scheme - that there&#39;s truly fewer brackets than there are parens in lisp.  I guess that&#39;s because of not using them for function application plus they&#39;re often implicit at the top level right.

But was there ever a thought at making some small syntax adjustments to align more with the C/java/javascript syntaxes that are most popular so easier to read for greater numbers of people? 

The first thought along these lines is the use of curly braces for multiline strings - that to me seems a lost opportunity when having allowed { } as an alternative to [ ] for code blocks would have helped the readability to newcomers from these other languages.

(Racket allows { }. ( ), and [ ] as equivalents btw so there is precedent out there fwiw)

Following on that, if commas were treated as whitespace (Clojure does this), then along with the curly braces, unless I&#39;m missing something (I might be) it seems to me you&#39;d be able to paste JSON directly in Rebol...  I work with RESTful JSON services all the time so maybe I&#39;m biased but I&#39;d think it would be appealing to be able to be able to say that Rebol supports &quot;JSON on steroids&quot; (i.e. a superset of JSON when you consider the other types Rebol allows beyond the basic ones in standard JSON). 
 
Anyway I could go on (I played with these ideas in an open source project I&#39;d started called &quot;SugarLisp&quot;), but you get the idea. :slight_smile:

I know amoungst Lispers these ideas are not welcome but I always feel bad these languages never seem as popular as they deserve to be.

A similar idea I&#39;ve been looking at recently is called &quot;ReasonML&quot; it&#39;s a new language from facebook where they did an alternative javascript-like syntax on OCAML to try and make it more appealing to JS people...

I&#39;m assuming these ideas aren&#39;t easily done as a Rebol Dialect alone right.  I&#39;m assuming it would either be a preprocessor or a variation on one of the Rebol implementations with a different file extension or something in that Rebol header since such changes (i.e. the curly brace one) wouldn&#39;t be backward compatible? 

Partly just wondering what people think.  I&#39;m guessing people who know Rebol well wouldn&#39;t like the idea, but again - it&#39;s not for them, it&#39;s for their java/javascript swilling cousins. :)</description>
    
    <lastBuildDate>Mon, 03 Jul 2017 22:25:29 +0000</lastBuildDate>
    <category>Development</category>
    <atom:link href="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Could Rebol syntax adjustments attract newcomers?</title>
        <dc:creator><![CDATA[draegtun]]></dc:creator>
        <description><![CDATA[
            <p>Unfortunately <code>#[]</code> is currently used for the construction syntax and I expect it will take a lot of work to change this <img src="//forum.rebol.info/images/emoji/twitter/frowning.png?v=7" title=":frowning:" class="emoji" alt=":frowning:"></p>
<p>But like you <code>#()</code> just doesn't seem right for MAP!.  Based on above restriction I'd prefer <code>%[]</code> for MAP! and perhaps <code>![]</code> for OBJECT! (and I'd be happy with these even without Plan -4)</p>
          <p><a href="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/19">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/19</link>
        <pubDate>Mon, 03 Jul 2017 22:25:29 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-176-19</guid>
        <source url="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176.rss">Could Rebol syntax adjustments attract newcomers?</source>
      </item>
      <item>
        <title>Could Rebol syntax adjustments attract newcomers?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="BlackATTR" data-post="10" data-topic="176">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/blackattr/40/204_2.png" class="avatar"> BlackATTR:</div>
<blockquote>
<p>I'm not the best person to respond from a Red/Rebol programming perspective-- I'm not a programmer.</p>
</blockquote>
</aside>
<p>That hasn't stopped others from commenting!  <img src="https://forum.rebol.info/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:">  It seems to me you have a firmer grasp on the lay of the land than most.  So no worries.</p>
<aside class="quote no-group" data-username="BlackATTR" data-post="10" data-topic="176">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/blackattr/40/204_2.png" class="avatar"> BlackATTR:</div>
<blockquote>
<p>Ren-C embraces the "how far is too far?" ethos like a rabid maniac. I can't wait to see the jaw-dropping witchcraft that project produces.</p>
</blockquote>
</aside>
<p>There's a lot.  I give the examples like:</p>
<pre><code>+: enfix function [a [&lt;end&gt; any-value!] b [any-value! &lt;...&gt;]] [
    if set? 'a [ ;-- there's a value on the left, not &lt;end&gt;
        add a (take b) ;-- normal add of one right hand value
     ] else [ ;-- nothing on left, switch to variadic sum
        sum: 0
        while [not tail? b] [
            sum: add sum (take b)
        ]
    ]
]
</code></pre>
<p>Woo.  Now you have:</p>
<pre><code>&gt;&gt; 1 + 2
== 3

&gt;&gt; (+ 1 2 3)
== 6
</code></pre>
<p>Please do come chat if you have not yet, the witchcraft continues developing...</p>
<p>          <iframe src="https://trello.com/c/NPivtSdd.html" width="100%" height="200" frameborder="0" style="border:0" seamless="seamless" sandbox="allow-same-origin allow-scripts allow-forms allow-popups allow-popups-to-escape-sandbox allow-presentation"></iframe>
<br>
          <iframe src="https://trello.com/c/eaumDXoG.html" width="100%" height="200" frameborder="0" style="border:0" seamless="seamless" sandbox="allow-same-origin allow-scripts allow-forms allow-popups allow-popups-to-escape-sandbox allow-presentation"></iframe>
<br>
          <iframe src="https://trello.com/c/fpA2ryJw.html" width="100%" height="200" frameborder="0" style="border:0" seamless="seamless" sandbox="allow-same-origin allow-scripts allow-forms allow-popups allow-popups-to-escape-sandbox allow-presentation"></iframe>
</p>
<aside class="quote no-group" data-username="BlackATTR" data-post="10" data-topic="176">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/blackattr/40/204_2.png" class="avatar"> BlackATTR:</div>
<blockquote>
<p>As much as I love the rebol lineage, I don't think much about Rebol/Red in terms of rising popularity.</p>
</blockquote>
</aside>
<p>Programming is a large market, and it's only going to grow more.</p>
<p>If you observe the history of things, increased productivity and task specialization creates more leisure time.  "leisure programming" is something of a niche today...though of course I am one of the weirdos who is into it:</p>
<aside class="onebox stackexchange">
  <header class="source">
      <a href="https://stackoverflow.com/questions/1683857/code-golf-hourglass" target="_blank" rel="noopener">stackoverflow.com</a>
  </header>
  <article class="onebox-body">
      <a href="https://stackoverflow.com/users/41983/liranuna" target="_blank" rel="noopener">
    <img alt="LiraNuna" src="https://www.gravatar.com/avatar/b0ba95520a016f7938d53a3812c47152?s=128&amp;d=identicon&amp;r=PG" class="thumbnail onebox-avatar" width="128" height="128">
  </a>
<h4>
  <a href="https://stackoverflow.com/questions/1683857/code-golf-hourglass" target="_blank" rel="noopener">Code Golf: Hourglass</a>
</h4>

<div class="tags">
  <strong>language-agnostic, code-golf, rosetta-stone</strong>
</div>

<div class="date">
  asked by
  
  <a href="https://stackoverflow.com/users/41983/liranuna" target="_blank" rel="noopener">
    LiraNuna
  </a>
  on <a href="https://stackoverflow.com/questions/1683857/code-golf-hourglass" target="_blank" rel="noopener">09:43PM - 05 Nov 09 UTC</a>
</div>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p>...but I theorize that AI, especially, is going to love this kind of thing.  It's a sport of the future.  (Maybe just dumb AIs, but note a lot of people watch NASCAR today.  Why couldn't this be wildly popular too?)</p>
<aside class="quote no-group" data-username="BlackATTR" data-post="10" data-topic="176">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/blackattr/40/204_2.png" class="avatar"> BlackATTR:</div>
<blockquote>
<p>I doubt Red / Rebol will play well with teams of (modern) factory-style software devs. Redbol is more about empowering individual developers and putting a simple syntax over as much compact power and utility as possible.</p>
</blockquote>
</aside>
<p>Bingo.</p>
<p>I spent my early career in software in a "let's formalize the world" mindset... wanting better tools.  For everything: I'd blame pencils for why I couldn't draw, noticing how much more you can do with a computer when you just give your specification and let <em>it</em> draw.  When I thought about how drawing programs should work, what I envisioned is a lot like how SolidWorks acts, you give it constraints and intents that can adjust as your thought process changes:</p>
<div class="onebox lazyYT lazyYT-container" data-youtube-id="SX9cFW5iZSY" data-youtube-title="FIRST LOOK- SolidWorks 3D CAD Design" data-parameters="feature=oembed&amp;wmode=opaque">
  <a href="https://www.youtube.com/watch?v=SX9cFW5iZSY" target="_blank" rel="noopener">
    <img class="ytp-thumbnail-image" src="https://i.ytimg.com/vi/SX9cFW5iZSY/hqdefault.jpg" title="FIRST LOOK- SolidWorks 3D CAD Design" width="480" height="360">
  </a>
</div>

<p>And the slow tendency of things to formalize brings more and more of this to programming, as C evolved to C++, or as people try and make Haskell "do things".</p>
<aside class="onebox allowlistedgeneric">
  <header class="source">
      <a href="http://blog.hostilefork.com/modern-cpp-or-modern-art/" target="_blank" rel="noopener">blog.hostilefork.com</a>
  </header>
  <article class="onebox-body">
    <img src="" class="thumbnail" width="" height="">

<h3><a href="http://blog.hostilefork.com/modern-cpp-or-modern-art/" target="_blank" rel="noopener">c++ : Modern C++... or Modern Art?</a></h3>



  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p>When you think about projects worked on by multiple people, these abilities are critical.  I used to work on trying to get this aesthetic into the editing environment for code, itself:</p>
<div class="onebox lazyYT lazyYT-container" data-youtube-id="tSnnfUj1XCQ" data-youtube-title="Intentional Programming demo (Part 1) - Editor" data-parameters="feature=oembed&amp;wmode=opaque&amp;start=286">
  <a href="https://www.youtube.com/watch?v=tSnnfUj1XCQ" target="_blank" rel="noopener">
    <img class="ytp-thumbnail-image" src="https://i.ytimg.com/vi/tSnnfUj1XCQ/hqdefault.jpg" title="Intentional Programming demo (Part 1) - Editor" width="480" height="360">
  </a>
</div>

<p>But to continue the drawing analogy: I got more interested in aspects other than psychic tools...what it meant to not use software at all, or to use software that was focused differently.  The ability to draw unconstrained and know what that was.  I think that there may come a day when all the conventional wisdom about what it takes to do "correct" software engineering would feel restrictive...</p>
<p>So in my mind, the job here is to give future Picassos who have been working in SolidWorks their whole lives their first paintbrush.  Rebol was the first interpreted language I didn't hate (time and circumstance meant I kind of missed Lisp)...and I think it can be bent to have a timeless character, if people are patient enough with it.</p>
<aside class="quote no-group" data-username="BlackATTR" data-post="10" data-topic="176">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/blackattr/40/204_2.png" class="avatar"> BlackATTR:</div>
<blockquote>
<p>How far is too far? And what can we do with a language that slippery, a language that gooey and melty?</p>
</blockquote>
</aside>
<p>I don't know.  But I do know that I appreciate Rebol most when I'm being forced to use something else.</p>
          <p><a href="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/18</link>
        <pubDate>Mon, 03 Jul 2017 20:12:48 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-176-18</guid>
        <source url="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176.rss">Could Rebol syntax adjustments attract newcomers?</source>
      </item>
      <item>
        <title>Could Rebol syntax adjustments attract newcomers?</title>
        <dc:creator><![CDATA[JacobGood1]]></dc:creator>
        <description><![CDATA[
            <p>I would prefer that the map data type be #[] instead of #(), however, I have no objective reason for this. I like regular syntax constructs if we are using special character designations, otherwise I like for the data structure to have a unique way of being written. Since the block is the most commonly used structure, it "feels better" for it to be used with a map, unless someone can figure out a unique syntax for maps.</p>
          <p><a href="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/17</link>
        <pubDate>Mon, 03 Jul 2017 16:35:41 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-176-17</guid>
        <source url="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176.rss">Could Rebol syntax adjustments attract newcomers?</source>
      </item>
      <item>
        <title>Could Rebol syntax adjustments attract newcomers?</title>
        <dc:creator><![CDATA[draegtun]]></dc:creator>
        <description><![CDATA[
            <p><strong>re: unicode literals</strong></p>
<p>I'm certainly not against using unicode characters for new literals.</p>
<p>Perl6 uses <code>« ... »</code> literals.  But for each unicode choice it has an ASCII fallback called <a href="https://docs.perl6.org/language/unicode_texas#Other_acceptable_single_codepoints" rel="nofollow noopener">Texas</a>.   So <code>&lt;&lt; ... &gt;&gt;</code> can be used to mean same thing here.</p>
<p>Another unicode block Perl6 makes use of is: <code>｢ ... ｣</code></p>
<p><strong>re: semi-colon comment</strong></p>
<p>I'm very happy with semi-colon for comment.  In Lisp world there is a clear convention on how to use them - <a href="http://mr.gy/ansi-common-lisp/Semicolon.html" rel="nofollow noopener">http://mr.gy/ansi-common-lisp/Semicolon.html</a></p>
          <p><a href="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/16</link>
        <pubDate>Mon, 03 Jul 2017 16:27:27 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-176-16</guid>
        <source url="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176.rss">Could Rebol syntax adjustments attract newcomers?</source>
      </item>
      <item>
        <title>Could Rebol syntax adjustments attract newcomers?</title>
        <dc:creator><![CDATA[draegtun]]></dc:creator>
        <description><![CDATA[
            <p>I think Rebol does need some literals for <code>OBJECT!</code> and <code>MAP!</code> datatypes.  So perhaps Rebol may adopt Red's <code>#()</code> map literal?  At moment the Rebol jury is out on that one!</p>
<p>Like <a class="mention" href="/u/hostilefork">@hostilefork</a> I do like Rebol/Red's <code>{}</code> multi-line balanced string literal. I did once have idea perhaps using <code>{{ ... }}</code>  (can use any number of multiple matching curly braces) for multi-line <code>STRING!</code> to free up <code>{...}</code> for <code>OBJECT!</code>.  It's a big change though and haven't even convinced myself yet!</p>
<p><code>COMMA!</code> datatype has been discussed a few times before and is something i do like look of.  So <code>[1,2,3]</code> would PARSE has <code>[integer! comma! integer! comma! integer!]</code> but would be treated as whitespace by DO evaluator: <code>[1 2 3]</code></p>
          <p><a href="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/15</link>
        <pubDate>Mon, 03 Jul 2017 16:18:10 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-176-15</guid>
        <source url="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176.rss">Could Rebol syntax adjustments attract newcomers?</source>
      </item>
      <item>
        <title>Could Rebol syntax adjustments attract newcomers?</title>
        <dc:creator><![CDATA[JacobGood1]]></dc:creator>
        <description><![CDATA[
            <p>Parse itself is just another dialect of rebol. With parse, you can execute arbitrary rebol code at any given point, in any given rule. You can redefine how parse is parsing on the fly by redefining the rule it is using. You can build a parser on top of parse... basically, your imagination is the limit here.  If you have the will power, you can make it work with anything.</p>
          <p><a href="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/14</link>
        <pubDate>Sun, 02 Jul 2017 20:56:16 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-176-14</guid>
        <source url="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176.rss">Could Rebol syntax adjustments attract newcomers?</source>
      </item>
      <item>
        <title>Could Rebol syntax adjustments attract newcomers?</title>
        <dc:creator><![CDATA[darrencruse]]></dc:creator>
        <description><![CDATA[
            <p>Thanks for all the interesting replies seems like you guys have a really great helpful community around Rebol and Red!!</p>
<p>atm you guys motivated me enough to put aside my pie-in-the-sky ideas and learn more of the basics re the Rebol/Ren-C/Red differences and just basic tutorials with the GUI and Parse dialects.</p>
          <p><a href="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/13</link>
        <pubDate>Sun, 02 Jul 2017 19:02:55 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-176-13</guid>
        <source url="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176.rss">Could Rebol syntax adjustments attract newcomers?</source>
      </item>
      <item>
        <title>Could Rebol syntax adjustments attract newcomers?</title>
        <dc:creator><![CDATA[Brett]]></dc:creator>
        <description><![CDATA[
            <p>Before I used Rebol I'd never parsed anything - didn't know much about it. Rebol's Parse made the concept accessible and easy to play with.</p>
<blockquote>
<p>is it capable enough to do a full blown arbitrary syntax "language" transpiled to Rebol?</p>
</blockquote>
<p>I don't know about any language but one can do a lot with Parse. "if the juice is worth the squeeze" is the right answer and I'd like the squeeze to be a little easier <img src="//forum.rebol.info/images/emoji/twitter/slight_smile.png?v=7" title=":slight_smile:" class="emoji" alt=":slight_smile:"> because sometimes beyond utility, it can actually even be fun to extract information from other formats into <a href="https://en.wikipedia.org/wiki/Homoiconicity" rel="nofollow noopener">homoiconic</a> Rebol.</p>
<p>Yes Parse has a text parsing mode and a block parsing mode.  One can use the text mode for scanning tokens into Rebol values a block and re-process that, or other strategies.</p>
<p>Some years ago I wrote a <a href="http://codeconscious.com/rebol/articles/some-parse-tools.html" rel="nofollow noopener">script</a> to extract and transpile (well 90%) Augmented Backus–Naur form (<a href="https://en.wikipedia.org/wiki/Augmented_Backus%E2%80%93Naur_form" rel="nofollow noopener">ABNF</a>) rules embedded within internet RFC documents into Rebol parse rules.  I don't pretend that my method is the best way to do this, but I think it demonstrates that one can do some sophisticated things with Parse including dealing with arbritrary syntax.</p>
          <p><a href="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/12</link>
        <pubDate>Sun, 02 Jul 2017 01:33:53 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-176-12</guid>
        <source url="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176.rss">Could Rebol syntax adjustments attract newcomers?</source>
      </item>
      <item>
        <title>Could Rebol syntax adjustments attract newcomers?</title>
        <dc:creator><![CDATA[gchiu]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="8" data-topic="176" data-full="true">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="//forum.rebol.info/user_avatar/forum.rebol.info/darrencruse/40/234_2.png" class="avatar"> darrencruse:</div>
<blockquote>
<p>e.g. that they would let you escape out and inline rebol code expressions in the middle of the strings.  like the quote/quasiquote stuff in lisp/scheme, or (simpler) the ES6 "template strings" like <code>hello ${nameVar}</code></p>
<p>Rebol doesn't have those right - but I guess it's not  needed since ["hello" name] is just as short right.</p>
</blockquote>
</aside>
<p>See this help example on <a href="https://github.com/gchiu/reboldocs/blob/master/reword.MD" rel="nofollow noopener">reword</a> on how to use template strings.</p>
          <p><a href="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/11</link>
        <pubDate>Sat, 01 Jul 2017 23:12:43 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-176-11</guid>
        <source url="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176.rss">Could Rebol syntax adjustments attract newcomers?</source>
      </item>
      <item>
        <title>Could Rebol syntax adjustments attract newcomers?</title>
        <dc:creator><![CDATA[BlackATTR]]></dc:creator>
        <description><![CDATA[
            <p>I'm not the best person to respond from a Red/Rebol programming perspective-- I'm not a programmer. This topic is highly subjective but I'll share my personal thoughts.</p>
<p>As much as I love the rebol lineage, I don't think much about Rebol/Red in terms of rising popularity. Most programmers are taught the ALGOL/curly-brace languages. Those languages are fast, compiled in some form or static. It's where the biggest communities are, the $ is, the marketplace ecosystem is. The IT production toolchain is designed to work with these languages in IDEs and with large global dev teams in mind where devs can wire-together libraries of code or frameworks without understanding the code. Outside that circle there are others interested in pure functional languages, usually for parallel/concurrent programming-- again something that Red/Rebol are not really targeting.</p>
<p>Red/Rebol are so different as to be largely off-the-map. You know how the above programmers complain about Javascript -- it's too dynamic, no compiler, too much happening at run-time? Well Red/Rebol take a calculated "Damn the torpedoes!" approach: How <em>far</em> we can push dynamic interpretation? How far is too far? And what can we do with a language <em>that</em> slippery, a language <em>that</em> gooey and melty?</p>
<p>And I think that's what makes these languages so interesting. I think the Red/Rebol evaluation model + Parse should make it the most dev-friendly language for DSLs ever produced. Apart from its basic utility, I think that's the most unique benefit of its radical ideas. Red takes that further and trains its sights on full-stack development and Android programming. Ren-C embraces the "how far is too far?" ethos like a rabid maniac. I can't wait to see the jaw-dropping witchcraft that project produces. (You want curly braces? HostileFork is the guy you wanna talk to.)</p>
<p>I doubt Red / Rebol will play well with teams of (modern) factory-style software devs. Redbol is more about empowering individual developers and putting a simple syntax over as much compact power and utility as possible. I have hundreds of Rebol scripts for file munging/data-wrangling that I use at work, but I'm in the process of writing an extensible SQL-like dialect in Red to provide a more business-friendly syntax so my teams can take more ownership.</p>
<p>I'll let the Redbol gurus answer about transpiling. I think the answer is "Yes", but suitability depends what you're trying to achieve and how much work you're willing to put in. Could a Redbol dialect be used, for example, to compile to Javascript, or another language -- or act like a vm a la Elixir for Erlang (or Kotlin, Scala, Closure for Java)? Depending on the syntax, you may need to parse source from strings because the code/syntax is un-loadable in Redbol. That's doable, but there's probably a spectrum where some things are much harder than others, at which point you need to ask if the juice is worth the squeeze.</p>
          <p><a href="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/10</link>
        <pubDate>Sat, 01 Jul 2017 18:08:32 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-176-10</guid>
        <source url="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176.rss">Could Rebol syntax adjustments attract newcomers?</source>
      </item>
      <item>
        <title>Could Rebol syntax adjustments attract newcomers?</title>
        <dc:creator><![CDATA[darrencruse]]></dc:creator>
        <description><![CDATA[
            <p><span class="mention">@all</span>  I enjoyed all the comments it really makes me want to learn Rebol much much better I'm truly just a beginner.  I've mostly just been skimming the surface feeling I see Rebol's potential.</p>
<p>e.g. I do see the value in the GUI dialects I've done a lot of "back office" internal-use-only apps in my career where the UIs just had to function they didn't have to be super super pretty - so I <em>love</em> how short the Rebol GUI programs are!  Even if they're not always the most pretty.  I do see them as a practical solution to a real problem that many businesses I've worked for have.  Esp if the cross platform support (ideally including browser) were fully there (and if there was maybe a little of a UI makeover with some of the default look).</p>
<p>But all your comments also made me recognize I should confess:  for me personally the languages I've used most in my career have been C/C++/Java/Javascript, and I've most often been surrounded by people who likewise were most familiar with those languages as well.</p>
<p>So I'm sure I have a bias that makes me like these syntax sugar ideas.</p>
<p>I imagine myself getting better with Rebol, falling in love with it even, and the next thought is - will I be able to persuade my coworkers to use it?</p>
<p>So I'm admitting - for me curly brace for code blocks, // or /* */ for comments would be most beneficial.  Not so much for me since I'm motivated but for persuading others.</p>
<p>OTOH I've heard syntax compared to "fashion" right.</p>
<p>And regarding <a class="mention" href="/u/brett">@Brett</a> and <a class="mention" href="/u/blackattr">@BlackATTR</a> - I love how the Parse stuff lets you extend and customize what Rebol gives as standard.</p>
<p>But I'm just a Parse beginner - is it capable enough to do a full blown arbitrary syntax "language" transpiled to Rebol?</p>
<p>e.g. Doesn't it separate text parsing versus the more grammar like approach that assumes you're dealing with "words" i.g. that are pre-tokenized using Rebol's mostly white space delimited syntax rules?</p>
<p>Or can it handle truly arbitrary syntax e.g. where things aren't always white space delimited?</p>
          <p><a href="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/9</link>
        <pubDate>Sat, 01 Jul 2017 16:35:25 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-176-9</guid>
        <source url="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176.rss">Could Rebol syntax adjustments attract newcomers?</source>
      </item>
      <item>
        <title>Could Rebol syntax adjustments attract newcomers?</title>
        <dc:creator><![CDATA[darrencruse]]></dc:creator>
        <description><![CDATA[
            <p><a class="mention" href="/u/hostilefork">@hostilefork</a> re:</p>
<blockquote>
<p>I'm a pretty big fan of having asymmetric string delimiters.</p>
</blockquote>
<blockquote>
<pre><code>print {"It's actually the case that curly braces for strings,"
    said @HostileFork, "give Rebol some of its unique character
    in terms of cutting down on escaping."}
</code></pre>
</blockquote>
<blockquote>
<pre><code> print { int foo(int x) { if (x &gt; 10) { printf("foo"); } } }
</code></pre>
<p>It lets you use the full range of quotes and apostrophes, and even to use curly braces in your strings so long as they are paired.</p>
</blockquote>
<p>For a moment I thought your examples showed I'd missed something about curly braces in Rebol that they are truly a "block" of strings or something.</p>
<p>e.g. that they would let you escape out and inline rebol code expressions in the middle of the strings.  like the quote/quasiquote stuff in lisp/scheme, or (simpler) the ES6 "template strings" like <code>hello ${nameVar}</code></p>
<p>Rebol doesn't have those right - but I guess it's not  needed since ["hello" name] is just as short right.</p>
          <p><a href="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/8</link>
        <pubDate>Sat, 01 Jul 2017 16:19:22 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-176-8</guid>
        <source url="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176.rss">Could Rebol syntax adjustments attract newcomers?</source>
      </item>
      <item>
        <title>Could Rebol syntax adjustments attract newcomers?</title>
        <dc:creator><![CDATA[darrencruse]]></dc:creator>
        <description><![CDATA[
            <p>Thanks Jacob I'll keep an eye out for Ren Garden.  I watched some of a youtube video showing it, it does look good I esp. like some of the variable watch stuff.</p>
<p>(which reminds me - I've not seen a single step debugger for Rebol is there one stepping code has helped me learn new languages in the past)</p>
          <p><a href="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/7</link>
        <pubDate>Sat, 01 Jul 2017 15:37:05 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-176-7</guid>
        <source url="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176.rss">Could Rebol syntax adjustments attract newcomers?</source>
      </item>
      <item>
        <title>Could Rebol syntax adjustments attract newcomers?</title>
        <dc:creator><![CDATA[Brett]]></dc:creator>
        <description><![CDATA[
            <p>I'd rather see Rebol's core language continue with simple syntax, but along with <a class="mention" href="/u/blackattr">@BlackATTR</a> I would welcome "language toolkit" features that help with loading/manipulating/interpreting/resaving non-native syntax/formats.</p>
<p>Rebol2's load/markup was perhaps a small step in this direction but it was quite underdone.  The C token scanning in the Ren-c build process shows that even if you don't load an entire language, loading some of it is still useful.</p>
<p>Perhaps newcomers would be attracted to a language that could access other syntaxes while at the same time quietly convincing them to transition to a more human friendly syntax?</p>
          <p><a href="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/6</link>
        <pubDate>Sat, 01 Jul 2017 01:54:17 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-176-6</guid>
        <source url="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176.rss">Could Rebol syntax adjustments attract newcomers?</source>
      </item>
      <item>
        <title>Could Rebol syntax adjustments attract newcomers?</title>
        <dc:creator><![CDATA[gchiu]]></dc:creator>
        <description><![CDATA[
            <p>Welcome to the board!  <img src="//forum.rebol.info/images/emoji/twitter/slight_smile.png?v=7" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<aside class="quote no-group" data-post="1" data-topic="176" data-full="true">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="//forum.rebol.info/user_avatar/forum.rebol.info/darrencruse/40/234_2.png" class="avatar"> darrencruse:</div>
<blockquote>
<p>It strikes me that Rebol is already more approachable than a classic lisp/scheme - that there's truly fewer brackets than there are parens in lisp.  I guess that's because of not using them for function application plus they're often implicit at the top level right.</p>
<p>But was there ever a thought at making some small syntax adjustments to align more with the C/java/javascript syntaxes that are most popular so easier to read for greater numbers of people?</p>
</blockquote>
</aside>
<p>So, if the advantage is fewer brackets, why add them back in again?  Javascript is popular because it's the only language that one can program web applications.  It's popular by necessity.</p>
<p>We have looked at the <em>comma</em> question and haven't been able to resolve it yet</p>
          <p><a href="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/5</link>
        <pubDate>Fri, 30 Jun 2017 22:59:51 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-176-5</guid>
        <source url="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176.rss">Could Rebol syntax adjustments attract newcomers?</source>
      </item>
      <item>
        <title>Could Rebol syntax adjustments attract newcomers?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>Hello Darren,</p>
<blockquote>
<p>The first thought along these lines is the use of curly braces for multiline strings - that to me seems a lost opportunity when having allowed { } as an alternative to [ ] for code blocks would have helped the readability to newcomers from these other languages.</p>
</blockquote>
<p>I'm a pretty big fan of having asymmetric string delimiters.</p>
<pre><code>print {"It's actually the case that curly braces for strings,"
    said @HostileFork, "give Rebol some of its unique character
    in terms of cutting down on escaping."}

 print { int foo(int x) { if (x &gt; 10) { printf("foo"); } } }
</code></pre>
<p>It lets you use the full range of quotes and apostrophes, and even to use curly braces in your strings so long as they are paired.</p>
<p>If anything, our problem is that there aren't enough asymmetric delimiters in ASCII, so we end up having to create "dictionary" literals with things like <code>#(a: 10 b: 20)</code>.  I've wondered if <code>&lt;&lt;a: 10 b: 20&gt;&gt;</code> would be better, perhaps even tolerating the unicode form <code>« a: 10 b: 20 »</code>.  :-/</p>
<p>So making equivalences just for a new user's visual comfort would be wasting an already scarce resource.  I think once people observe the value of the asymmetric string delimiters, they'll be happy enough to learn the brackets.</p>
<p>One thing that has been on the table, which I like, is the idea of using <code># pound plus space as a comment character</code>.  The <code>;</code> is too hard to notice, and workarounds for that people use aren't great:</p>
<pre><code>;; too fractured and dotty/noisy
;-- not much better, and doesn't mix with code
</code></pre>
<p>Syntax highlighting helps, but I think the high level of success <code>#</code> has experienced for this purpose indicates that it could be a good change.</p>
          <p><a href="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/4</link>
        <pubDate>Fri, 30 Jun 2017 20:39:57 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-176-4</guid>
        <source url="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176.rss">Could Rebol syntax adjustments attract newcomers?</source>
      </item>
      <item>
        <title>Could Rebol syntax adjustments attract newcomers?</title>
        <dc:creator><![CDATA[JacobGood1]]></dc:creator>
        <description><![CDATA[
            <p>I do not think that this is necessary. A really good ide will that gives users a powerful first impression will be all that is required, imo.  Few programmers are willing to fire up the command line and mess around with text editors.  Ren Garden is the answer, and that is going to be a simple download kiss solution very soon.</p>
          <p><a href="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/3</link>
        <pubDate>Fri, 30 Jun 2017 17:44:45 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-176-3</guid>
        <source url="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176.rss">Could Rebol syntax adjustments attract newcomers?</source>
      </item>
      <item>
        <title>Could Rebol syntax adjustments attract newcomers?</title>
        <dc:creator><![CDATA[BlackATTR]]></dc:creator>
        <description><![CDATA[
            <p>I'm not sure how well-received syntax changes would be to the core language, but I am interested in an aspect of dialects where a user or programmer can interact with a different syntax/semantic facade while rebol/red interprets and executes the expressions behind the scenes.  I think custom DSLs for workflow tracking and process control could benefit from an approach like this.</p>
          <p><a href="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/2</link>
        <pubDate>Fri, 30 Jun 2017 17:39:16 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-176-2</guid>
        <source url="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176.rss">Could Rebol syntax adjustments attract newcomers?</source>
      </item>
      <item>
        <title>Could Rebol syntax adjustments attract newcomers?</title>
        <dc:creator><![CDATA[darrencruse]]></dc:creator>
        <description><![CDATA[
            <p>In the category of "rebol language design" - curious if this has ever been discussed:</p>
<p>I myself am somewhat new to Rebol though I've done some Racket and played a little with Clojure etc. so I have a tiny leg up learning lispy style languages.</p>
<p>But for those that don't have such a background I've always felt these languages are difficult just cause they're so different, and the syntax is part of that (not all but part right).</p>
<p>It strikes me that Rebol is already more approachable than a classic lisp/scheme - that there's truly fewer brackets than there are parens in lisp.  I guess that's because of not using them for function application plus they're often implicit at the top level right.</p>
<p>But was there ever a thought at making some small syntax adjustments to align more with the C/java/javascript syntaxes that are most popular so easier to read for greater numbers of people?</p>
<p>The first thought along these lines is the use of curly braces for multiline strings - that to me seems a lost opportunity when having allowed { } as an alternative to [ ] for code blocks would have helped the readability to newcomers from these other languages.</p>
<p>(Racket allows { }. ( ), and [ ] as equivalents btw so there is precedent out there fwiw)</p>
<p>Following on that, if commas were treated as whitespace (Clojure does this), then along with the curly braces, unless I'm missing something (I might be) it seems to me you'd be able to paste JSON directly in Rebol...  I work with RESTful JSON services all the time so maybe I'm biased but I'd think it would be appealing to be able to be able to say that Rebol supports "JSON on steroids" (i.e. a superset of JSON when you consider the other types Rebol allows beyond the basic ones in standard JSON).</p>
<p>Anyway I could go on (I played with these ideas in an open source project I'd started called "SugarLisp"), but you get the idea. <img src="//forum.rebol.info/images/emoji/twitter/slight_smile.png?v=7" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>I know amoungst Lispers these ideas are not welcome but I always feel bad these languages never seem as popular as they deserve to be.</p>
<p>A similar idea I've been looking at recently is called "ReasonML" it's a new language from facebook where they did an alternative javascript-like syntax on OCAML to try and make it more appealing to JS people...</p>
<p>I'm assuming these ideas aren't easily done as a Rebol Dialect alone right.  I'm assuming it would either be a preprocessor or a variation on one of the Rebol implementations with a different file extension or something in that Rebol header since such changes (i.e. the curly brace one) wouldn't be backward compatible?</p>
<p>Partly just wondering what people think.  I'm guessing people who know Rebol well wouldn't like the idea, but again - it's not for them, it's for their java/javascript swilling cousins. <img src="//forum.rebol.info/images/emoji/twitter/slight_smile.png?v=7" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          <p><a href="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176/1</link>
        <pubDate>Fri, 30 Jun 2017 13:45:57 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-176-1</guid>
        <source url="https://forum.rebol.info/t/could-rebol-syntax-adjustments-attract-newcomers/176.rss">Could Rebol syntax adjustments attract newcomers?</source>
      </item>
  </channel>
</rss>
