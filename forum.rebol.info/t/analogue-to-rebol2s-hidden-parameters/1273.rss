<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Analogue to Rebol2&#39;s Hidden Parameters</title>
    <link>https://forum.rebol.info/t/analogue-to-rebol2s-hidden-parameters/1273</link>
    <description>Rebol2 had the property that any refinements after a local would not show up in HELP...but still be available:

    rebol2&gt;&gt; foo: func [arg /local loc /bar baz] [
        print [&quot;Unsurprisingly:&quot; arg]
        if bar [print [&quot;Surprise:&quot; baz]]
    ]

    rebol2&gt;&gt; help foo
    USAGE:
        FOO arg

    DESCRIPTION:
        (undocumented)
        FOO is a function value.
                               ; &lt;-- look, no /BAR...
    ARGUMENTS:
         arg -- (Type: any)

    rebol2&gt;&gt; foo/bar &quot;Ordinary argument.&quot; &quot;Hidden refinement!&quot;
    Unsurprisingly: Ordinary argument.
    Surprise: Hidden refinement!

It&#39;s actually just exploiting the fact that HELP stops printing out everything after /LOCAL in the spec block.

While it may seem like a loophole that gave rise to a useless feature, ***there actually is a reasonable use case for functions having out-of-band arguments.***

The use case is when a function recurses, and wants to pass some private state into the recursion.  If you try to do this in C or some other language, you have to write two functions with two different interfaces.  Simplistic example:

    fiveprint-core: func [value depth] [
        print [value]
            if depth &lt;&gt; 0 [
                fiveprint-core value (depth - 1)
            ]
        ]

    fiveprint: func [
        {Print a value five times (but use recursion to do it...)}
        value
    ][
        fiveprint-core value 5
    ]

Having a way to slip in hidden state gives you another option, *and it&#39;s an option that doesn&#39;t make you replicate the interface twice*.  This FIVEPRINT only takes one argument, but imagine if it had ten arguments with types and descriptions...and it&#39;s very helpful to not have to repeat that in a second function with a few extra internal parameters:

    fiveprint: func [
        {Print a value five times (but use recursion to do it...)}
        value
        /local /recurse depth
    ][
         either recurse [
             if depth &lt;&gt; 0 [
                 print [value]
                 fiveprint/recurse value (depth - 1)
             ]
         ][
             fiveprint/recurse value 5
         ]
    ]

## Ren-C Has Light-Years More Tools, but How To Apply Them Here?

If we didn&#39;t clear local variables during [tail-calls](https://trello.com/c/Bu40ecLC), you could slip state to a recursion that way.  I&#39;m not crazy about the idea of having locals be anything but null at the outset of any call, though.

Maybe REDO could offer a refinement to request the locals be kept as-is (or name specific ones to keep?)

It&#39;s a low-priority feature, but I had to document what it was for Redbol...and I figured having a post to talk about it was better than writing an essay there.</description>
    
    <lastBuildDate>Tue, 21 Apr 2020 08:31:48 +0000</lastBuildDate>
    <category>Redbol</category>
    <atom:link href="https://forum.rebol.info/t/analogue-to-rebol2s-hidden-parameters/1273.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Analogue to Rebol2&#39;s Hidden Parameters</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <blockquote>
<p><code>func [a /depth []] []</code></p>
</blockquote>
<p>That seems like a pretty good idea... a refinement which advertises no legal types by which you could call it!  Nice way to take advantage of the refinements-as-their-own-arguments...</p>
<p>Definitely will keep this idea on the radar.</p>
          <p><a href="https://forum.rebol.info/t/analogue-to-rebol2s-hidden-parameters/1273/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/analogue-to-rebol2s-hidden-parameters/1273/3</link>
        <pubDate>Tue, 21 Apr 2020 08:31:48 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1273-3</guid>
        <source url="https://forum.rebol.info/t/analogue-to-rebol2s-hidden-parameters/1273.rss">Analogue to Rebol2&#39;s Hidden Parameters</source>
      </item>
      <item>
        <title>Analogue to Rebol2&#39;s Hidden Parameters</title>
        <dc:creator><![CDATA[IngoHohmann]]></dc:creator>
        <description><![CDATA[
            <p>How about adding something like ...</p>
<p>Func[a /depth []][]</p>
<p>This way checking that this refinement is only used in recursive calls from the same function / from within the same object might be possible.</p>
          <p><a href="https://forum.rebol.info/t/analogue-to-rebol2s-hidden-parameters/1273/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/analogue-to-rebol2s-hidden-parameters/1273/2</link>
        <pubDate>Mon, 20 Apr 2020 15:17:39 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1273-2</guid>
        <source url="https://forum.rebol.info/t/analogue-to-rebol2s-hidden-parameters/1273.rss">Analogue to Rebol2&#39;s Hidden Parameters</source>
      </item>
      <item>
        <title>Analogue to Rebol2&#39;s Hidden Parameters</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>Rebol2 had the property that any refinements after a local would not show up in HELP...but still be available:</p>
<pre><code>rebol2&gt;&gt; foo: func [arg /local loc /bar baz] [
    print ["Unsurprisingly:" arg]
    if bar [print ["Surprise:" baz]]
]

rebol2&gt;&gt; help foo
USAGE:
    FOO arg

DESCRIPTION:
    (undocumented)
    FOO is a function value.
                           ; &lt;-- look, no /BAR...
ARGUMENTS:
     arg -- (Type: any)

rebol2&gt;&gt; foo/bar "Ordinary argument." "Hidden refinement!"
Unsurprisingly: Ordinary argument.
Surprise: Hidden refinement!
</code></pre>
<p>It's actually just exploiting the fact that HELP stops printing out everything after /LOCAL in the spec block.</p>
<p>While it may seem like a loophole that gave rise to a useless feature, <em><strong>there actually is a reasonable use case for functions having out-of-band arguments.</strong></em></p>
<p>The use case is when a function recurses, and wants to pass some private state into the recursion.  If you try to do this in C or some other language, you have to write two functions with two different interfaces.  Simplistic example:</p>
<pre><code>fiveprint-core: func [value depth] [
    print [value]
        if depth &lt;&gt; 0 [
            fiveprint-core value (depth - 1)
        ]
    ]

fiveprint: func [
    {Print a value five times (but use recursion to do it...)}
    value
][
    fiveprint-core value 5
]
</code></pre>
<p>Having a way to slip in hidden state gives you another option, <em>and it's an option that doesn't make you replicate the interface twice</em>.  This FIVEPRINT only takes one argument, but imagine if it had ten arguments with types and descriptions...and it's very helpful to not have to repeat that in a second function with a few extra internal parameters:</p>
<pre><code>fiveprint: func [
    {Print a value five times (but use recursion to do it...)}
    value
    /local /recurse depth
][
     either recurse [
         if depth &lt;&gt; 0 [
             print [value]
             fiveprint/recurse value (depth - 1)
         ]
     ][
         fiveprint/recurse value 5
     ]
]
</code></pre>
<h2>Ren-C Has Light-Years More Tools, but How To Apply Them Here?</h2>
<p>If we didn't clear local variables during <a href="https://trello.com/c/Bu40ecLC" rel="nofollow noopener">tail-calls</a>, you could slip state to a recursion that way.  I'm not crazy about the idea of having locals be anything but null at the outset of any call, though.</p>
<p>Maybe REDO could offer a refinement to request the locals be kept as-is (or name specific ones to keep?)</p>
<p>It's a low-priority feature, but I had to document what it was for Redbol...and I figured having a post to talk about it was better than writing an essay there.</p>
          <p><a href="https://forum.rebol.info/t/analogue-to-rebol2s-hidden-parameters/1273/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/analogue-to-rebol2s-hidden-parameters/1273/1</link>
        <pubDate>Fri, 10 Apr 2020 15:13:24 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1273-1</guid>
        <source url="https://forum.rebol.info/t/analogue-to-rebol2s-hidden-parameters/1273.rss">Analogue to Rebol2&#39;s Hidden Parameters</source>
      </item>
  </channel>
</rss>
