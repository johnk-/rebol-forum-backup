<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>MySQL extension</title>
    <link>https://forum.rebol.info/t/mysql-extension/1319</link>
    <description>For the MySQL extension, I now have a basic set of functions implemented. Here is a list of all functions and the status. I would like to know if the functions I still plan to implement are worth the trouble or can be skipped, and if any of the ones I think should be ignored are on the must-haves list of someone.

    mysql_affected_rows()            mysql-affected-rows            Basic functions
    mysql_autocommit()               mysql-autocommit               ?
    mysql_change_user()              mysql-change-user              ?
    mysql_character_set_name()       mysql-character-set-name       Done
    mysql_close()                    mysql-close                    Basic functions
    mysql_commit()                   NO                             Perform query &quot;commit;&quot;
    mysql_connect()                  NO                             Deprecated function
    mysql_create_db()                NO                             Deprecated function
    mysql_data_seek()                mysql-data-seek                Done
    mysql_debug()                    NO                             Needs super rights.
    mysql_drop_db()                  NO                             Deprecated function
    mysql_dump_debug_info()          NO                             Needs super rights
    mysql_eof()                      NO                             Deprecated function
    mysql_errno()                    mysql-errno                    Basic functions
    mysql_error()                    mysql-error                    Basic functions
    mysql_escape_string()            NO                             Depricated (Use a wrapper function)
    mysql_fetch_field()              mysql-fetch-field              Done
    mysql_fetch_field_direct()       mysql-fetch-field-direct       Done
    mysql_fetch_fields()             mysql-fetch-fields             Done
    mysql_fetch_lengths()            mysql-fetch-lengths            Done
    mysql_fetch_row()                mysql-fetch-row                Basic functions
    mysql_field_count()              mysql-field-count              Basic functions
    mysql_field_seek()               mysql-field-seek               Done
    mysql_field_tell()               mysql-field-tell               Done
    mysql_free_result()              mysql-free-result              Basic functions
    mysql_get_character_set_info()   mysql-get-character-set-info   Done
    mysql_get_client_info()          mysql-get-client-info          Basic functions
    mysql_get_client_version()       mysql-get-client-version       Done
    mysql_get_host_info()            mysql-get-host-info            Basic functions
    mysql_get_option()               NO                             Not available in older versions pre 2012
    mysql_get_proto_info()           mysql-get-proto-info           Done
    mysql_get_server_info()          mysql-get-server-info          Basic functions
    mysql_get_server_version()       mysql-get-server-version       Done
    mysql_get_ssl_cipher()           mysql-get-ssl-cipher           ?
    mysql_hex_string()               mysql-hex-string               ?
    mysql_info()                     mysql-info                     Done
    mysql_init()                     NO                             Not in MySQL 8.0
    mysql_insert_id()                mysql-insert-id                Done
    mysql_kill()                     mysql-kill                     For Threads?
    mysql_library_end()              mysql-library-end              For Threads?
    mysql_library_init()             mysql-library-init             For Threads?
    mysql_list_dbs()                 NO    
    mysql_list_fields()              NO    
    mysql_list_processes()           mysql-list-processes           For Threads?
    mysql_list_tables()              NO    
    mysql_more_results()             mysql-more-results             Done
    mysql_next_result()              mysql-next-result              Done
    mysql_num_fields()               mysql-num-fields               Done
    mysql_num_rows()                 mysql-num-rows                 Basic functions
    mysql_options()                  mysql-options                  ?
    mysql_options4()                 mysql-options4                 ?
    mysql_ping()                     mysql-ping                     Done
    mysql_query()                    mysql-query                    Basic functions
    mysql_real_connect()             mysql-connect                  Basic functions
    mysql_real_connect_dns_srv()     NO    
    mysql_real_escape_string()       NO                             Use a wrapper function
    mysql_real_escape_string_quote() NO                             Use a wrapper function
    mysql_real_query()               NO    
    mysql_refresh()                  NO                             Needs RELOAD privilege
    mysql_reload()                   NO                             Needs RELOAD privilege
    mysql_reset_connection()         NO                             Not available in older versions pre 2012
    mysql_reset_server_public_key()  NO    
    mysql_result_metadata()          NO    
    mysql_rollback()                 NO                             Perform query &quot;rollback;&quot;
    mysql_row_seek()                 mysql-row-seek                 Done
    mysql_row_tell()                 mysql-row-tell                 Done
    mysql_select_db()                NO    
    mysql_server_end()               NO    
    mysql_server_init()              NO    
    mysql_session_track_get_first()  NO    
    mysql_session_track_get_next()   NO    
    mysql_set_character_set()        mysql-set-character-set        Done
    mysql_set_local_infile_default() NO    
    mysql_set_local_infile_handler() NO    
    mysql_set_server_option()        NO    
    mysql_shutdown()                 NO    
    mysql_sqlstate()                 mysql-sqlstate                 Done
    mysql_ssl_set()                  mysql-ssl-set                  ?
    mysql_stat()                     mysql-stat                     Done
    mysql_store_result()             mysql-store-result             Basic functions
    mysql_thread_end()               mysql-thread-end               For Threads?
    mysql_thread_id()                mysql-thread-id                For Threads?
    mysql_thread_init()              mysql-thread-init              For Threads?
    mysql_thread_safe()              mysql-thread-safe              For Threads?
    mysql_use_result()               mysql-use-result               Done
    mysql_warning_count()            mysql-warning-count            Done
TBD: To Be Done, planning to add this in the next version
Done: Added
?: Not sure if needed and if so why is it needed as a separate native?
NO: I do not see the need for this, especially the list functions that show items based on Regular Expressions.</description>
    
    <lastBuildDate>Thu, 22 Oct 2020 12:06:21 +0000</lastBuildDate>
    <category>Databases</category>
    <atom:link href="https://forum.rebol.info/t/mysql-extension/1319.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>MySQL extension</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>I finally convinced my hosting provider to fix the setup. Pointing at <a href="https://www.cprogramming.com/tutorial/shared-libraries-linux-gcc.html">this page about shared libraries</a> I noticed the ldconfig had not been updated. So now I can use the programs I compile by the regular method and do not need to use the -Wl,rpath and other arguments any more. These tricks will be included in some form of documentation though in case somebody will run into similar issues on future occasions.</p>
          <p><a href="https://forum.rebol.info/t/mysql-extension/1319/24">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/mysql-extension/1319/24</link>
        <pubDate>Thu, 22 Oct 2020 12:06:21 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1319-24</guid>
        <source url="https://forum.rebol.info/t/mysql-extension/1319.rss">MySQL extension</source>
      </item>
      <item>
        <title>MySQL extension</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>I managed to achieve what I wanted, using the dynamic library that was installed outside one of the regular folders.</p>
<p>I had to link with</p>
<pre><code>-Wl,-rpath,/usr/lib64/irregularfolder
</code></pre>
<p>and</p>
<pre><code>-L/usr/lib64/irregularfolder -lmariadb
</code></pre>
<p>I checked on the server and ldd gave me the usage as I wanted to see it.<br>
Only hurdle I had to face was an illegal Foo in my header info, I had typed</p>
<pre><code>print "Content-type: text/html^/Foo"
</code></pre>
<p>Where I should have typed</p>
<pre><code>print "Content-type: text/html^/^/Foo"
</code></pre>
<p>(The second ^/ is implicit if you omit the "Foo" part)<br>
So that scared me for a moment as if it were <img src="https://forum.rebol.info/images/emoji/twitter/jack_o_lantern.png?v=9" title=":jack_o_lantern:" class="emoji" alt=":jack_o_lantern:"> Halloween <img src="https://forum.rebol.info/images/emoji/twitter/jack_o_lantern.png?v=9" title=":jack_o_lantern:" class="emoji" alt=":jack_o_lantern:">  already <img src="https://forum.rebol.info/images/emoji/twitter/ghost.png?v=9" title=":ghost:" class="emoji" alt=":ghost:"></p>
<p>Now up to integrating this solution into the build process.</p>
          <p><a href="https://forum.rebol.info/t/mysql-extension/1319/23">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/mysql-extension/1319/23</link>
        <pubDate>Mon, 19 Oct 2020 12:05:39 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1319-23</guid>
        <source url="https://forum.rebol.info/t/mysql-extension/1319.rss">MySQL extension</source>
      </item>
      <item>
        <title>MySQL extension</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="iArnold" data-post="21" data-topic="1319">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/iarnold/40/226_2.png" class="avatar"> iArnold:</div>
<blockquote>
<p><a href="https://www.php.net/manual/en/function.mysql-real-escape-string.php">PHP real escape example</a> So this can be done from within the script handling the input itself when a function mysql-real-escape-string is available.</p>
</blockquote>
</aside>
<p>The prepared statements offer a  "placeholder" form, similar to ODBC...which may be better than using the escaping form:</p>
<p><em>"As an alternative to explicitly escaping special characters, many MySQL APIs provide a placeholder capability that enables you to insert special markers into a statement string, and then bind data values to them when you issue the statement. In this case, the API takes care of escaping special characters in the values for you."</em></p>
<p>An advantage of using that form would be that it would be more similar to the way the ODBC is implemented.</p>
<aside class="quote no-group" data-username="iArnold" data-post="21" data-topic="1319">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/iarnold/40/226_2.png" class="avatar"> iArnold:</div>
<blockquote>
<p>Will the native mysql-query always have to expect a string and a block of items to be replaced, even if the query is used when there is NO user input at all intended?</p>
</blockquote>
</aside>
<p>If the implementation is done in layers, then you can have a higher level form which takes a single parameter...either a string, or a block with the values escaped inline.</p>
<p>See the <a href="https://forum.rebol.info/t/rethinking-the-odbc-dialect-inline-parameters/1234">ODBC-EXECUTE</a> example.</p>
<p>What I suggest is making the C natives about as simple and close to the C API they wrap as possible, and doing the transformative work in usermode code above that.</p>
          <p><a href="https://forum.rebol.info/t/mysql-extension/1319/22">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/mysql-extension/1319/22</link>
        <pubDate>Tue, 13 Oct 2020 15:29:20 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1319-22</guid>
        <source url="https://forum.rebol.info/t/mysql-extension/1319.rss">MySQL extension</source>
      </item>
      <item>
        <title>MySQL extension</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="2" data-topic="1319">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>The natives you are writing need to be parameterized somehow in a way that separates the code and the data. Something like:</p>
<pre><code class="lang-auto">table: "widgets"
quantity: 10
mysql-query "select data from ? where x = ?" [table quantity]  ; "good"

mysql-query spaced ["select data from" table "where x =" quantity]  ; "bad"
</code></pre>
<p>You're not using the <code>mysql_escape_xxx</code> or <code>mysql_real_escape_xxx</code> functions.</p>
</blockquote>
</aside>
<p>I see and understand the principle.<br>
How would this work out?<br>
Will the native mysql-query always have to expect a string and a block of items to be replaced, even if the query is used when there is NO user input at all intended? I have several scripts that are just internal use on the website, like retrieving the number of visitors (and upping it by 1 and saving it). An extra empty block to add seems useless to me.</p>
<p>Perhaps introducing a mysql-execute function for this is a good option.</p>
<p><a href="https://www.php.net/manual/en/function.mysql-real-escape-string.php">PHP real escape example</a> So this can be done from within the script handling the input itself when a function mysql-real-escape-string is available.</p>
<p>There is an alternative in prepared statements too.</p>
          <p><a href="https://forum.rebol.info/t/mysql-extension/1319/21">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/mysql-extension/1319/21</link>
        <pubDate>Tue, 13 Oct 2020 09:57:28 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1319-21</guid>
        <source url="https://forum.rebol.info/t/mysql-extension/1319.rss">MySQL extension</source>
      </item>
      <item>
        <title>MySQL extension</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="19" data-topic="1319">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>And if you need to manipulate it, it would be a better exercise to do it with the r3 executable...</p>
</blockquote>
</aside>
<p>The fact that I cannot use the r3 executable is because it will not load for the missing of the dynamic library for mariadb, and putting one extra version of it there to use just for this sole purpose feels like overkill to me.</p>
<p>However if the r3 executable could load the mysql module on the fly by reading a setup file from the current folder (perhaps also using a symlink to the host provided library from the current folder) ... that would be nice.</p>
          <p><a href="https://forum.rebol.info/t/mysql-extension/1319/20">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/mysql-extension/1319/20</link>
        <pubDate>Mon, 12 Oct 2020 08:10:27 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1319-20</guid>
        <source url="https://forum.rebol.info/t/mysql-extension/1319.rss">MySQL extension</source>
      </item>
      <item>
        <title>MySQL extension</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="18" data-topic="1319">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/iarnold/40/226_2.png" class="avatar"> iArnold:</div>
<blockquote>
<p>Third line catches the content of the Rebol script by streaming it from line 5 where it starts until the end</p>
</blockquote>
</aside>
<p>sed is one of those unreadable things we're attempting to replace. What keeps you from making the output of the script exactly what you want?  And if you need to manipulate it, it would be a better exercise to do it with the r3 executable...</p>
<aside class="quote no-group" data-post="18" data-topic="1319">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/iarnold/40/226_2.png" class="avatar"> iArnold:</div>
<blockquote>
<p>I will document this option, but as you will understand I will be using the static linked version from now on.</p>
</blockquote>
</aside>
<p>It's often easiest to use statically linked versions of things.  But then two programs running on the same machine that both static link a library wind up loading two copies of the library into memory if they both run.  So it multiplies the disk space you use, as well as potentially the memory when you are running multiple copies at once.</p>
<p>An additional thing is that when you statically link a library version into your executable, then that means if it's something that gets security updates or patches (like OpenSSL) your executable won't get those patches even if the installed shared library does.</p>
<p>For these reasons (excuses?) you will find static linking is not always made all that easy...and sometimes, even made impossible.</p>
          <p><a href="https://forum.rebol.info/t/mysql-extension/1319/19">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/mysql-extension/1319/19</link>
        <pubDate>Thu, 08 Oct 2020 14:48:48 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1319-19</guid>
        <source url="https://forum.rebol.info/t/mysql-extension/1319.rss">MySQL extension</source>
      </item>
      <item>
        <title>MySQL extension</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>Great. So having no symlink and no host provider to put one up, I dug deeper again.</p>
<p>Conclusion:</p>
<ol>
<li>
<p>It will be easiest to link with the static library ( .a) and use the resulting executable.</p>
</li>
<li>
<p>It is possible to have a workaround!</p>
</li>
</ol>
<p>Let me shortly explain the workaround now.</p>
<p>Instead of using the direct method using the Rebol CGI program on the shebang line like this</p>
<pre><code>#!/path/to/cgi-bin/r3 -c
</code></pre>
<p>We will use the bash shell as an intermediate.</p>
<pre><code>#!/bin/bash
export LD_LIBRARY_PATH=/path/to/cgi-bin/
sed -n -e '5,$p' &lt; "$0" | /path/to/cgi-bin/r3 -c "$0" "$@"
exit $?
REBOL []
print "Content-type: text/html^/Foo"
</code></pre>
<p>(Source <a href="http://rosettacode.org/wiki/Multiline_shebang" rel="nofollow noopener">Multiline Shebang</a> )<br>
What happens here?<br>
First line calls the bash shell<br>
Second line exports the LD_LIBRARY_PATH environment variable to add the directory where the runtime loader will look for the dynamic libraries used. In this case I made a symbolic link here that points to the appropriate libmariadb.so.3 library.<br>
Third line catches the content of the Rebol script by streaming it from line 5 where it starts until the end ( $p ) into the variable $0 and pipes this through to the Rebol r3 CGI program, using -c to signal it is to be executed as a CGI script (I managed to catch the welcome message of the Rebol console in my error log! <img src="https://forum.rebol.info/images/emoji/twitter/smiley.png?v=9" title=":smiley:" class="emoji" alt=":smiley:"> )<br>
On line 4 the bash shell is exited and the script itself is following after that.</p>
<p>I will document this option, but as you will understand I will be using the static linked version from now on.</p>
          <p><a href="https://forum.rebol.info/t/mysql-extension/1319/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/mysql-extension/1319/18</link>
        <pubDate>Thu, 08 Oct 2020 08:19:23 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1319-18</guid>
        <source url="https://forum.rebol.info/t/mysql-extension/1319.rss">MySQL extension</source>
      </item>
      <item>
        <title>MySQL extension</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="16" data-topic="1319">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/iarnold/40/226_2.png" class="avatar"> iArnold:</div>
<blockquote>
<p>But the environment variable is not persistent between SSH sessions so setting this is of no use in my case.</p>
</blockquote>
</aside>
<p>There's almost always some way to configure environment variables persistently.</p>
<p>There's <a href="https://serverfault.com/questions/261802/what-are-the-functional-differences-between-profile-bash-profile-and-bashrc" rel="nofollow noopener"><strong><code>.profile</code></strong> <strong><code>.bash-profile</code></strong>, and <strong><code>.bashrc</code></strong></a>, for example.</p>
<p><em>(Remember to be sure to do <code>export VAR=xxx</code> and not <code>set VAR=xxx</code>, because SET doesn't pass the variable up to the calling environment of a shell script.)</em></p>
<p>If you're trying to configure an environment variable to be present when the web server is running (e.g. you're not logged in) that's different.  But it's certainly something a host that let you run your own processes should let you specify one way or another.</p>
<blockquote>
<p>I suspect the PHP on this system uses the very same method and is also not using the .so lib.</p>
</blockquote>
<p>Seems you now know enough to dig around in the executables, the libraries they depend on, and that those depend on etc. to find the answers to such questions vs. guess...</p>
          <p><a href="https://forum.rebol.info/t/mysql-extension/1319/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/mysql-extension/1319/17</link>
        <pubDate>Mon, 05 Oct 2020 22:35:33 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1319-17</guid>
        <source url="https://forum.rebol.info/t/mysql-extension/1319.rss">MySQL extension</source>
      </item>
      <item>
        <title>MySQL extension</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>So I experimented more with this and the conclusion is a little disappointing.<br>
Because the loader searches on runtime in the default directories for the shared library, it will not find the one in the special directory. Using the environment variable $LD_LIBRARY_PATH can help on compile time to find the dependency, and when run. But the environment variable is not persistent between SSH sessions so setting this is of no use in my case.<br>
The best option I have for now is continuing with linking the .a library (so remove or rename the .so one) and making it static.<br>
I suspect the PHP on this system uses the very same method and is also not using the .so lib.</p>
<p>And just when writing this up, another idea pops up. Passing the environment variable through the .htaccess file using SetEnv directive.</p>
<p>Well that would not work because the libname is not .so but .so.3 and a symlink is also not an option.<br>
Putting the .so.3 and a symlink .so in the directory (cgi-bin) is also no option, because that also does not work. (Strange but true)</p>
          <p><a href="https://forum.rebol.info/t/mysql-extension/1319/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/mysql-extension/1319/16</link>
        <pubDate>Mon, 05 Oct 2020 19:59:08 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1319-16</guid>
        <source url="https://forum.rebol.info/t/mysql-extension/1319.rss">MySQL extension</source>
      </item>
      <item>
        <title>MySQL extension</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>I got a libmariadbclient.a file in my /usr/lib64 on my local VM, that explains.</p>
          <p><a href="https://forum.rebol.info/t/mysql-extension/1319/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/mysql-extension/1319/15</link>
        <pubDate>Sun, 04 Oct 2020 15:09:03 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1319-15</guid>
        <source url="https://forum.rebol.info/t/mysql-extension/1319.rss">MySQL extension</source>
      </item>
      <item>
        <title>MySQL extension</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="13" data-topic="1319">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/iarnold/40/226_2.png" class="avatar"> iArnold:</div>
<blockquote>
<p>Did I static link the library, the program is about 0.3 MB larger..</p>
</blockquote>
</aside>
<p>If it works, that's almost a certainty.</p>
<p>If you want to go even deeper into understanding what's in an executable, there is <strong><code>nm</code></strong>.</p>
<p><a href="https://www.mkssoftware.com/docs/man1/nm.1.asp" class="onebox" target="_blank" rel="nofollow noopener">https://www.mkssoftware.com/docs/man1/nm.1.asp</a></p>
          <p><a href="https://forum.rebol.info/t/mysql-extension/1319/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/mysql-extension/1319/14</link>
        <pubDate>Sat, 03 Oct 2020 19:32:57 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1319-14</guid>
        <source url="https://forum.rebol.info/t/mysql-extension/1319.rss">MySQL extension</source>
      </item>
      <item>
        <title>MySQL extension</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>My VM froze on me just after I had tested the program on the host and before I could save the correct link step used.<br>
I had to reset.<br>
Now I have a working program again, but the ldd dependencies do not mention the libmariadbclient (nor some libmysql)</p>
<pre><code>linux-vdso.so.1 =&gt;  (0x00007ffcb4f1d000)
libm.so.6 =&gt; /lib64/libm.so.6 (0x00007f04c07c3000)
libdl.so.2 =&gt; /lib64/libdl.so.2 (0x00007f04c05bf000)
libpthread.so.0 =&gt; /lib64/libpthread.so.0 (0x00007f04c03a3000)
libz.so.1 =&gt; /lib64/libz.so.1 (0x00007f04c018d000)
libssl.so.10 =&gt; /lib64/libssl.so.10 (0x00007f04bff1b000)
libcrypto.so.10 =&gt; /lib64/libcrypto.so.10 (0x00007f04bfab8000)
libc.so.6 =&gt; /lib64/libc.so.6 (0x00007f04bf6ea000)
/lib64/ld-linux-x86-64.so.2 (0x00007f04c0ac5000)
libgssapi_krb5.so.2 =&gt; /lib64/libgssapi_krb5.so.2 (0x00007f04bf49d000)
libkrb5.so.3 =&gt; /lib64/libkrb5.so.3 (0x00007f04bf1b4000)
libcom_err.so.2 =&gt; /lib64/libcom_err.so.2 (0x00007f04befb0000)
libk5crypto.so.3 =&gt; /lib64/libk5crypto.so.3 (0x00007f04bed7d000)
libkrb5support.so.0 =&gt; /lib64/libkrb5support.so.0 (0x00007f04beb6d000)
libkeyutils.so.1 =&gt; /lib64/libkeyutils.so.1 (0x00007f04be969000)
libresolv.so.2 =&gt; /lib64/libresolv.so.2 (0x00007f04be74f000)
libselinux.so.1 =&gt; /lib64/libselinux.so.1 (0x00007f04be528000)
libpcre.so.1 =&gt; /lib64/libpcre.so.1 (0x00007f04be2c6000)
</code></pre>
<p>So how is this possible? Did I static link the library, the program is about 0.3 MB larger..</p>
          <p><a href="https://forum.rebol.info/t/mysql-extension/1319/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/mysql-extension/1319/13</link>
        <pubDate>Sat, 03 Oct 2020 12:14:01 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1319-13</guid>
        <source url="https://forum.rebol.info/t/mysql-extension/1319.rss">MySQL extension</source>
      </item>
      <item>
        <title>MySQL extension</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>Thank you Brian!<br>
Strange thing is how it now looks to me. Because I added that directory to a path, it is like any executable starting up is going "hey listen everybody I need to do some work and I have to use a list of functions. First function is function A anybody familiar with a function A? Ah, according to some magic info I just found, there should be a library by the name of libA that should know function A. Are you there libA?"<br>
<img src="https://forum.rebol.info/images/emoji/twitter/smiley.png?v=9" title=":smiley:" class="emoji" alt=":smiley:"></p>
          <p><a href="https://forum.rebol.info/t/mysql-extension/1319/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/mysql-extension/1319/12</link>
        <pubDate>Fri, 02 Oct 2020 17:24:00 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1319-12</guid>
        <source url="https://forum.rebol.info/t/mysql-extension/1319.rss">MySQL extension</source>
      </item>
      <item>
        <title>MySQL extension</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="9" data-topic="1319">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/iarnold/40/226_2.png" class="avatar"> iArnold:</div>
<blockquote>
<p>First I got</p>
<pre><code>ldd r3
linux-vdso.so.1 =&gt;  (0x00007ffed2df4000)
libm.so.6 =&gt; /lib64/libm.so.6 (0x00007ff098f10000)
libdl.so.2 =&gt; /lib64/libdl.so.2 (0x00007ff098d0c000)
libmariadb.so.3 =&gt; not found
libc.so.6 =&gt; /lib64/libc.so.6 (0x00007ff09893e000)
/lib64/ld-linux-x86-64.so.2 (0x00007ff099212000)
</code></pre>
</blockquote>
</aside>
<p>It's all pretty messy stuff.  But in this particular day and age, computers aren't psychic.  So if you change anything that anything else depends on, everything has to be explicit.</p>
<p>My biggest complaint about these library dependencies isn't that <em>they exist</em>, but that they are shuffled so far into darkness that you cannot reason about them.  Once you learn about tools like <code>ldd</code> you can start to do that... and you are.  So you're actually learning some things.  Good work.   <img src="https://forum.rebol.info/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          <p><a href="https://forum.rebol.info/t/mysql-extension/1319/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/mysql-extension/1319/11</link>
        <pubDate>Fri, 02 Oct 2020 15:23:15 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1319-11</guid>
        <source url="https://forum.rebol.info/t/mysql-extension/1319.rss">MySQL extension</source>
      </item>
      <item>
        <title>MySQL extension</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>Yes I think I nailed it!</p>
<p>When searching for "how does gcc know which libs to load at runtime"  this sent me <a href="https://unix.stackexchange.com/questions/22926/where-do-executables-look-for-shared-objects-at-runtime" rel="nofollow noopener">To the link on Stackexchange that Brian already posted before</a> And from here I found my definitive clue at <a href="https://www.cs.swarthmore.edu/~newhall/unixhelp/howto_C_libraries.html" rel="nofollow noopener">howto C Libraries</a> But you need to read carefully.</p>
<p>The hint that sent me of in the right direction was</p>
<blockquote>
<p>If you create your own shared object files and do not install them in /usr/lib, then you need to set your LD_LIBRARY_PATH environment variable so that the runtime linker can find them and load them at run time. For example, if I put my .so files in a directory named lib in my home directory, I'd set my LD_LIBRARY_PATH enviroment to the following:</p>
<p>if running bash:<br>
export LD_LIBRARY_PATH=/terrible/new/pathname/lib:$LD_LIBRARY_PATH</p>
<p>if running tcsh:<br>
setenv LD_LIBRARY_PATH /terrible/new/pathname/lib:$LD_LIBRARY_PATH</p>
</blockquote>
<p>So I went ahead and appended the cruel directoryname used by the Plesk creators. (My best guess is they did this on purpose because they are running MySQL and MariaDB instances on their platforms and do not want them to interfere with each other)</p>
<p>Now the linking returns an executable with the proper library found</p>
<pre><code>ldd r3
linux-vdso.so.1 =&gt;  (0x00007ffc1e72b000)
libm.so.6 =&gt; /lib64/libm.so.6 (0x00007fc9ae615000)
libdl.so.2 =&gt; /lib64/libdl.so.2 (0x00007fc9ae411000)
libmariadb.so.3 =&gt; /usr/lib64/libmariadbclient-plesk-3.0/libmariadb.so.3 (0x00007fc9ae1bb000)
libc.so.6 =&gt; /lib64/libc.so.6 (0x00007fc9added000)
/lib64/ld-linux-x86-64.so.2 (0x00007fc9ae917000)
libpthread.so.0 =&gt; /lib64/libpthread.so.0 (0x00007fc9adbd1000)
libz.so.1 =&gt; /lib64/libz.so.1 (0x00007fc9ad9bb000)
libssl.so.10 =&gt; /lib64/libssl.so.10 (0x00007fc9ad749000)
libcrypto.so.10 =&gt; /lib64/libcrypto.so.10 (0x00007fc9ad2e6000)
libgssapi_krb5.so.2 =&gt; /lib64/libgssapi_krb5.so.2 (0x00007fc9ad099000)
libkrb5.so.3 =&gt; /lib64/libkrb5.so.3 (0x00007fc9acdb0000)
libcom_err.so.2 =&gt; /lib64/libcom_err.so.2 (0x00007fc9acbac000)
libk5crypto.so.3 =&gt; /lib64/libk5crypto.so.3 (0x00007fc9ac979000)
libkrb5support.so.0 =&gt; /lib64/libkrb5support.so.0 (0x00007fc9ac769000)
libkeyutils.so.1 =&gt; /lib64/libkeyutils.so.1 (0x00007fc9ac565000)
libresolv.so.2 =&gt; /lib64/libresolv.so.2 (0x00007fc9ac34b000)
libselinux.so.1 =&gt; /lib64/libselinux.so.1 (0x00007fc9ac124000)
libpcre.so.1 =&gt; /lib64/libpcre.so.1 (0x00007fc9abec2000)
</code></pre>
<p>That looks a whole lot better.</p>
          <p><a href="https://forum.rebol.info/t/mysql-extension/1319/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/mysql-extension/1319/10</link>
        <pubDate>Fri, 02 Oct 2020 13:53:06 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1319-10</guid>
        <source url="https://forum.rebol.info/t/mysql-extension/1319.rss">MySQL extension</source>
      </item>
      <item>
        <title>MySQL extension</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>Somehow I tricked the entire thing and convinced it to use the libmysqlclient.so.18, last two lines of my linking step</p>
<pre><code>vector-init.o objs/view/mod-view.o objs/tmp-mod-view-init.o -lm -ldl 
-L/usr/lib64/ -lmysqlclient -lpthread -lz -lm -ldl -lssl -lcrypto objs/main.o
</code></pre>
<p>but though things work..</p>
<p>First I got</p>
<pre><code>ldd r3
linux-vdso.so.1 =&gt;  (0x00007ffed2df4000)
libm.so.6 =&gt; /lib64/libm.so.6 (0x00007ff098f10000)
libdl.so.2 =&gt; /lib64/libdl.so.2 (0x00007ff098d0c000)
libmariadb.so.3 =&gt; not found
libc.so.6 =&gt; /lib64/libc.so.6 (0x00007ff09893e000)
/lib64/ld-linux-x86-64.so.2 (0x00007ff099212000)
</code></pre>
<p>Which already was shorter than the 'complete' list I got before, but look at it now:</p>
<pre><code>linux-vdso.so.1 =&gt;  (0x00007ffe2d692000)
libm.so.6 =&gt; /lib64/libm.so.6 (0x00007f4149ba2000)
libdl.so.2 =&gt; /lib64/libdl.so.2 (0x00007f414999e000)
libpthread.so.0 =&gt; /lib64/libpthread.so.0 (0x00007f4149782000)
libz.so.1 =&gt; /lib64/libz.so.1 (0x00007f414956c000)
libssl.so.10 =&gt; /lib64/libssl.so.10 (0x00007f41492fa000)
libcrypto.so.10 =&gt; /lib64/libcrypto.so.10 (0x00007f4148e97000)
libc.so.6 =&gt; /lib64/libc.so.6 (0x00007f4148ac9000)
/lib64/ld-linux-x86-64.so.2 (0x00007f4149ea4000)
libgssapi_krb5.so.2 =&gt; /lib64/libgssapi_krb5.so.2 (0x00007f414887c000)
libkrb5.so.3 =&gt; /lib64/libkrb5.so.3 (0x00007f4148593000)
libcom_err.so.2 =&gt; /lib64/libcom_err.so.2 (0x00007f414838f000)
libk5crypto.so.3 =&gt; /lib64/libk5crypto.so.3 (0x00007f414815c000)
libkrb5support.so.0 =&gt; /lib64/libkrb5support.so.0 (0x00007f4147f4c000)
libkeyutils.so.1 =&gt; /lib64/libkeyutils.so.1 (0x00007f4147d48000)
libresolv.so.2 =&gt; /lib64/libresolv.so.2 (0x00007f4147b2e000)
libselinux.so.1 =&gt; /lib64/libselinux.so.1 (0x00007f4147907000)
libpcre.so.1 =&gt; /lib64/libpcre.so.1 (0x00007f41476a5000)
</code></pre>
<p>No libmariablahblahblah but also no libmysqlclientetc !<br>
So got it working but totally dissatisfied because I do not understand <img src="https://forum.rebol.info/images/emoji/twitter/frowning.png?v=9" title=":frowning:" class="emoji" alt=":frowning:"></p>
          <p><a href="https://forum.rebol.info/t/mysql-extension/1319/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/mysql-extension/1319/9</link>
        <pubDate>Fri, 02 Oct 2020 13:23:37 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1319-9</guid>
        <source url="https://forum.rebol.info/t/mysql-extension/1319.rss">MySQL extension</source>
      </item>
      <item>
        <title>MySQL extension</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="7" data-topic="1319">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/iarnold/40/226_2.png" class="avatar"> iArnold:</div>
<blockquote>
<p>I hoped the -L would make it search for the directory provided BUT APPARENTLY not.</p>
</blockquote>
</aside>
<p>-L tells the linker where to search for libraries at compile time...for putting code directly into the executable.  These are <code>.a</code> files.</p>
<p>But the <code>.so</code> files are like DLLs.  They aren't linked into your program, but expected to be somewhere around on your system.  As with DLLs, sometimes the easiest thing to do is just copy it to the same directory with your executable (or better yet, make a file linkage with <code>ln</code>).</p>
<p>You can use <a href="https://unix.stackexchange.com/questions/120015/how-to-find-out-the-dynamic-libraries-executables-loads-when-run" rel="nofollow noopener">ldd to dump out the .so files that an executable looks for</a></p>
<p>You can <a href="https://unix.stackexchange.com/questions/22926/where-do-executables-look-for-shared-objects-at-runtime" rel="nofollow noopener">read up on rules about where the dynamic loader looks</a>.</p>
<p>So to put the pieces of the puzzle together, you need to make sure that the executable you build is looking for an .so file available on the target.  If all else fails, find the .so on your local machine and put it in the same directory as the executable.</p>
          <p><a href="https://forum.rebol.info/t/mysql-extension/1319/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/mysql-extension/1319/8</link>
        <pubDate>Thu, 01 Oct 2020 19:51:53 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1319-8</guid>
        <source url="https://forum.rebol.info/t/mysql-extension/1319.rss">MySQL extension</source>
      </item>
      <item>
        <title>MySQL extension</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>Another soap episode. Off course the program from the new VM crashes on my hostproviders server.<br>
Because it cannot find the libmariadb.so.3 library file on its system.<br>
I checked and these are the mysql_config data on the old</p>
<blockquote>
<p>Usage: /bin/mysql_config [OPTIONS]<br>
Options:<br>
--cflags         [-I/usr/include/mysql]<br>
--include        [-I/usr/include/mysql]<br>
--libs           [-L/usr/lib64/mysql -lmysqlclient -lpthread -lz -lm -ldl -lssl -lcrypto]<br>
--libs_r         [-L/usr/lib64/mysql -lmysqlclient -lpthread -lz -lm -ldl -lssl -lcrypto]<br>
--plugindir      [/usr/lib64/mysql/plugin]<br>
--socket         [/var/lib/mysql/mysql.sock]<br>
--port           [0]<br>
--version        [5.5.65]<br>
--libmysqld-libs [-L/usr/lib64/mysql -lmysqld]<br>
--variable=VAR   VAR is one of:<br>
pkgincludedir [/usr/include/mysql]<br>
pkglibdir     [/usr/lib64/mysql]<br>
plugindir     [/usr/lib64/mysql/plugin]</p>
</blockquote>
<p>and on the new VM</p>
<blockquote>
<p>Usage: /bin/mysql_config [OPTIONS]<br>
Options:<br>
--cflags         [-I/usr/include/mysql -I/usr/include/mysql/mysql]<br>
--include        [-I/usr/include/mysql -I/usr/include/mysql/mysql]<br>
--libs           [-L/usr/lib64/ -lmariadb]<br>
--libs_r         [-L/usr/lib64/ -lmariadb]<br>
--plugindir      [/usr/lib64/mysql/plugin]<br>
--socket         [/var/lib/mysql/mysql.sock]<br>
--port           [3306]<br>
--version        [10.2.33]<br>
--libmysqld-libs [-L/usr/lib64  -lmysqld -lpthread -lz -lm -ldl -lssl -lcrypto -lcrypt -llzma -laio -lsystemd]<br>
--variable=VAR   VAR is one of:<br>
pkgincludedir [/usr/include/mysql]<br>
pkglibdir     [/usr/lib64]<br>
plugindir     [/usr/lib64/mysql/plugin]</p>
</blockquote>
<p>The error I get is</p>
<blockquote>
<p>error while<br>
loading shared libraries: libmariadb.so.3: cannot open shared object<br>
file: No such file or directory</p>
</blockquote>
<p>As the providers says this library is present but not at /usr/lib64/ but at /usr/lib64/pleskspecificdirectory/ and indeed (I have SSH connection now) I can affirm it is at that location. It is also in /lib64/.../ .</p>
<p>So I changed the link step to not use `mysql_config --libs` but to use this specific location <code>-L/usr/lib64/pleskspecificdirectory/ -lmariadb</code> and I copied the libfile also to that very same location on my new VM.</p>
<p>Linking without such an additive results in errors, using the above or using the `mysql_config --libs` result libraries from the old VM is OK and gets an executable.</p>
<p>Yet both of those still err on the same problem.</p>
<p>Just one thing I noticed.. the r3's that are produced by linking one way or the other are exactly the same size, where I expect a location of different length could make a difference.</p>
<p>Also libmysqlclient.so.18 is present in the /usr/lib64/ directory.<br>
That is thus why the old VM can create the working version.</p>
<p>I did an ldd of the sources I have created and found that the libmariadb.so.3 is sought inside the common /usr/lib64 directory, where it is not at.<br>
I hoped the -L would make it search for the directory provided BUT APPARENTLY not.<br>
Any suggestions are welcome.</p>
          <p><a href="https://forum.rebol.info/t/mysql-extension/1319/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/mysql-extension/1319/7</link>
        <pubDate>Thu, 01 Oct 2020 13:18:05 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1319-7</guid>
        <source url="https://forum.rebol.info/t/mysql-extension/1319.rss">MySQL extension</source>
      </item>
      <item>
        <title>MySQL extension</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="5" data-topic="1319">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>Is your web host running a pre-2013 distribution of an OS? :-/</p>
</blockquote>
</aside>
<p>I have changed the post, I think that is just a part that is not provided for by the CentOS maintainers for any (good?) reason. I believe the hosting is taking care of keeping up to date on security updates, ah and yes they are using MariaDB which may not have that problem. I wanted to stick to MySQL but I'll see if there is a different option, creating another VM soon. (NOTE_1)</p>
<p>Perhaps I could make an compiler directive MYSQL_PRE_2013 or alike that will not include some functions.</p>
<p>I had a look at docker and CentOS 7 when I had some trouble with the VM, but it was a lot of information coming towards me and I did not see how to make it work for me. Free time is even today a scarce commodity.</p>
<p>If I understand the article correct, Travis-CI is using Ubuntu to test stuff on, therefor they use Docker to get an instance of CentOS (an EL type OS, RHEL stands for Red Hat Enterprise Linux(?)) running and execute their testscripts on that.<br>
Docker is not so hard, but getting Travis for our repo is perhaps harder.</p>
<p>(NOTE_1) Created a new VM and installed MariaDB and the -devel package. The mysql.h file still was the old "Copyright (c) 2000, 2012, Oracle and/or its affiliates" version.  And "mysql -V<br>
mysql  Ver 15.1 Distrib 5.5.65-MariaDB, for Linux (x86_64) using readline 5.1", I could not find a mariadb.h, they use mysql.h also(?).<br>
As turns out this version is coming with the OS, but it will not automatically upgrade to a newer version like Distrib 10.2.33-MariaDB without the admin to do this explicitly by uninstalling the old version and ordering yum to go for the 10.2 version.<br>
So I did that. And guess what? The comments still mention the copyright until 2012 like before, terrible! But... the functions missing before are now present! So it is a newer version</p>
          <p><a href="https://forum.rebol.info/t/mysql-extension/1319/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/mysql-extension/1319/6</link>
        <pubDate>Wed, 23 Sep 2020 08:35:25 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1319-6</guid>
        <source url="https://forum.rebol.info/t/mysql-extension/1319.rss">MySQL extension</source>
      </item>
      <item>
        <title>MySQL extension</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="4" data-topic="1319">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/iarnold/40/226_2.png" class="avatar"> iArnold:</div>
<blockquote>
<p>Unfortunately mysql_get_option and mysql_reset_connection were not present in the mysql.h header file for the CentOS 7 operating system, as it is pre 2013.</p>
</blockquote>
</aside>
<p>Is your web host running a pre-2013 distribution of an OS?  :-/</p>
<p>Well, we do like to have things tested on a wide set of platforms...and within reason, old solid ones help with dependency control.</p>
<p>People apparently have used <a href="https://derekweitzel.com/2016/05/03/building-centos-packages-on-travisci/" rel="nofollow noopener">Docker to run CentOS 7 on Travis</a>.  So that would be neat to see used for both the build and the tests.</p>
          <p><a href="https://forum.rebol.info/t/mysql-extension/1319/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/mysql-extension/1319/5</link>
        <pubDate>Tue, 22 Sep 2020 14:49:15 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1319-5</guid>
        <source url="https://forum.rebol.info/t/mysql-extension/1319.rss">MySQL extension</source>
      </item>
      <item>
        <title>MySQL extension</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>I have updated the list of implemented functions. Unfortunately mysql_get_option and mysql_reset_connection were not present in the mysql.h header file for the CentOS 7 operating system, as the headerfile that is available on that system is pre 2013 and no later version is provided. Even updating my local VM is not an option as I do not update the hosting server by that action. I had a lot of coding done before I found out. Let's say that is some free and helpful programming experience in C for me.</p>
<p>I will leave the mysql with this functionality if no urgent needs are posted here.</p>
<p>I'll have a go at a Travis - CI automated test, but I think it is best left to have testscripts that can be run on a real server. Would very much to have it included in the renc repo.</p>
<p>We definitively need a new build process that has a default to not include extensions unless the build opts in.</p>
          <p><a href="https://forum.rebol.info/t/mysql-extension/1319/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/mysql-extension/1319/4</link>
        <pubDate>Tue, 22 Sep 2020 14:14:52 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1319-4</guid>
        <source url="https://forum.rebol.info/t/mysql-extension/1319.rss">MySQL extension</source>
      </item>
      <item>
        <title>MySQL extension</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>Thank you for your great answer again!</p>
<p>I added the legend for describing the meaning of the remarks.</p>
<p>The escape functions are marked with a question mark and I know about escaping and its importance. I was still wondering if I should make them also a native or use them inside other functions so you do not have to worry about escaping, or maybe you should take care of the escaping using Rebol functions before submitting to the MySQL functions. (Like PHP uses addslashes and stripslashes).</p>
<p>In a small community like ours at the moment it will be indeed the question if anybody else will use this feature. On the other hand, providing this will give some daring souls the opportunity to try this out for themselves, and even get them interested in the rest of the endeavor.</p>
          <p><a href="https://forum.rebol.info/t/mysql-extension/1319/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/mysql-extension/1319/3</link>
        <pubDate>Sat, 22 Aug 2020 06:55:35 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1319-3</guid>
        <source url="https://forum.rebol.info/t/mysql-extension/1319.rss">MySQL extension</source>
      </item>
      <item>
        <title>MySQL extension</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>If you're building a "real" interface, then it would be important for you to expose SQL escaping in some way.  It's dangerous to make your API just based on "query string in, result string out"...<a href="https://imgs.xkcd.com/comics/exploits_of_a_mom.png" rel="nofollow noopener">it's too easy for data being spliced into the string to be interpreted as code</a>.  This is why systems like ODBC are parameterized in ways that have the code part indicate the slots where substitutions will be done, and make sure those slots can never be run as code.</p>
<p>The natives you are writing need to be parameterized somehow in a way that separates the code and the data.  Something like:</p>
<pre><code>table: "widgets"
quantity: 10
mysql-query "select data from ? where x = ?" [table quantity]  ; "good"

mysql-query spaced ["select data from" table "where x =" quantity]  ; "bad"
</code></pre>
<p>You're not using the <code>mysql_escape_xxx</code> or <code>mysql_real_escape_xxx</code> functions.  So I'm not sure where you're at with this separation.  Be sure to read up on this topic and why it is important.</p>
<hr>
<p>Bigger picture: realistically speaking, it will be a long-time-if-ever before anyone uses the MySQL extension besides you.  So being able to do what <em>you</em> want, and learn what <em>you</em> want, should be your main goal.</p>
<p>If you are serious enough to want to think about what <em>other</em> people might care about, that will require moving to a focus on setting up reproducible tests.  Since you're comfortable with VMs now, you should probably be able to get started with a Travis project that installs MariaDB, makes a fresh database, and interacts with it.  <a href="https://github.com/metaeducation/rebol-odbc/blob/d374d1278a48bad52ec902693c41648b47c1afc7/.travis.yml#L202" rel="nofollow noopener">The ODBC tests show setting up MySQL databases on the command line in a script</a>, and you'd want to write some similar lines.</p>
<p>You'd start by making a <code>.travis.yml</code> for your extension.  There'll be options for installing MariaDB with something analogous to <code>sudo apt install</code>...but you'll have to ask Travis to <code>wget</code> or <code>curl</code> a mysql-enabled-interpreter from your website that you've built each time it runs.  <em>(The goal is to move all the existing extensions <em>out</em> of the main repository, so I don't want to complicate the core build any more with another extension.  We'll have to cross the bridge of making the executables online when we get to it.)</em></p>
<p>As for what the test does...that's up to you.  The ODBC test <a href="https://github.com/metaeducation/rebol-odbc/blob/d374d1278a48bad52ec902693c41648b47c1afc7/tests/odbc-test.reb#L154" rel="nofollow noopener">creates tables, inserts values, and makes sure it gets the same thing back.</a>  That's a fairly basic idea for a test which helps show general functioning.  But you can make it more specific to your use case if you want.</p>
<hr>
<p>All that said: <strong>I'm busy devoting most of my time right now to studying other languages to try and revisit longstanding design holes in Redbols.</strong>  All under the lens of a full stackless coversion.  That's going to be the situation for the foreseeable future, and the Wasm build remains the main target of interest.</p>
<p>But I'll try to help unblock you if you keep with it.  Like I said, it seems like you are actually sticking with something for a while, so congratulations on that.  I would imagine you're learning some things in this process.  Maybe you'll find a new calling in your career because of it?</p>
          <p><a href="https://forum.rebol.info/t/mysql-extension/1319/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/mysql-extension/1319/2</link>
        <pubDate>Sat, 22 Aug 2020 03:32:48 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1319-2</guid>
        <source url="https://forum.rebol.info/t/mysql-extension/1319.rss">MySQL extension</source>
      </item>
      <item>
        <title>MySQL extension</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>For the MySQL extension, I now have a basic set of functions implemented. Here is a list of all functions and the status. I would like to know if the functions I still plan to implement are worth the trouble or can be skipped, and if any of the ones I think should be ignored are on the must-haves list of someone.</p>
<pre><code>mysql_affected_rows()            mysql-affected-rows            Basic functions
mysql_autocommit()               mysql-autocommit               ?
mysql_change_user()              mysql-change-user              ?
mysql_character_set_name()       mysql-character-set-name       Done
mysql_close()                    mysql-close                    Basic functions
mysql_commit()                   NO                             Perform query "commit;"
mysql_connect()                  NO                             Deprecated function
mysql_create_db()                NO                             Deprecated function
mysql_data_seek()                mysql-data-seek                Done
mysql_debug()                    NO                             Needs super rights.
mysql_drop_db()                  NO                             Deprecated function
mysql_dump_debug_info()          NO                             Needs super rights
mysql_eof()                      NO                             Deprecated function
mysql_errno()                    mysql-errno                    Basic functions
mysql_error()                    mysql-error                    Basic functions
mysql_escape_string()            NO                             Depricated (Use a wrapper function)
mysql_fetch_field()              mysql-fetch-field              Done
mysql_fetch_field_direct()       mysql-fetch-field-direct       Done
mysql_fetch_fields()             mysql-fetch-fields             Done
mysql_fetch_lengths()            mysql-fetch-lengths            Done
mysql_fetch_row()                mysql-fetch-row                Basic functions
mysql_field_count()              mysql-field-count              Basic functions
mysql_field_seek()               mysql-field-seek               Done
mysql_field_tell()               mysql-field-tell               Done
mysql_free_result()              mysql-free-result              Basic functions
mysql_get_character_set_info()   mysql-get-character-set-info   Done
mysql_get_client_info()          mysql-get-client-info          Basic functions
mysql_get_client_version()       mysql-get-client-version       Done
mysql_get_host_info()            mysql-get-host-info            Basic functions
mysql_get_option()               NO                             Not available in older versions pre 2012
mysql_get_proto_info()           mysql-get-proto-info           Done
mysql_get_server_info()          mysql-get-server-info          Basic functions
mysql_get_server_version()       mysql-get-server-version       Done
mysql_get_ssl_cipher()           mysql-get-ssl-cipher           ?
mysql_hex_string()               mysql-hex-string               ?
mysql_info()                     mysql-info                     Done
mysql_init()                     NO                             Not in MySQL 8.0
mysql_insert_id()                mysql-insert-id                Done
mysql_kill()                     mysql-kill                     For Threads?
mysql_library_end()              mysql-library-end              For Threads?
mysql_library_init()             mysql-library-init             For Threads?
mysql_list_dbs()                 NO    
mysql_list_fields()              NO    
mysql_list_processes()           mysql-list-processes           For Threads?
mysql_list_tables()              NO    
mysql_more_results()             mysql-more-results             Done
mysql_next_result()              mysql-next-result              Done
mysql_num_fields()               mysql-num-fields               Done
mysql_num_rows()                 mysql-num-rows                 Basic functions
mysql_options()                  mysql-options                  ?
mysql_options4()                 mysql-options4                 ?
mysql_ping()                     mysql-ping                     Done
mysql_query()                    mysql-query                    Basic functions
mysql_real_connect()             mysql-connect                  Basic functions
mysql_real_connect_dns_srv()     NO    
mysql_real_escape_string()       NO                             Use a wrapper function
mysql_real_escape_string_quote() NO                             Use a wrapper function
mysql_real_query()               NO    
mysql_refresh()                  NO                             Needs RELOAD privilege
mysql_reload()                   NO                             Needs RELOAD privilege
mysql_reset_connection()         NO                             Not available in older versions pre 2012
mysql_reset_server_public_key()  NO    
mysql_result_metadata()          NO    
mysql_rollback()                 NO                             Perform query "rollback;"
mysql_row_seek()                 mysql-row-seek                 Done
mysql_row_tell()                 mysql-row-tell                 Done
mysql_select_db()                NO    
mysql_server_end()               NO    
mysql_server_init()              NO    
mysql_session_track_get_first()  NO    
mysql_session_track_get_next()   NO    
mysql_set_character_set()        mysql-set-character-set        Done
mysql_set_local_infile_default() NO    
mysql_set_local_infile_handler() NO    
mysql_set_server_option()        NO    
mysql_shutdown()                 NO    
mysql_sqlstate()                 mysql-sqlstate                 Done
mysql_ssl_set()                  mysql-ssl-set                  ?
mysql_stat()                     mysql-stat                     Done
mysql_store_result()             mysql-store-result             Basic functions
mysql_thread_end()               mysql-thread-end               For Threads?
mysql_thread_id()                mysql-thread-id                For Threads?
mysql_thread_init()              mysql-thread-init              For Threads?
mysql_thread_safe()              mysql-thread-safe              For Threads?
mysql_use_result()               mysql-use-result               Done
mysql_warning_count()            mysql-warning-count            Done
</code></pre>
<p>TBD: To Be Done, planning to add this in the next version<br>
Done: Added<br>
?: Not sure if needed and if so why is it needed as a separate native?<br>
NO: I do not see the need for this, especially the list functions that show items based on Regular Expressions.</p>
          <p><a href="https://forum.rebol.info/t/mysql-extension/1319/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/mysql-extension/1319/1</link>
        <pubDate>Fri, 21 Aug 2020 15:39:57 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1319-1</guid>
        <source url="https://forum.rebol.info/t/mysql-extension/1319.rss">MySQL extension</source>
      </item>
  </channel>
</rss>
