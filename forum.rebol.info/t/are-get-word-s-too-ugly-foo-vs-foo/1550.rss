<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Are GET-WORD!s Too Ugly? :FOO vs. $FOO</title>
    <link>https://forum.rebol.info/t/are-get-word-s-too-ugly-foo-vs-foo/1550</link>
    <description>When looking at bash, you can see it doing things that look nice and light:

    # bash code
    echo &quot;Installed Version: $ANDROID_NDK_VERSION for the NDK&quot;

Rebol isn&#39;t *terrible*:

    ; Rebol version
    print [&quot;Installed Version:&quot; ANDROID_NDK_VERSION &quot;for the NDK&quot;]

But I&#39;m becoming a believer that we should be thinking about offering versions that start by [taking the words you write at face value](https://forum.rebol.info/t/dont-fear-the-word/1549), and marking the substitutions.  That would suggest perhaps offering an echo like:

    ; A Rebol Echo with literal tendencies
    echo [Installed Version: (ANDROID_NDK_VERSION) for the NDK]

But I&#39;ve mentioned that even GROUP!s might want to be literal in such contexts for the default case (I often use parentheses in writing English, as I&#39;m doing here).  So perhaps a GET-WORD! would be more appropriate:

    echo [Installed Version: :ANDROID_NDK_VERSION for the NDK]

That looks a bit unsatisfying.  Beyond looking bad, it doesn&#39;t really call your attention to the escaping. 
 But it raises to my attention something that&#39;s just sort of generally true as a whole... *GET-WORD! is unsatisfiying.*

## Leading colon, I&#39;ve never liked you...

I&#39;ve never liked the way **x: :y** looks.  It doesn&#39;t have a good vibe...especially when you put a get right after a set like that.

We don&#39;t put colons in front of things in English, like, ever.  While there&#39;s some amount of abstract symmetry to *&quot;colon in back means set, colon in front means get&quot;*, we don&#39;t have to be a slave to that.  If pure symbolic reversal were the way to invert meanings we&#39;d use SET to set and TES to get.  :-/

Is there a truly good reason not to use $FOO, $FOO/BAR, and $(FOO) for the &quot;get&quot; versions of things?  It would still be a GET-WORD!, and could still be called that.

    &gt;&gt; test: does [10]

    &gt;&gt; type of first [$test]
    == #[datatype! get-word!]

    &gt;&gt; type of test
    == #[datatype! integer!]

    &gt;&gt; type of $test
    == #[datatype! action!]

And for compatibility, we could make **:foo** load as **$foo** for the foreseeable future.

But as a dialecting component, I think it would be something a lot more people would want to use.

    echo [Installed Version: $ANDROID_NDK_VERSION for the NDK]

And I think it actually looks *better* than the bash, with the brackets instead of quotes:

    echo &quot;Installed Version: $ANDROID_NDK_VERSION for the NDK&quot;


## Breaks One Experiment: The Shell Dialect

This would break one idea I had, which was to let a lone $ be a WORD!, so we could use it for shell commands.

    print &quot;Writing normal code here&quot;
    $ ls -alF  ; processes to end of line by default
    print &quot;Done calling out to shell

But $ couldn&#39;t be a WORD!, as **$/foo** would be ambiguous.  You can&#39;t tell if that&#39;s a GET-PATH! of the path **/foo**, or a plain PATH! of the word $ with foo picked out of it.  :-(

I can&#39;t think of any particular tricks here.

## Now That I See It, I Can&#39;t Un-See It

Leading colon on words is **ugly.**

I&#39;ve always found myself underwhelmed by the idea of using it in dialects.

The simple change of using dollar sign for this seems to give a tool for standing up against the likes of bash.  Once we&#39;re past a compatibility period, maybe  `:foo` could be another text type.  Or maybe just a URL! with no scheme?

Thoughts?</description>
    
    <lastBuildDate>Wed, 10 Mar 2021 13:48:52 +0000</lastBuildDate>
    <category>Datatypes</category>
    <atom:link href="https://forum.rebol.info/t/are-get-word-s-too-ugly-foo-vs-foo/1550.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Are GET-WORD!s Too Ugly? :FOO vs. $FOO</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="BlackATTR" data-post="6" data-topic="1550">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/blackattr/40/204_2.png" class="avatar"> BlackATTR:</div>
<blockquote>
<p>The only thing that gives me (slight) pause is that it's a departure from more standard rebol syntax.</p>
</blockquote>
</aside>
<p>I propose things just to see how they sound, it's a start of a line of argumentation and you see where it goes.  As in things like the comment discussion, it usually leads to some sort of observation... like "hey, space comments off of things by two spaces instead of one, and that fixes it".</p>
<p>While I don't like the pattern <strong>x: :y</strong>, you can write a lot of ugly things in Rebol.  Maybe you should say <strong>x: get 'y</strong> instead if that juxtaposition bothers you.</p>
<p>I do somewhat like the subtlety of <strong>specialize :foo [...]</strong> as opposed to <strong>specialize $foo [...]</strong>.</p>
<p>It might be worth it to have a $xxx $(yyy) $zzz/zzz $[qqq] types in the menagerie, maybe in addition to the GET-SET-SYM</p>
          <p><a href="https://forum.rebol.info/t/are-get-word-s-too-ugly-foo-vs-foo/1550/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/are-get-word-s-too-ugly-foo-vs-foo/1550/7</link>
        <pubDate>Wed, 10 Mar 2021 13:48:52 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1550-7</guid>
        <source url="https://forum.rebol.info/t/are-get-word-s-too-ugly-foo-vs-foo/1550.rss">Are GET-WORD!s Too Ugly? :FOO vs. $FOO</source>
      </item>
      <item>
        <title>Are GET-WORD!s Too Ugly? :FOO vs. $FOO</title>
        <dc:creator><![CDATA[BlackATTR]]></dc:creator>
        <description><![CDATA[
            <p>I don't have a problem with $, by the way. I'm sure it would be old-hat within no time. The only thing that gives me (slight) pause is that it's a departure from more standard rebol syntax. Well that and the possible newbie confusion with MONEY!, but when you look at it it's not all that confusing.</p>
          <p><a href="https://forum.rebol.info/t/are-get-word-s-too-ugly-foo-vs-foo/1550/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/are-get-word-s-too-ugly-foo-vs-foo/1550/6</link>
        <pubDate>Wed, 10 Mar 2021 13:45:26 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1550-6</guid>
        <source url="https://forum.rebol.info/t/are-get-word-s-too-ugly-foo-vs-foo/1550.rss">Are GET-WORD!s Too Ugly? :FOO vs. $FOO</source>
      </item>
      <item>
        <title>Are GET-WORD!s Too Ugly? :FOO vs. $FOO</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="BlackATTR" data-post="4" data-topic="1550">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/blackattr/40/204_2.png" class="avatar"> BlackATTR:</div>
<blockquote>
<p>Both # and @ seem natural to me for variable forms, and they stand out easily in what are typically "noisy" surroundings.</p>
</blockquote>
</aside>
<p>I've gone in on the # for characters and issues, which is consistent with history.  They can't have bindings at the moment, because of the illegal variable names they'd make...like #":".  So they're not a good fit for variables.</p>
<p>@ is a symbolic type.  It was defaulting to carrying a binding and being inert, but dialects are certainly changing that.</p>
<p>We might argue that dialects like CALL and ===, and FORM, and SHELL... (?) are all cases where they'd mean "get the variable".</p>
<pre><code>echo [Installed Version: @ANDROID_NDK_VERSION for the NDK]
</code></pre>
<p>I'd already suggested in PARSE that @ means "get the variable and match it as is".  So <code>@block</code> wouldn't mean "use the block as a rule", it would mean match this to a BLOCK! that is equal in the input.  That's precedence for meaning "fetch" and being get-like, just with a different spin in the dialect.</p>
<p>One advantage of leaving $ alone is that it would make it more obvious when you were slipping into bash territory.</p>
<p>One way or another, the current GET-WORD! is unsuitable for this purpose of escaping raw words/paths/commas when they're acting as inert display elements.</p>
<p>Maybe we can try @ out for starters and see what comes out of it.</p>
          <p><a href="https://forum.rebol.info/t/are-get-word-s-too-ugly-foo-vs-foo/1550/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/are-get-word-s-too-ugly-foo-vs-foo/1550/5</link>
        <pubDate>Wed, 10 Mar 2021 13:37:13 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1550-5</guid>
        <source url="https://forum.rebol.info/t/are-get-word-s-too-ugly-foo-vs-foo/1550.rss">Are GET-WORD!s Too Ugly? :FOO vs. $FOO</source>
      </item>
      <item>
        <title>Are GET-WORD!s Too Ugly? :FOO vs. $FOO</title>
        <dc:creator><![CDATA[BlackATTR]]></dc:creator>
        <description><![CDATA[
            <p>I've always liked the sigil # for interpolating variables in text/markup.</p>
<p><code>print ["Installed Version:" #ANDROID_NDK_VERSION "for the NDK"]</code></p>
<p>Both # and @ seem natural to me for variable forms, and they stand out easily in what are typically "noisy" surroundings.</p>
<p>I suppose if you come from a *nix or Perl background, the $ will be more familiar, but this is one of those cases where your opinion will be influenced by whichever language/OS you learned first.</p>
          <p><a href="https://forum.rebol.info/t/are-get-word-s-too-ugly-foo-vs-foo/1550/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/are-get-word-s-too-ugly-foo-vs-foo/1550/4</link>
        <pubDate>Wed, 10 Mar 2021 13:28:06 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1550-4</guid>
        <source url="https://forum.rebol.info/t/are-get-word-s-too-ugly-foo-vs-foo/1550.rss">Are GET-WORD!s Too Ugly? :FOO vs. $FOO</source>
      </item>
      <item>
        <title>Are GET-WORD!s Too Ugly? :FOO vs. $FOO</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="iArnold" data-post="2" data-topic="1550">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/iarnold/40/226_2.png" class="avatar"> iArnold:</div>
<blockquote>
<p>And should it be &amp;foo not $foo ?</p>
</blockquote>
</aside>
<p>If we were to go with the idea of $ for get, then it would mean that &amp; would be taken for binaries.</p>
<p>I had been favoring ${decafbad} for binary, but if $ was used for GET-XXX that would be too much of an overload.</p>
<aside class="quote no-group" data-username="iArnold" data-post="2" data-topic="1550">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/iarnold/40/226_2.png" class="avatar"> iArnold:</div>
<blockquote>
<p>We put dollar signs before numbers in English, not before words,</p>
</blockquote>
</aside>
<p>It's still a "before" thing.  I think it looks better, and especially juxtaposed against a SET-WORD!, as I point out.</p>
<p>It would be less subtle, in situations like an APPLY:</p>
<pre><code>append-stuff: specialize $append [value: [some stuff]]
</code></pre>
<p>Maybe what we actually want here is yet-another-sigil, and have both.  ?</p>
<pre><code>foo: -&gt; SET-WORD!
:foo -&gt; GET-WORD!
@foo -&gt; (SYM-WORD!, LIT-WORD!, ???)
$foo -&gt; (ENV-WORD!, ???)
</code></pre>
<p>But if this new word type meant anything other than what GET-WORD! does, I don't know what it would do.</p>
<p>Maybe it could be particular in guaranteeing that the thing it got was not a function?  This would make it a replacement for what I was proposing that <strong>foo.</strong> would do in tuples.  And it might go along well with the idea of substituting variables in these kinds of expressions.</p>
<p>Or maybe it would implicitly turn whatever it had into TEXT!   That might be interesting.</p>
          <p><a href="https://forum.rebol.info/t/are-get-word-s-too-ugly-foo-vs-foo/1550/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/are-get-word-s-too-ugly-foo-vs-foo/1550/3</link>
        <pubDate>Wed, 10 Mar 2021 11:52:53 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1550-3</guid>
        <source url="https://forum.rebol.info/t/are-get-word-s-too-ugly-foo-vs-foo/1550.rss">Are GET-WORD!s Too Ugly? :FOO vs. $FOO</source>
      </item>
      <item>
        <title>Are GET-WORD!s Too Ugly? :FOO vs. $FOO</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group quote-modified" data-username="hostilefork" data-post="1" data-topic="1550">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>We don't put colons in front of things in English, like, ever. ... :-/</p>
</blockquote>
</aside>
<p>We put dollar signs before numbers in English, not before words, at least I thought so.<br>
<img src="https://forum.rebol.info/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji only-emoji" alt=":wink:"></p>
<p>And should it be &amp;foo not $foo ?</p>
          <p><a href="https://forum.rebol.info/t/are-get-word-s-too-ugly-foo-vs-foo/1550/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/are-get-word-s-too-ugly-foo-vs-foo/1550/2</link>
        <pubDate>Wed, 10 Mar 2021 10:56:06 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1550-2</guid>
        <source url="https://forum.rebol.info/t/are-get-word-s-too-ugly-foo-vs-foo/1550.rss">Are GET-WORD!s Too Ugly? :FOO vs. $FOO</source>
      </item>
      <item>
        <title>Are GET-WORD!s Too Ugly? :FOO vs. $FOO</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>When looking at bash, you can see it doing things that look nice and light:</p>
<pre><code># bash code
echo "Installed Version: $ANDROID_NDK_VERSION for the NDK"
</code></pre>
<p>Rebol isn't <em>terrible</em>:</p>
<pre><code>; Rebol version
print ["Installed Version:" ANDROID_NDK_VERSION "for the NDK"]
</code></pre>
<p>But I'm becoming a believer that we should be thinking about offering versions that start by <a href="https://forum.rebol.info/t/dont-fear-the-word/1549">taking the words you write at face value</a>, and marking the substitutions.  That would suggest perhaps offering an echo like:</p>
<pre><code>; A Rebol Echo with literal tendencies
echo [Installed Version: (ANDROID_NDK_VERSION) for the NDK]
</code></pre>
<p>But I've mentioned that even GROUP!s might want to be literal in such contexts for the default case (I often use parentheses in writing English, as I'm doing here).  So perhaps a GET-WORD! would be more appropriate:</p>
<pre><code>echo [Installed Version: :ANDROID_NDK_VERSION for the NDK]
</code></pre>
<p>That looks a bit unsatisfying.  Beyond looking bad, it doesn't really call your attention to the escaping.<br>
But it raises to my attention something that's just sort of generally true as a whole... <em>GET-WORD! is unsatisfiying.</em></p>
<h2>Leading colon, I've never liked you...</h2>
<p>I've never liked the way <strong>x: :y</strong> looks.  It doesn't have a good vibe...especially when you put a get right after a set like that.</p>
<p>We don't put colons in front of things in English, like, ever.  While there's some amount of abstract symmetry to <em>"colon in back means set, colon in front means get"</em>, we don't have to be a slave to that.  If pure symbolic reversal were the way to invert meanings we'd use SET to set and TES to get.  :-/</p>
<p>Is there a truly good reason not to use $FOO, $FOO/BAR, and $(FOO) for the "get" versions of things?  It would still be a GET-WORD!, and could still be called that.</p>
<pre><code>&gt;&gt; test: does [10]

&gt;&gt; type of first [$test]
== #[datatype! get-word!]

&gt;&gt; type of test
== #[datatype! integer!]

&gt;&gt; type of $test
== #[datatype! action!]
</code></pre>
<p>And for compatibility, we could make <strong>:foo</strong> load as <strong>$foo</strong> for the foreseeable future.</p>
<p>But as a dialecting component, I think it would be something a lot more people would want to use.</p>
<pre><code>echo [Installed Version: $ANDROID_NDK_VERSION for the NDK]
</code></pre>
<p>And I think it actually looks <em>better</em> than the bash, with the brackets instead of quotes:</p>
<pre><code>echo "Installed Version: $ANDROID_NDK_VERSION for the NDK"
</code></pre>
<h2>Breaks One Experiment: The Shell Dialect</h2>
<p>This would break one idea I had, which was to let a lone $ be a WORD!, so we could use it for shell commands.</p>
<pre><code>print "Writing normal code here"
$ ls -alF  ; processes to end of line by default
print "Done calling out to shell
</code></pre>
<p>But $ couldn't be a WORD!, as <strong>$/foo</strong> would be ambiguous.  You can't tell if that's a GET-PATH! of the path <strong>/foo</strong>, or a plain PATH! of the word $ with foo picked out of it.  <img src="https://forum.rebol.info/images/emoji/twitter/frowning.png?v=9" title=":frowning:" class="emoji" alt=":frowning:"></p>
<p>I can't think of any particular tricks here.</p>
<h2>Now That I See It, I Can't Un-See It</h2>
<p>Leading colon on words is <strong>ugly.</strong></p>
<p>I've always found myself underwhelmed by the idea of using it in dialects.</p>
<p>The simple change of using dollar sign for this seems to give a tool for standing up against the likes of bash.  Once we're past a compatibility period, maybe  <code>:foo</code> could be another text type.  Or maybe just a URL! with no scheme?</p>
<p>Thoughts?</p>
          <p><a href="https://forum.rebol.info/t/are-get-word-s-too-ugly-foo-vs-foo/1550/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/are-get-word-s-too-ugly-foo-vs-foo/1550/1</link>
        <pubDate>Wed, 10 Mar 2021 04:58:14 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1550-1</guid>
        <source url="https://forum.rebol.info/t/are-get-word-s-too-ugly-foo-vs-foo/1550.rss">Are GET-WORD!s Too Ugly? :FOO vs. $FOO</source>
      </item>
  </channel>
</rss>
