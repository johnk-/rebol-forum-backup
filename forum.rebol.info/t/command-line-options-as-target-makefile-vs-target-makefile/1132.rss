<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>command line options as `target: makefile` vs `target=makefile`</title>
    <link>https://forum.rebol.info/t/command-line-options-as-target-makefile-vs-target-makefile/1132</link>
    <description>It is traditional for programs that take command-line options in one of the following ways:

    my-program optionname=option
    my-program --optionname option
    my-program --optionname=option
    my-program /optionname option

R3-Alpha&#39;s %make-make.r had code for the first case, so you would say `make-make OS_ID=1.2.3`, or whatever.  This was presumably just going with the flow of how options to GNU make were specified.

@giuliolunati had an interesting idea of using a more Rebol-like syntax:

    my-program optionname: option

This not only is &quot;more Rebolish&quot;, but you get filename completion on your options in most shells (because it&#39;s not trying to do the completion with `optionname=` glued to the front of it).

At the moment, you can use either `--optionname=` or `optionname:` with %make.r.  I&#39;ve been using the colon form for a while, and like it.  For the sake of simplicity, I&#39;m wondering if it should be the *only* option format that `make.r` supports.

I can&#39;t think of any *technical* reason not to do it.  One could argue that it will look unfamiliar.  But I think it&#39;s easier to read this way.

Is there any reason not to standardize to this?</description>
    
    <lastBuildDate>Mon, 25 Mar 2019 17:33:44 +0000</lastBuildDate>
    <category>Build System</category>
    <atom:link href="https://forum.rebol.info/t/command-line-options-as-target-makefile-vs-target-makefile/1132.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>command line options as `target: makefile` vs `target=makefile`</title>
        <dc:creator><![CDATA[Mark-hi]]></dc:creator>
        <description><![CDATA[
            <p>Given that "looking unfamiliar" and "being easier to read" are not exclusive alternatives, the only reason I can think of is to ease the labour of those for whom only the first is true.  The way I see it, it is a shell command, so why not be nice and accept at least one kind of traditional shell syntax?</p>
<p>As long as it is not a stupendous <em>technical</em> burden to support both, of course.</p>
<p>Concerning file completion, everyone I know hacks it by putting a space in anyway and then deleting it after the completion completes <img src="https://forum.rebol.info/images/emoji/twitter/slight_smile.png?v=7" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          <p><a href="https://forum.rebol.info/t/command-line-options-as-target-makefile-vs-target-makefile/1132/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/command-line-options-as-target-makefile-vs-target-makefile/1132/2</link>
        <pubDate>Mon, 25 Mar 2019 17:33:44 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1132-2</guid>
        <source url="https://forum.rebol.info/t/command-line-options-as-target-makefile-vs-target-makefile/1132.rss">command line options as `target: makefile` vs `target=makefile`</source>
      </item>
      <item>
        <title>command line options as `target: makefile` vs `target=makefile`</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>It is traditional for programs that take command-line options in one of the following ways:</p>
<pre><code>my-program optionname=option
my-program --optionname option
my-program --optionname=option
my-program /optionname option
</code></pre>
<p>R3-Alpha's %make-make.r had code for the first case, so you would say <code>make-make OS_ID=1.2.3</code>, or whatever.  This was presumably just going with the flow of how options to GNU make were specified.</p>
<p><a class="mention" href="/u/giuliolunati">@giuliolunati</a> had an interesting idea of using a more Rebol-like syntax:</p>
<pre><code>my-program optionname: option
</code></pre>
<p>This not only is "more Rebolish", but you get filename completion on your options in most shells (because it's not trying to do the completion with <code>optionname=</code> glued to the front of it).</p>
<p>At the moment, you can use either <code>--optionname=</code> or <code>optionname:</code> with %make.r.  I've been using the colon form for a while, and like it.  For the sake of simplicity, I'm wondering if it should be the <em>only</em> option format that <code>make.r</code> supports.</p>
<p>I can't think of any <em>technical</em> reason not to do it.  One could argue that it will look unfamiliar.  But I think it's easier to read this way.</p>
<p>Is there any reason not to standardize to this?</p>
          <p><a href="https://forum.rebol.info/t/command-line-options-as-target-makefile-vs-target-makefile/1132/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/command-line-options-as-target-makefile-vs-target-makefile/1132/1</link>
        <pubDate>Mon, 25 Mar 2019 16:25:34 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1132-1</guid>
        <source url="https://forum.rebol.info/t/command-line-options-as-target-makefile-vs-target-makefile/1132.rss">command line options as `target: makefile` vs `target=makefile`</source>
      </item>
  </channel>
</rss>
