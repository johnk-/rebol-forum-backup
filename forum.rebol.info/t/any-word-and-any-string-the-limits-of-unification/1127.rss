<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>ANY-WORD! and ANY-STRING!: The Limits of Unification</title>
    <link>https://forum.rebol.info/t/any-word-and-any-string-the-limits-of-unification/1127</link>
    <description>There&#39;s been a very longstanding question of just how much ANY-WORD!s and ANY-STRING!s should share in common--and how aware users should be of the differences.

## 1. What about spaces, or starting with digits, etc.?

One question is whether ANY-WORD! should differ because there were illegal characters, like space:

    rebol2&gt;&gt; to word! &quot;word with spaces&quot;
    == word with spaces  ; Rebol2 allowed it

    r3-alpha&gt;&gt; to word! &quot;word with spaces&quot;
    ** Script error: contains invalid characters  ; R3-Alpha disallowed it

    red&gt;&gt; to word! &quot;word with spaces&quot;
    == word  ; Red has its own...idea

While spaces in words should be discouraged, so should they in filenames.  But this doesn&#39;t *necessarily* mean they should be illegal.

The problem with making them illegal is it would mean dialect authors would have to create their own escaping mechanisms.  If every dialect author had to come up with a notation for putting spaces in words, they might do it a different way.  Standardizing it would avoid that problem, and then you&#39;d just have a notation *(we&#39;ve discussed a seemingly worst-case `#[set-word! &quot;set word with spaces&quot;]`)*

 **But Ren-C has enough parts to live with &quot;no ANY-WORD! escaping&quot;**

    Fork: &quot;It&#39;s nice to use SET-WORD!s for character names in a screenplay.&quot;

    3-Headed-Clown: &lt;annoyed&gt; &quot;But there&#39;s only one dash in my name, not two!&quot;

    Fork: &quot;We have a lot more tools for tackling this now...&quot;
    [Hostile Fork]: &quot;...SET-BLOCK! with WORD!s covers spaces for instance.&quot;

    [&quot;3-Headed Clown&quot;]: &quot;I see--but I&#39;d need a TEXT!&quot;
    [&quot;3-Headed&quot; Clown]: &quot;Or, at least I&#39;d need *one* for invalid WORD!s&quot;
    [3 Headed Clown]: &quot;I could also change my name use INTEGER!.  Hahaha...not!&quot;

    (Hostile Fork): &quot;Another option here is SET-GROUP!s&quot;
    @(Hostile Fork) &quot;SYM-GROUP!s are a planned feature for the near future.&quot;
    @[Hostile Fork] &quot;SYM-BLOCK!s should be available too.&quot;

    &quot;3-Headed Clown&quot;/: &quot;Or PATH!s too!  It&#39;s all up to the dialect author.&quot;
    //&quot;3-Headed Clown&quot;//: &quot;That&#39;s pretty awesome.&quot;

    Fork: &quot;Sure, but know that not all types are legal in PATH! (e.g. URL!)&quot;

If you think about it, this is *kind of* a &quot;standardized form of escaping&quot;.  The only pain point would be--for instance--if you have another clever idea for what SET-BLOCK!s should do in your dialect.  You might feel it was wasted being the &quot;container for TEXT! that represents what a SET-WORD! would have been it could have held spaces&quot;.

I think this falls into the realm of acceptable cost.  Guaranteeing ANY-WORD! doesn&#39;t have spaces may be a limitation of a &quot;freedom to&quot;, but it gives you a &quot;freedom from&quot; that has some value.

## 2. What about binding?

R3-Alpha made ISSUE! an ANY-WORD.  This was [a controversial idea](http://www.rebol.net/cgi-bin/r3blog.r?view=0108#comments), and giving ISSUE!s bindings wasn&#39;t really thought through:

    r3-alpha&gt;&gt; set #123 456
    == 456

    r3-alpha&gt;&gt; words-of bind? #123
    == [system set 123 words-of bind?]

You just created a context key called 123, despite that being an illegal word:

    r3-alpha&gt;&gt; to word! &quot;123&quot;
    ** Syntax error: invalid character in: &quot;123&quot;

So ISSUE! became the poster child for &quot;weird things getting bound&quot;.  But now, I think this just represents a mistake.  It opened a can of worms, and we should re-seal the can.

Getting an inert word type in the form of @SYM-WORD is going to make up for it.

## Executive Summary

*[UTF-8 Everywhere](https://forum.rebol.info/t/realistically-migrating-rebol-to-utf8-everywhere/374/4) has arrived!*  The best information we&#39;re going to get for Beta/One is probably in front of us now.

I think I see the architectural lines drawn up pretty well for what has to happen.

* You **can&#39;t** have a binding on an ANY-STRING!, and you **can&#39;t** index into an ANY-WORD! directly.  Hence all ANY-WORD! are at their head position--as they have always been.

* All valid content for an ANY-WORD! is legal for an ANY-STRING!.  Hence you **can** alias an ANY-WORD! as an ANY-STRING! *without creating a new series*.  **as text! (first [foo])** would not allocate any additional memory--the string would merely honor the &quot;locked&quot; status bit of the underlying `foo` node.

* Not all content for ANY-STRING! is legal in ANY-WORD!.  For example, spaces--or starting with a number.  This may imply disallowing **as word! &quot;foo&quot;** as collateral damage for the illegality of **as word! &quot;foo bar&quot;**.  Or there may be tricks to allow some conversions sometimes, but we don&#39;t really need to worry about.

* ISSUE! is going back to being an ANY-STRING!, where **#123** is legal without raising any questions about what is legal in an ANY-WORD!

* REFINEMENT! is gone, so **/foo** is a PATH! with a WORD! in it, and **/1** is a PATH! with an INTEGER! in it.  So it doesn&#39;t factor into the WORD! question any more.

* SYMBOL-WORD! [(working title)](https://forum.rebol.info/t/at-word-at-path-at-group-and-at-block/1125/5) will bring a category of inert word to take ISSUE!&#39;s place, where **@123** will be illegal.  It will be part of a family of inerts, along with **@(...)**, **@.../.../...**, and **@[...]**.</description>
    
    <lastBuildDate>Fri, 03 Jul 2020 16:26:30 +0000</lastBuildDate>
    <category>Datatypes</category>
    <atom:link href="https://forum.rebol.info/t/any-word-and-any-string-the-limits-of-unification/1127.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>ANY-WORD! and ANY-STRING!: The Limits of Unification</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>There's been a very longstanding question of just how much ANY-WORD!s and ANY-STRING!s should share in common--and how aware users should be of the differences.</p>
<h2>1. What about spaces, or starting with digits, etc.?</h2>
<p>One question is whether ANY-WORD! should differ because there were illegal characters, like space:</p>
<pre><code>rebol2&gt;&gt; to word! "word with spaces"
== word with spaces  ; Rebol2 allowed it

r3-alpha&gt;&gt; to word! "word with spaces"
** Script error: contains invalid characters  ; R3-Alpha disallowed it

red&gt;&gt; to word! "word with spaces"
== word  ; Red has its own...idea
</code></pre>
<p>While spaces in words should be discouraged, so should they in filenames.  But this doesn't <em>necessarily</em> mean they should be illegal.</p>
<p>The problem with making them illegal is it would mean dialect authors would have to create their own escaping mechanisms.  If every dialect author had to come up with a notation for putting spaces in words, they might do it a different way.  Standardizing it would avoid that problem, and then you'd just have a notation <em>(we've discussed a seemingly worst-case <code>#[set-word! "set word with spaces"]</code>)</em></p>
<p><strong>But Ren-C has enough parts to live with "no ANY-WORD! escaping"</strong></p>
<pre><code>Fork: "It's nice to use SET-WORD!s for character names in a screenplay."

3-Headed-Clown: &lt;annoyed&gt; "But there's only one dash in my name, not two!"

Fork: "We have a lot more tools for tackling this now..."
[Hostile Fork]: "...SET-BLOCK! with WORD!s covers spaces for instance."

["3-Headed Clown"]: "I see--but I'd need a TEXT!"
["3-Headed" Clown]: "Or, at least I'd need *one* for invalid WORD!s"
[3 Headed Clown]: "I could also change my name use INTEGER!.  Hahaha...not!"

(Hostile Fork): "Another option here is SET-GROUP!s"
@(Hostile Fork) "SYM-GROUP!s are a planned feature for the near future."
@[Hostile Fork] "SYM-BLOCK!s should be available too."

"3-Headed Clown"/: "Or PATH!s too!  It's all up to the dialect author."
//"3-Headed Clown"//: "That's pretty awesome."

Fork: "Sure, but know that not all types are legal in PATH! (e.g. URL!)"
</code></pre>
<p>If you think about it, this is <em>kind of</em> a "standardized form of escaping".  The only pain point would be--for instance--if you have another clever idea for what SET-BLOCK!s should do in your dialect.  You might feel it was wasted being the "container for TEXT! that represents what a SET-WORD! would have been it could have held spaces".</p>
<p>I think this falls into the realm of acceptable cost.  Guaranteeing ANY-WORD! doesn't have spaces may be a limitation of a "freedom to", but it gives you a "freedom from" that has some value.</p>
<h2>2. What about binding?</h2>
<p>R3-Alpha made ISSUE! an ANY-WORD.  This was <a href="http://www.rebol.net/cgi-bin/r3blog.r?view=0108#comments" rel="nofollow noopener">a controversial idea</a>, and giving ISSUE!s bindings wasn't really thought through:</p>
<pre><code>r3-alpha&gt;&gt; set #123 456
== 456

r3-alpha&gt;&gt; words-of bind? #123
== [system set 123 words-of bind?]
</code></pre>
<p>You just created a context key called 123, despite that being an illegal word:</p>
<pre><code>r3-alpha&gt;&gt; to word! "123"
** Syntax error: invalid character in: "123"
</code></pre>
<p>So ISSUE! became the poster child for "weird things getting bound".  But now, I think this just represents a mistake.  It opened a can of worms, and we should re-seal the can.</p>
<p>Getting an inert word type in the form of <span class="mention">@SYM-WORD</span> is going to make up for it.</p>
<h2>Executive Summary</h2>
<p><em><a href="https://forum.rebol.info/t/realistically-migrating-rebol-to-utf8-everywhere/374/4">UTF-8 Everywhere</a> has arrived!</em>  The best information we're going to get for Beta/One is probably in front of us now.</p>
<p>I think I see the architectural lines drawn up pretty well for what has to happen.</p>
<ul>
<li>
<p>You <strong>can't</strong> have a binding on an ANY-STRING!, and you <strong>can't</strong> index into an ANY-WORD! directly.  Hence all ANY-WORD! are at their head position--as they have always been.</p>
</li>
<li>
<p>All valid content for an ANY-WORD! is legal for an ANY-STRING!.  Hence you <strong>can</strong> alias an ANY-WORD! as an ANY-STRING! <em>without creating a new series</em>.  <strong>as text! (first [foo])</strong> would not allocate any additional memory--the string would merely honor the "locked" status bit of the underlying <code>foo</code> node.</p>
</li>
<li>
<p>Not all content for ANY-STRING! is legal in ANY-WORD!.  For example, spaces--or starting with a number.  This may imply disallowing <strong>as word! "foo"</strong> as collateral damage for the illegality of <strong>as word! "foo bar"</strong>.  Or there may be tricks to allow some conversions sometimes, but we don't really need to worry about.</p>
</li>
<li>
<p>ISSUE! is going back to being an ANY-STRING!, where <strong><span class="hashtag">#123</span></strong> is legal without raising any questions about what is legal in an ANY-WORD!</p>
</li>
<li>
<p>REFINEMENT! is gone, so <strong>/foo</strong> is a PATH! with a WORD! in it, and <strong>/1</strong> is a PATH! with an INTEGER! in it.  So it doesn't factor into the WORD! question any more.</p>
</li>
<li>
<p>SYMBOL-WORD! <a href="https://forum.rebol.info/t/at-word-at-path-at-group-and-at-block/1125/5">(working title)</a> will bring a category of inert word to take ISSUE!'s place, where <strong><span class="mention">@123</span></strong> will be illegal.  It will be part of a family of inerts, along with <strong>@(...)</strong>, <strong>@.../.../...</strong>, and <strong>@[...]</strong>.</p>
</li>
</ul>
          <p><a href="https://forum.rebol.info/t/any-word-and-any-string-the-limits-of-unification/1127/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/any-word-and-any-string-the-limits-of-unification/1127/1</link>
        <pubDate>Fri, 22 Mar 2019 19:16:13 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1127-1</guid>
        <source url="https://forum.rebol.info/t/any-word-and-any-string-the-limits-of-unification/1127.rss">ANY-WORD! and ANY-STRING!: The Limits of Unification</source>
      </item>
  </channel>
</rss>
