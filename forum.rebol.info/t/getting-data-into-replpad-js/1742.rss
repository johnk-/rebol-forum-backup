<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Getting data into replpad-js</title>
    <link>https://forum.rebol.info/t/getting-data-into-replpad-js/1742</link>
    <description>Hi,
What are the best options for getting data into the replpad-js build (http://hostilefork.com/media/shared/replpad-js/)?
Other than pasting data into the console, I am not clear on what other options exist and how to use them.
Thanks, John</description>
    
    <lastBuildDate>Sat, 16 Oct 2021 10:34:24 +0000</lastBuildDate>
    <category>Emscripten</category>
    <atom:link href="https://forum.rebol.info/t/getting-data-into-replpad-js/1742.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Getting data into replpad-js</title>
        <dc:creator><![CDATA[johnk]]></dc:creator>
        <description><![CDATA[
            <p>Fantastic. That gives me plenty of options. Thanks, John</p>
          <p><a href="https://forum.rebol.info/t/getting-data-into-replpad-js/1742/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/getting-data-into-replpad-js/1742/3</link>
        <pubDate>Sat, 16 Oct 2021 10:34:24 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1742-3</guid>
        <source url="https://forum.rebol.info/t/getting-data-into-replpad-js/1742.rss">Getting data into replpad-js</source>
      </item>
      <item>
        <title>Getting data into replpad-js</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <h2>Clipboard</h2>
<p>For security reasons, READ of the clipboard without you initiating what the browser considers to be paste command isn't permitted. We don't necessarily have to say that always means "you see what you paste"...e.g. we could make it so if the focus is in a special place it would do something else (e.g. make a named resource for the paste content of some kind).</p>
<p>Note that you can WRITE to clipboard:// and that will work.</p>
<h2>READ of a URL</h2>
<p>So far I've been using READ of URLs to get nontrivial data in.  Anything that supports CORS will work.</p>
<p>If you have a way of publishing data on the web that supports CORS, that's an option.  (Note we've made it work on GitHub and GitLab raw URLs.)</p>
<h2>We Should Have an UPLOAD Command</h2>
<p>There's a DOWNLOAD command for getting data from the Repl to a local file.  But we should be have an UPLOAD command for sending local files (which I think requires putting up a dialog box?)</p>
<p>That shouldn't be hard.  I'll look into it.</p>
<h2>Filesystem Access API Needs Research</h2>
<p>Beyond these options, there's something that is still in the standardization process called the <a href="https://wicg.github.io/file-system-access/">Filesystem Access API</a></p>
<p>If someone were enthusiastic about learning how that worked and what the status of it was that would be great.</p>
<h2>Look At the Local Storage Feature!</h2>
<p>There is a <a href="https://github.com/hostilefork/replpad-js/blob/master/storage.md">"storage" file scheme</a> which <a class="mention" href="/u/rgchris">@rgchris</a> made that lets you write files to locations that will persist between browser sessions at %/.</p>
<pre><code>&gt;&gt; write %/persist.txt "This persists"
</code></pre>
<p>(refresh your browser)</p>
<pre><code>&gt;&gt; as text! read %/persist.txt
== "This persists"
</code></pre>
<p>If you write files to %/tmp/ then it will be persisted for the current browser session, but won't be there afterward.</p>
<p>So if you are working with data that you UPLOAD or get from the clipboard this would save you from needing to do that multiple times.  See documentation for issues like storage limits...it would be nice if we showed you some feedback on that (a little "storage used" bar somewhere in the UI?)</p>
<h2>Drag And Drop =&gt; Temporary Storage?</h2>
<p>I think if drag and drop of files into the Repl made that file available in the temporary storage that would be cool.  If there was some UI--kind of like showing when you had attachments--where clicking on the attachment would insert a link you could read the data from that would be cool.</p>
          <p><a href="https://forum.rebol.info/t/getting-data-into-replpad-js/1742/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/getting-data-into-replpad-js/1742/2</link>
        <pubDate>Fri, 15 Oct 2021 15:07:38 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1742-2</guid>
        <source url="https://forum.rebol.info/t/getting-data-into-replpad-js/1742.rss">Getting data into replpad-js</source>
      </item>
      <item>
        <title>Getting data into replpad-js</title>
        <dc:creator><![CDATA[johnk]]></dc:creator>
        <description><![CDATA[
            <p>Hi,<br>
What are the best options for getting data into the replpad-js build (<a href="http://hostilefork.com/media/shared/replpad-js/" class="inline-onebox">Ren Garden</a>)?<br>
Other than pasting data into the console, I am not clear on what other options exist and how to use them.<br>
Thanks, John</p>
          <p><a href="https://forum.rebol.info/t/getting-data-into-replpad-js/1742/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/getting-data-into-replpad-js/1742/1</link>
        <pubDate>Wed, 13 Oct 2021 23:17:18 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1742-1</guid>
        <source url="https://forum.rebol.info/t/getting-data-into-replpad-js/1742.rss">Getting data into replpad-js</source>
      </item>
  </channel>
</rss>
