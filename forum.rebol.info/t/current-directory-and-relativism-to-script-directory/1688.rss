<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>&quot;Current Directory&quot; and Relativism to Script Directory</title>
    <link>https://forum.rebol.info/t/current-directory-and-relativism-to-script-directory/1688</link>
    <description>When you encounter a DO or an IMPORT of a relative path in a script, we&#39;ve been assuming that the most convenient interpretation of that would be to have it run relative to the script&#39;s location.

## I think we need to stop changing the working directory on DO

We no longer use DO for breaking scripts into components, because the module system is starting to work...and it will only work better as time goes on.

So the idea of DO is now that it is a script that is like a utility, that takes command-line arguments of what it is to operate on.

The person who invokes a DO--like the person who invokes a script from a command-line--has a concept of the current path.  The filenames they use are relative to their concept of the path, not the concept of the script.  When running from the command line you may not really know or care where the script is--it could be somewhere on the path--why would you relativize your paths to this unknown location?

## We Can Use New Datatypes Like @p/a/t.h and @tup.le

Files passed on the command line can have pretty gnarly names with arbitrary composition in them...spaces, starting with digits, etc.

When you DO or IMPORT a script the name is likely more tame.

What if we said you could IMPORT an `@xxx` and it would turn that into a path and relativize it?

    import %my-lib.r  ; relative to WHAT-DIR
    import @my-lib.r  ; relative to system.script.path

Having distinct intents for IMPORT isn&#39;t as useful as distinct intents for DO.

If we were willing to establish these two intents, we could make it a property of READ... so this ceases to be anything specific to IMPORT or DO.

## Questions, Comments, Suggestions?

Right now the @-path idea looks like a pretty decent idea.  I think it would solve a lot of pain points I&#39;ve been dealing with in trying to write GitHub Actions that are getting confused about the directories.</description>
    
    <lastBuildDate>Fri, 27 Aug 2021 02:00:14 +0000</lastBuildDate>
    <category>Console</category>
    <atom:link href="https://forum.rebol.info/t/current-directory-and-relativism-to-script-directory/1688.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>&quot;Current Directory&quot; and Relativism to Script Directory</title>
        <dc:creator><![CDATA[gchiu]]></dc:creator>
        <description><![CDATA[
            <p>Changing the current directory to where ever the done script is has always been a bug bear for me.<br>
One has to record the current directory, do stuff and make sure that you are wherever you are, and then pop back again.<br>
I'm glad this is being fixed.</p>
          <p><a href="https://forum.rebol.info/t/current-directory-and-relativism-to-script-directory/1688/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/current-directory-and-relativism-to-script-directory/1688/2</link>
        <pubDate>Fri, 27 Aug 2021 02:00:14 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1688-2</guid>
        <source url="https://forum.rebol.info/t/current-directory-and-relativism-to-script-directory/1688.rss">&quot;Current Directory&quot; and Relativism to Script Directory</source>
      </item>
      <item>
        <title>&quot;Current Directory&quot; and Relativism to Script Directory</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>When you encounter a DO or an IMPORT of a relative path in a script, we've been assuming that the most convenient interpretation of that would be to have it run relative to the script's location.</p>
<h2>I think we need to stop changing the working directory on DO</h2>
<p>We no longer use DO for breaking scripts into components, because the module system is starting to work...and it will only work better as time goes on.</p>
<p>So the idea of DO is now that it is a script that is like a utility, that takes command-line arguments of what it is to operate on.</p>
<p>The person who invokes a DO--like the person who invokes a script from a command-line--has a concept of the current path.  The filenames they use are relative to their concept of the path, not the concept of the script.  When running from the command line you may not really know or care where the script is--it could be somewhere on the path--why would you relativize your paths to this unknown location?</p>
<h2>We Can Use New Datatypes Like <span class="mention">@p</span>/a/t.h and <span class="mention">@tup.le</span>
</h2>
<p>Files passed on the command line can have pretty gnarly names with arbitrary composition in them...spaces, starting with digits, etc.</p>
<p>When you DO or IMPORT a script the name is likely more tame.</p>
<p>What if we said you could IMPORT an <code>@xxx</code> and it would turn that into a path and relativize it?</p>
<pre><code>import %my-lib.r  ; relative to WHAT-DIR
import @my-lib.r  ; relative to system.script.path
</code></pre>
<p>Having distinct intents for IMPORT isn't as useful as distinct intents for DO.</p>
<p>If we were willing to establish these two intents, we could make it a property of READ... so this ceases to be anything specific to IMPORT or DO.</p>
<h2>Questions, Comments, Suggestions?</h2>
<p>Right now the @-path idea looks like a pretty decent idea.  I think it would solve a lot of pain points I've been dealing with in trying to write GitHub Actions that are getting confused about the directories.</p>
          <p><a href="https://forum.rebol.info/t/current-directory-and-relativism-to-script-directory/1688/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/current-directory-and-relativism-to-script-directory/1688/1</link>
        <pubDate>Fri, 27 Aug 2021 01:19:34 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1688-1</guid>
        <source url="https://forum.rebol.info/t/current-directory-and-relativism-to-script-directory/1688.rss">&quot;Current Directory&quot; and Relativism to Script Directory</source>
      </item>
  </channel>
</rss>
