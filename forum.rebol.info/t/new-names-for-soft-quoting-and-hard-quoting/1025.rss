<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>New names for &quot;soft quoting&quot; and &quot;hard quoting&quot;</title>
    <link>https://forum.rebol.info/t/new-names-for-soft-quoting-and-hard-quoting/1025</link>
    <description>There&#39;s a difference between a parameter specified as **&#39;x** and one passed as **:x**.  As a reminder of the distinction:

     soft-quoter: func [&#39;x] [-- x]

     &gt;&gt; soft-quoter add 1 2
     -- add ;; did not run the add, just grabbed the word
     == 2

     &gt;&gt; soft-quoter (1 + 2)
     -- 3 ;; evaluated the group
     == 3

     hard-quoter: func [:x] [-- x]

     &gt;&gt; hard-quoter add 1 2
     -- add ;; did not run the add, same as soft quote
     == 2

     &gt;&gt; hard-quoter (1 + 2)
     -- (1 + 2) ;; did not evaluate the group, different
     == (1 + 2)

It existed in R3-Alpha and predates me in Rebol lore.  But the terminology distinction of &quot;soft&quot; and &quot;hard&quot; was something I introduced.  I&#39;ve liked that pretty well...though not a lot of conversations involve mentioning the difference.  So I don&#39;t know how other people have felt about it.

## But now this isn&#39;t &quot;quoting&quot; any more

[I&#39;ve explained](https://forum.rebol.info/t/escaping-vs-literal-vs/983) that operators like QUOTE, UNQUOTE, and DEQUOTE are there to add and remove tick marks, and that this behavior is what gets the coveted **rebQ()** in the API.

     &gt;&gt; x: 10

     &gt;&gt; quote x
     == &#39;10

     &gt;&gt; unquote first [&#39;&#39;&lt;hi&gt;]
     == &#39;&lt;hi&gt;

     &gt;&gt; dequote first [&#39;&#39;&lt;hi&gt;]
     == &lt;hi&gt;

So what this parameter convention we&#39;re talking about is not *quoted* parameters, but *literal* parameters, e.g. &quot;take that parameter literally&quot; not &quot;add a quote onto that parameter&quot;:

     &gt;&gt; x: 10

     &gt;&gt; lit x
     == x

## But &quot;hard literal&quot; and &quot;soft literal&quot; doesn&#39;t have the same ring to it...

...or maybe &quot;hard quoting&quot; and &quot;soft quoting&quot; weren&#39;t actually any good in the first place, and I just got used to it.

Still, I feel that &quot;literal&quot; doesn&#39;t have the same leeway as &quot;quote&quot; for saying there&#39;s more than one form of it.  It&#39;s like how I don&#39;t care for &quot;strict equality&quot;.  *How much more equal than equal can you get?*

So to me, what was a hard quoted parameter becomes just a **literal parameter**, and that&#39;s the right name for it.

Now what are soft literals?  &quot;figurative parameters&quot;?  *(just kidding, that&#39;s terrible)*

One possibility would be to call them **escapable literal parameters**.  So I&#39;ll start the naming bidding there.</description>
    
    <lastBuildDate>Tue, 22 Jan 2019 01:57:12 +0000</lastBuildDate>
    <category>Naming</category>
    <atom:link href="https://forum.rebol.info/t/new-names-for-soft-quoting-and-hard-quoting/1025.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>New names for &quot;soft quoting&quot; and &quot;hard quoting&quot;</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>There's a difference between a parameter specified as <strong>'x</strong> and one passed as <strong>:x</strong>.  As a reminder of the distinction:</p>
<pre><code> soft-quoter: func ['x] [-- x]

 &gt;&gt; soft-quoter add 1 2
 -- add ;; did not run the add, just grabbed the word
 == 2

 &gt;&gt; soft-quoter (1 + 2)
 -- 3 ;; evaluated the group
 == 3

 hard-quoter: func [:x] [-- x]

 &gt;&gt; hard-quoter add 1 2
 -- add ;; did not run the add, same as soft quote
 == 2

 &gt;&gt; hard-quoter (1 + 2)
 -- (1 + 2) ;; did not evaluate the group, different
 == (1 + 2)
</code></pre>
<p>It existed in R3-Alpha and predates me in Rebol lore.  But the terminology distinction of "soft" and "hard" was something I introduced.  I've liked that pretty well...though not a lot of conversations involve mentioning the difference.  So I don't know how other people have felt about it.</p>
<h2>But now this isn't "quoting" any more</h2>
<p><a href="https://forum.rebol.info/t/escaping-vs-literal-vs/983">I've explained</a> that operators like QUOTE, UNQUOTE, and DEQUOTE are there to add and remove tick marks, and that this behavior is what gets the coveted <strong>rebQ()</strong> in the API.</p>
<pre><code> &gt;&gt; x: 10

 &gt;&gt; quote x
 == '10

 &gt;&gt; unquote first [''&lt;hi&gt;]
 == '&lt;hi&gt;

 &gt;&gt; dequote first [''&lt;hi&gt;]
 == &lt;hi&gt;
</code></pre>
<p>So what this parameter convention we're talking about is not <em>quoted</em> parameters, but <em>literal</em> parameters, e.g. "take that parameter literally" not "add a quote onto that parameter":</p>
<pre><code> &gt;&gt; x: 10

 &gt;&gt; lit x
 == x
</code></pre>
<h2>But "hard literal" and "soft literal" doesn't have the same ring to it...</h2>
<p>...or maybe "hard quoting" and "soft quoting" weren't actually any good in the first place, and I just got used to it.</p>
<p>Still, I feel that "literal" doesn't have the same leeway as "quote" for saying there's more than one form of it.  It's like how I don't care for "strict equality".  <em>How much more equal than equal can you get?</em></p>
<p>So to me, what was a hard quoted parameter becomes just a <strong>literal parameter</strong>, and that's the right name for it.</p>
<p>Now what are soft literals?  "figurative parameters"?  <em>(just kidding, that's terrible)</em></p>
<p>One possibility would be to call them <strong>escapable literal parameters</strong>.  So I'll start the naming bidding there.</p>
          <p><a href="https://forum.rebol.info/t/new-names-for-soft-quoting-and-hard-quoting/1025/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/new-names-for-soft-quoting-and-hard-quoting/1025/1</link>
        <pubDate>Tue, 22 Jan 2019 01:57:12 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1025-1</guid>
        <source url="https://forum.rebol.info/t/new-names-for-soft-quoting-and-hard-quoting/1025.rss">New names for &quot;soft quoting&quot; and &quot;hard quoting&quot;</source>
      </item>
  </channel>
</rss>
