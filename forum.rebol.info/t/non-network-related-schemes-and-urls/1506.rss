<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Non-Network related schemes and URLs</title>
    <link>https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506</link>
    <description>Questions have been raised following the implementation of a handful of schemes in the ReplPad package. A prominent aspect of this is whether a URL can be set to the current path and how each scheme handles this and path changes via relative file through CHANGE-DIR

There are eight schemes in all: FILE, DIR, HTTP, HTTPS, STORAGE, CLIPBOARD, LOG and DOWNLOADS. In implementing them, the first four are moot—you can set them via change-dir and the FILE/DIR schemes know to map relative files to those schemes.

In designing the latter four there are different considerations—none map to a hierarchical filesystem, thus I sought to avoid structuring them in the traditional **thing://** form.

* Storage — maps to key/value storage, so it uses a plain **storage:key** form:

      read storage:key
      write storage:another-key &quot;Something&quot;

    It could stand to distinguish between localStorage and sessionStorage—for another day.

* Clipboard — doesn&#39;t have any prescribed form, just simply saying the following is enough and equivalent:

      write clipboard:// &quot;Something&quot;
      write clipboard::foobar &quot;Something&quot;
      ; read is not feasible

  As a side note, in a Mac implementation, I use the following forms to distinguish between different available text clipboards:

      clipboard::general
      clipboard::ruler
      clipboard::font
      clipboard::find

* Log — for this scheme, I possibly could&#39;ve gone for the double-colon again, but opted for a triplet. There are precisely four endpoints:

      log:type=log
      log:type=info
      log:type=warn
      log:type=error

* Downloads — for this scheme, the argument is a variable single filename, I opted for downloads:/// so as to take advantage of DECODE-URL extracting that name for us:

      write downloads:///data.bin #{CAFEF00D}

    It will ignore any values between the second and last slash, though it doesn&#39;t check for conformance.

Each one of these is a subjective choice that I made.

Amongst the questions raised:

* Is there significance in deviating from the traditional **scheme://** format when you couldn&#39;t conceivably say: **change-dir log:type=** and then say: **write %error &quot;Foo&quot;**?

* Is this the right design direction to go in at all when you could just write functions that say **download** or **log/warn** or **write-clipboard**?

---

My shorter opinions on this are 1) no—I&#39;m not suggesting these forms are ideal, but there are prominent URL schemes that don&#39;t adhere to this form, for example: **tel:** and **mailto:**. I think that URLs should be constructed to fit their domain. 2) yes—URLs and Ports represent abstract external resources; schemes offer versatility on how the standard verbs adapt to their domain rather than introducing many domain-specific verb constructions.</description>
    
    <lastBuildDate>Sun, 21 Feb 2021 23:43:02 +0000</lastBuildDate>
    <category>Naming</category>
    <atom:link href="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Non-Network related schemes and URLs</title>
        <dc:creator><![CDATA[BlackATTR]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="rgchris" data-post="5" data-topic="1506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/rgchris/40/14_2.png" class="avatar"> rgchris:</div>
<blockquote>
<p>Absolutely not borrowing from Java—I resent the insinuation <img src="https://forum.rebol.info/images/emoji/twitter/stuck_out_tongue_winking_eye.png?v=9" title=":stuck_out_tongue_winking_eye:" class="emoji" alt=":stuck_out_tongue_winking_eye:">.</p>
</blockquote>
</aside>
<p>Retracted. <img src="https://forum.rebol.info/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"> It's perhaps more commonly known as the notation for pseudo-elements in CSS.</p>
<pre><code class="lang-auto">p::first-line { }
</code></pre>
          <p><a href="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/28">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/28</link>
        <pubDate>Sun, 21 Feb 2021 23:43:02 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1506-28</guid>
        <source url="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506.rss">Non-Network related schemes and URLs</source>
      </item>
      <item>
        <title>Non-Network related schemes and URLs</title>
        <dc:creator><![CDATA[rgchris]]></dc:creator>
        <description><![CDATA[
            <p>There should thus be a policy for handling HELP reflection—</p>
<pre><code class="lang-nohighlight">help clipboard
</code></pre>
<p>Should likely print a descriptor of the port and permitted actors with individual descriptors</p>
          <p><a href="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/27">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/27</link>
        <pubDate>Tue, 16 Feb 2021 20:03:57 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1506-27</guid>
        <source url="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506.rss">Non-Network related schemes and URLs</source>
      </item>
      <item>
        <title>Non-Network related schemes and URLs</title>
        <dc:creator><![CDATA[BlackATTR]]></dc:creator>
        <description><![CDATA[
            <p>I think that this looks more like rebol syntax. <img src="https://forum.rebol.info/images/emoji/twitter/+1.png?v=9" title=":+1:" class="emoji" alt=":+1:"></p>
          <p><a href="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/26">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/26</link>
        <pubDate>Mon, 15 Feb 2021 23:14:00 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1506-26</guid>
        <source url="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506.rss">Non-Network related schemes and URLs</source>
      </item>
      <item>
        <title>Non-Network related schemes and URLs</title>
        <dc:creator><![CDATA[rgchris]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="BlackATTR" data-post="2" data-topic="1506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/blackattr/40/204_2.png" class="avatar"> BlackATTR:</div>
<blockquote>
<p>I'm not a big fan of the colon notation <code>storage:key</code> bec I more naturally associate a colon with an assignment operator.</p>
</blockquote>
</aside>
<p>On reflection, URLs can be a bit of a red herring in these cases. Yes, I can spec with minimalist syntax, say <strong>log::error</strong> or <strong>clipboard::general</strong>, but that could be a minor quibble if all you're doing is establishing those places. As with the HTTPd scheme (or most schemes), you can also initiate with a freeform block that only needs <strong>[scheme: 'thing ...]</strong> at the lead.</p>
<p>If these are essential services, they could live in a word by themselves and thus become accessible via regular syntax:</p>
<pre><code class="lang-nohighlight">; in a startup script/beginning of script
log: reduce [
    'log make port! log:type=log
    'info make port! [scheme: 'log "log"]  ; spitball alternate
    'warn make port! log:type=warn
    'error make port! log:type=error
]

clipboard: make port! clipboard://

; then when you look to use them
write log/error "Some error message"
write clipboard "Text I want to paste elsewhere"
</code></pre>
<p>You still get the benefit of having top-level verbs and descriptive nouns. You no longer have the string conflict either:</p>
<pre><code class="lang-nohighlight">insert clipboard image
insert log/error "Message"
</code></pre>
<p>For local storage, it could have more of a map!-like interface:</p>
<pre><code class="lang-nohighlight">storage: reduce [
    'local open storage::local      ; localStorage object
    'session open storage::session  ; sessionStorage object
]

; then we can switch to using SELECT/PUT
select storage/local "thing"
put storage/session "thing" "just for now"
</code></pre>
<p>Does that read a little better?</p>
<hr>
<p>memo: PUT should allow PORT! for its series argument, and be added to the actors list—although: is PUT just a synonym for POKE?</p>
          <p><a href="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/25">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/25</link>
        <pubDate>Mon, 15 Feb 2021 22:38:41 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1506-25</guid>
        <source url="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506.rss">Non-Network related schemes and URLs</source>
      </item>
      <item>
        <title>Non-Network related schemes and URLs</title>
        <dc:creator><![CDATA[rgchris]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="23" data-topic="1506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>What if I didn't OPEN it, but tried to use the URL directly?</p>
</blockquote>
</aside>
<p>Could also do MAKE PORT!</p>
<aside class="quote no-group" data-username="hostilefork" data-post="23" data-topic="1506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<pre><code class="lang-nohighlight">change some://dbms/scheme [foo: "y" in table-y]
</code></pre>
<p>How would that be resolved with any behavior for what CHANGE might do for a string?</p>
</blockquote>
</aside>
<p>If strings generated directly from source are locked, then you'll get an error <img src="https://forum.rebol.info/images/emoji/twitter/smiley.png?v=9" title=":smiley:" class="emoji" alt=":smiley:"></p>
<p>Isn't that slightly problematic anyway? This could come back to bite me, but how common is using a block to amend a string with insert/change/append?</p>
<p>I still lean toward having to explicitly transform a URL to a port (<strong>make port!</strong> or <strong>open</strong>) before acting on it as such. READ/WRITE would seem to be the exceptions to that. Being able to manipulate the URL as a series is still essential of itself.</p>
<aside class="quote no-group" data-username="hostilefork" data-post="23" data-topic="1506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>So how do you talk to the object of a port's implementation vs. send messages to the thing the port is representing?</p>
</blockquote>
</aside>
<p>I wouldn't propose changing that—path notation gets you the top level of the port object, verbs access the API.</p>
<pre><code class="lang-nohighlight">&gt;&gt; this: make port! http://foo
== #[port! [...] [...]]

&gt;&gt; help this
THIS is a port! of value:
   spec            object!   [title scheme ref path host port-id local-id ...
   scheme          object!   [name title spec info actor awake]
   actor           object!   [read write open reflect close copy query]
   awake           blank!    _
   state           blank!    _
   data            blank!    _
   locals          blank!    _
   connections     blank!    _

&gt;&gt; this/spec 
== make object! [
    [title scheme ref path host port-id local-id method headers content timeout debug follow]
    [
        title: "HyperText Transport Protocol v1.1"
        scheme: 'http
        ref: http://foo
        path: %/
        host: "foo"
        port-id: 80
        local-id: _
        method: get
        headers: []
        content: _
        timeout: 15
        debug: _
        follow: redirect
    ]
]
</code></pre>
          <p><a href="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/24">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/24</link>
        <pubDate>Mon, 15 Feb 2021 02:15:01 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1506-24</guid>
        <source url="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506.rss">Non-Network related schemes and URLs</source>
      </item>
      <item>
        <title>Non-Network related schemes and URLs</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="rgchris" data-post="13" data-topic="1506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/rgchris/40/14_2.png" class="avatar"> rgchris:</div>
<blockquote>
<pre><code>db: open some://dbms/scheme
select db [* from table-x]
change db [foo: "y" in table-y]
</code></pre>
<p>To me, that is coherent.</p>
</blockquote>
</aside>
<p>What if I didn't OPEN it, but tried to use the URL directly?</p>
<pre><code>change some://dbms/scheme [foo: "y" in table-y]
</code></pre>
<p>How would that be resolved with any behavior for what CHANGE might do for a string?</p>
<p>This brings up again how PORT! may claim to be an ANY-CONTEXT!.  But operations like APPEND and FIND can't act like they do on OBJECT! -and- dispatch to the port scheme to do its thing.  It has to be one or the other.</p>
<p>So how do you talk to the object of a port's implementation vs. send messages to the thing the port is representing?</p>
          <p><a href="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/23">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/23</link>
        <pubDate>Mon, 15 Feb 2021 02:04:46 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1506-23</guid>
        <source url="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506.rss">Non-Network related schemes and URLs</source>
      </item>
      <item>
        <title>Non-Network related schemes and URLs</title>
        <dc:creator><![CDATA[rgchris]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="rgchris" data-post="21" data-topic="1506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/rgchris/40/14_2.png" class="avatar"> rgchris:</div>
<blockquote>
<p>I don't have the answers for how EMPTY? works on streaming ports, but again, it doesn't seem a showstopper.</p>
</blockquote>
</aside>
<p>One general way to approach streaming is that it be event-driven and that a limited number of events be configurable. In a way, that's kind of what Parse Machine is, but I'm only really at an early understanding of what the mechanics of that are and how tightly you could couple it to a streaming spigot.</p>
<p>The only such spigots we have right now (that I'm aware of) are FILE and TCP schemes. I'd love to know specifically what Earl had in mind for a CALL scheme.</p>
          <p><a href="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/22">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/22</link>
        <pubDate>Mon, 15 Feb 2021 02:00:18 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1506-22</guid>
        <source url="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506.rss">Non-Network related schemes and URLs</source>
      </item>
      <item>
        <title>Non-Network related schemes and URLs</title>
        <dc:creator><![CDATA[rgchris]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="20" data-topic="1506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>When does the universal generic verb of READ stop accruing this potentially giant list of refinements?</p>
</blockquote>
</aside>
<p>I haven't proposed any new ones. I'd be happy to pare back the semantics of READ (in particular) and push them to the state of a given port.</p>
<aside class="quote no-group" data-username="hostilefork" data-post="20" data-topic="1506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>Breaking things into lines seems like something that could be handled by a fallback if the actor didn't have its own optimized/streaming implementation. How should that work?</p>
</blockquote>
</aside>
<p>Or could be handled in the generic for any character if it detected it in the stream. This is a spitball:</p>
<pre><code class="lang-nohighlight">p: make port! streaming://thing
p/options/break: newline
collect [
    while [not empty? p] [
        keep read p
    ]
]
</code></pre>
<p>I don't have the answers for how EMPTY? works on streaming ports, but again, it doesn't seem a showstopper.</p>
<aside class="quote no-group" data-username="hostilefork" data-post="20" data-topic="1506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>Do actors have the ability to "contribute" more refinements, or are changes managed purely by being compiled into the core?</p>
</blockquote>
</aside>
<p>Conceptually I don't see why not, I'd put that back to you—how would you do that? This'd be a question of mapping one function to another. Alternatively, is there a natural language limit to the appropriate refinements for a given verb? Given that you can always use a block as currency for most of these verbs, what reasoning would there be not to use a dialect if you extend past limitations set by applicability on regular Rebol values? Another way to put this is why do these high-value verbs have such specific refinements?</p>
<aside class="quote no-group" data-username="hostilefork" data-post="20" data-topic="1506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>How would these make it through to HELP if they exist?</p>
</blockquote>
</aside>
<p>HELP is such a big, hacky function as it is. There'd be a way.</p>
<aside class="quote no-group" data-username="hostilefork" data-post="20" data-topic="1506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>While the implementations may vary, it seems you at least think there is some agreed-upon arity for every word. And you think there's a good first draft of this list. I guess going over the list and explaining why--since these words can semantically mean literally anything--they have the given arity is at least ground zero for the religion.</p>
</blockquote>
</aside>
<p>I compiled <a href="https://github.com/r3n/rebol-wiki/wiki/Port-Actors">this list</a> a while ago. I don't treat this list as sacred in any way, it was just an enumeration from R3/Alpha (categorization mine).</p>
          <p><a href="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/21">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/21</link>
        <pubDate>Mon, 15 Feb 2021 01:39:42 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1506-21</guid>
        <source url="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506.rss">Non-Network related schemes and URLs</source>
      </item>
      <item>
        <title>Non-Network related schemes and URLs</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="rgchris" data-post="19" data-topic="1506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/rgchris/40/14_2.png" class="avatar"> rgchris:</div>
<blockquote>
<p>It should either handle it, reject it, or it's a bug.</p>
</blockquote>
</aside>
<p>Okay, at least one point of agreement.  But...</p>
<ul>
<li>
<p>Is /LINES the kind of thing that should be on the interface of READ?  When does the universal generic verb of READ stop accruing this potentially giant list of refinements?</p>
</li>
<li>
<p>Breaking things into lines seems like something that could be handled by a fallback if the actor didn't have its own optimized/streaming implementation.  How should that work?</p>
</li>
<li>
<p>Do actors have the ability to "contribute" more refinements, or are changes managed purely by being compiled into the core?  How would these make it through to HELP if they exist?</p>
</li>
<li>
<p>While the implementations may vary, it seems you at least think there is some agreed-upon arity for every word.  And you think there's a good first draft of this list.  I guess going over the list and explaining why--since these words can semantically mean literally anything--they have the given arity is at least ground zero for the religion.</p>
</li>
</ul>
          <p><a href="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/20">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/20</link>
        <pubDate>Mon, 15 Feb 2021 01:20:51 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1506-20</guid>
        <source url="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506.rss">Non-Network related schemes and URLs</source>
      </item>
      <item>
        <title>Non-Network related schemes and URLs</title>
        <dc:creator><![CDATA[rgchris]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="18" data-topic="1506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>/LINES was very much applicable to this case, but the HTTP scheme didn't know about it.</p>
</blockquote>
</aside>
<p>It should either handle it, reject it, or it's a bug.</p>
<p>You can adapt the way the functions are defined within the actors collection to apply more rigour, it doesn't really change the premise.</p>
          <p><a href="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/19">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/19</link>
        <pubDate>Mon, 15 Feb 2021 01:05:00 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1506-19</guid>
        <source url="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506.rss">Non-Network related schemes and URLs</source>
      </item>
      <item>
        <title>Non-Network related schemes and URLs</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="rgchris" data-post="17" data-topic="1506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/rgchris/40/14_2.png" class="avatar"> rgchris:</div>
<blockquote>
<p>Why would this particular API be fixed in time?</p>
</blockquote>
</aside>
<p>I gave an example of what would happen in the presence of any change.  Let's presume that /LINES is something that was added to READ that the person implementing the READ actor for HTTP didn't know about:</p>
<pre><code>r3-alpha&gt;&gt; read/lines http://example.com  
== #{
3C21646F63747970652068746D6C3E0A3C68746D6C3E0A3C686561643E0A2020
20203C7469746C653E4578616D706C6520446F6D61696E3C2F7469746C653E0A
</code></pre>
<p>If the refinement definitions live in a single GENERIC prototype definition... then this "handle those that are applicable" premise falls through the cracks rather quickly.  /LINES was very much applicable to this case, but the HTTP scheme didn't know about it.</p>
          <p><a href="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/18</link>
        <pubDate>Mon, 15 Feb 2021 01:03:27 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1506-18</guid>
        <source url="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506.rss">Non-Network related schemes and URLs</source>
      </item>
      <item>
        <title>Non-Network related schemes and URLs</title>
        <dc:creator><![CDATA[rgchris]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="16" data-topic="1506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>a fixed list of words and refinements that sprouted mostly from Carl's head</p>
</blockquote>
</aside>
<p>Why would this particular API be fixed in time?</p>
<p>Are these concerns not addressable if that is the block? I mean, what would do you expect would be done that's not already permissible? Can schemes not reject values/refinements that are not compatible?</p>
          <p><a href="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/17</link>
        <pubDate>Mon, 15 Feb 2021 00:57:14 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1506-17</guid>
        <source url="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506.rss">Non-Network related schemes and URLs</source>
      </item>
      <item>
        <title>Non-Network related schemes and URLs</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="rgchris" data-post="15" data-topic="1506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/rgchris/40/14_2.png" class="avatar"> rgchris:</div>
<blockquote>
<p>As with the verb itself, any refinements can be utilized that apply.</p>
</blockquote>
</aside>
<p>This puts a rather religious level of value on a fixed list of words and refinements that sprouted mostly from Carl's head.  That somehow these words--and these refinements--are going to fit arbitrary variance in interpretation of meaning of the other arguments.</p>
<p>And somehow if you use refinements...and it just ignores them...the caller is going to be okay with that.  Does the fixed list never change?  If something gets added how do you catch the schemes that aren't retrofitted to handle it?</p>
<p>Consider the /LINES refinement on READ...try it on a URL in R3-Alpha.</p>
<blockquote>
<p>documentation could be stored within individual actors, in the scheme itself.</p>
</blockquote>
<p>Type checking becomes pretty much ruled out here, unless you have to parameterize your HELP request with the type of the first parameter to the action.</p>
<p>Otherwise how could you ever rule out any parameter type, if some scheme might take it?</p>
          <p><a href="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/16</link>
        <pubDate>Mon, 15 Feb 2021 00:50:40 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1506-16</guid>
        <source url="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506.rss">Non-Network related schemes and URLs</source>
      </item>
      <item>
        <title>Non-Network related schemes and URLs</title>
        <dc:creator><![CDATA[rgchris]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="14" data-topic="1506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>How can a "generic" operation offer any refinements when semantics are arbitrary for each scheme?</p>
</blockquote>
</aside>
<p>As with the verb itself, any refinements can be utilized that apply.</p>
<aside class="quote no-group" data-username="hostilefork" data-post="14" data-topic="1506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>How can HELP tell you what it does?</p>
</blockquote>
</aside>
<p>This hasn't been implemented, but documentation could be stored within individual actors, in the scheme itself. I don't think you could document a dialect in a HELP string, but then HELP PARSE doesn't tell you how Parse works. I wouldn't see this as a prohibitive or insurmountable.</p>
          <p><a href="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/15</link>
        <pubDate>Mon, 15 Feb 2021 00:38:24 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1506-15</guid>
        <source url="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506.rss">Non-Network related schemes and URLs</source>
      </item>
      <item>
        <title>Non-Network related schemes and URLs</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group quote-modified" data-username="rgchris" data-post="13" data-topic="1506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/rgchris/40/14_2.png" class="avatar"> rgchris:</div>
<blockquote>
<p><code>select db [* from table-x]</code><br>
To me, that is coherent.</p>
</blockquote>
</aside>
<p>If you look at the HELP for R3-Alpha's SELECT it has:</p>
<pre><code>REFINEMENTS:
    /part -- Limits the search to a given length or position
            length (number! series! pair!)
    /only -- Treats a series value as only a single value
    /case -- Characters are case-sensitive
    /any -- Enables the * and ? wildcards
    /with -- Allows custom wildcards
            wild -- Specifies alternates for * and ? (string!)
    /skip -- Treat the series as records of fixed size
            size (integer!)
    /last -- Backwards from end of series
    /reverse -- Backwards from the current position
</code></pre>
<p>How can a "generic" operation offer any refinements when semantics are arbitrary for each scheme?  How can HELP tell you what it does?</p>
          <p><a href="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/14</link>
        <pubDate>Mon, 15 Feb 2021 00:10:29 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1506-14</guid>
        <source url="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506.rss">Non-Network related schemes and URLs</source>
      </item>
      <item>
        <title>Non-Network related schemes and URLs</title>
        <dc:creator><![CDATA[rgchris]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="12" data-topic="1506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>Saying <em>"it's up to the scheme to decide"</em> for everything is a free-for-all. If I can't be sure that <strong>append port-or-url [a b]</strong> is the same thing as <strong>append port-or-url [a]</strong> followed by <strong>append port-or-url [b]</strong>...because "everyone defines append however they want"...then it sets off my alarms for leading to chaos.</p>
</blockquote>
</aside>
<p>I don't think you can squeeze everything into a narrow band of 'this is what <strong>append</strong> does'. Append <em>should</em> mean a certain thing when it comes to Rebol values—strings, blocks, etc.—it has finite semantics, we can document that, write tests for it and be sure we know how it works*. You just can't make the same guarantees with ports because they are domain dependent. Should we come up with a bunch of port-specific or domain-dependent verbs just to maintain that consistency? I'd say that becomes unmanageable. If <strong>append</strong> is the right descriptor for what you are doing to a thing, then it's the right verb.</p>
<p>A loose standard for how you use <a href="https://github.com/r3n/rebol-wiki/wiki/Port-Actors">these verbs</a> work should exist, but it does already—in the relative function specs and in the English meanings of the verbs themselves.</p>
<pre><code class="lang-nohighlight">log: open browser::info
write log "Stuff"
log: open remote://log/location
write log "Stuff"
log: open null://
write log "Stuff"
</code></pre>
<p>What does it matter that each of these schemes 'write' differently or have different outcomes? Why does it disprove the concept when <code>write db-port "Stuff"</code> returns an error? A certain amount of semantics can be gleaned from the type of scheme that you're using. To me there is a lot of lost expressiveness when you're spinning out WRITE-LOG, WRITE-HTTP, WRITE-FILE as separate functions.</p>
<pre><code class="lang-nohighlight">Rebol [
    Title: "My Script"
    Options: [  ; map notation here!!
        log: my://logging/scheme
    ]
]
</code></pre>
<p>I don't know that there's a full accounting of how far this can go, what the possibilities or pitfalls are.</p>
<pre><code class="lang-nohighlight">db: open some://dbms/scheme
select db [* from table-x]
change db [foo: "y" in table-y]
</code></pre>
<p>To me, that is coherent. Do I want to literally insert <code>[foo: "y" in table-y]</code> into the database? No—it's fairly clear from nature of the thing I'm changing that it has a certain effect. It even takes steps toward realising the applicability of Rebol dialects.</p>
<p>I'm not suggesting things are a panacea as-is—layering schemes/ports can get messy, callbacks and servers aren't trivial, events have a read/read, write/wrote problem—but they don't altogether suck.</p>
<aside class="quote no-group" data-username="hostilefork" data-post="12" data-topic="1506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>Remember that nothing has stopped other languages from exploring this format with <strong><code>write("http://example.com/but-its-a-string", xxx)</code></strong>.</p>
</blockquote>
</aside>
<p>Yeah, for sure—I agree, one cannot be closed-minded as to how others are doing things. In totality, the recognition of URLs (and files, for that matter) as first class values, the mapping of those URLs to active schemes (which can be implemented in <a href="https://github.com/metaeducation/ren-c/blob/master/scripts/prot-http.r#L658">different ways</a> on <a href="https://github.com/hostilefork/replpad-js/blob/master/replpad.reb#L395">different platforms</a> to the same or similar effect), the ability to manipulate those derived ports with a standard set of verbs—it does present something different and I'd add compelling.</p>
<hr>
<p>Incidentally, I'd cite the HTTP(S) example of a misleading use of schemes/ports. In trying to make it operate in parity with file schemes, it loses much of the nuances of the exchange. My Rest scheme is an attempt to remedy that, but is limited in its reliance on CALL/CURL and even then is based on a single REQUEST/RESPONSE transaction, it should be a dialogue.</p>
<hr>
<p>*  <em>even then, <strong>append</strong> is comparatively lossy when used on a string vs. block, but we don't have <strong>append-string</strong> and <strong>append-block</strong></em></p>
          <p><a href="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/13</link>
        <pubDate>Sun, 14 Feb 2021 23:41:54 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1506-13</guid>
        <source url="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506.rss">Non-Network related schemes and URLs</source>
      </item>
      <item>
        <title>Non-Network related schemes and URLs</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="rgchris" data-post="1" data-topic="1506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/rgchris/40/14_2.png" class="avatar"> rgchris:</div>
<blockquote>
<p>URLs and Ports represent abstract external resources; schemes offer versatility on how the standard verbs adapt to their domain rather than introducing many domain-specific verb constructions.</p>
</blockquote>
</aside>
<p>I'm glad there's a post to put these ideas out and under scrutiny.  I hope that full fleshed-out examples of schemes and verbs can be presented... <strong>in particular if there are <em>any</em> invariants at all that can be taken for granted.</strong></p>
<p>I become very nervous when there are no invariants.  It makes testing hard, it makes usage hard, and if one is having to actually implement things it can make that implementation impossible to know you've gotten right.  That's an uneasy feeling</p>
<p>Saying <em>"it's up to the scheme to decide"</em> for everything is a free-for-all.  If I can't be sure that <strong>append port-or-url [a b]</strong> is the same thing as <strong>append port-or-url [a]</strong> followed by <strong>append port-or-url [b]</strong>...because "everyone defines append however they want"...then it sets off my alarms for leading to chaos.</p>
<p>Explicit method names that say exactly what's happening are popular for a reason.  (table.addColumn()).  The drift I've seen in schemes is to try pigeon-holing behaviors onto a small set of words, with this adherence to the small word set providing no obvious polymorphism.  The obfuscation strikes me as a net deficit...and if <em>I</em> can't make sense out of it, I don't see how the supposed target audience could.  So I really want us to look critically at this before going "schemes are obviously great!"</p>
<p>Remember that nothing has stopped other languages from exploring this format with <strong><code>write("http://example.com/but-its-a-string", xxx)</code></strong>.  There's no sprinkling of magic dust on it by removing a couple of quote marks and parentheses.  If this were such a world-changing idea...not only would others have done it, but given that they hadn't you'd stand to have a ton of influence by implementing it in their mediums instead of the much-less-popular medium of Rebol.</p>
<hr>
<p>I've said I'm willing to believe that there is value to be mined here.  But my impression is that the value comes from being able to say that certain operations follow a regular formula:</p>
<pre><code>read http://example.com 

; ...is equivalent to...
 
port: open/settings http://example.com [num-reads: 1]
data: wait read-async* port
close port
data
</code></pre>
<p>If we can capture cross-cutting patterns like this, and show a new scheme written that seems to plug into it like magic...then I'd be on board.  I've been pretty consistent in my messaging on asking to see schematics like this.</p>
<p>I've been thinking that piggy-backing whatever these "settings" are for ports on top of the accepted headers standardized in HTTP would be smart.</p>
          <p><a href="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/12</link>
        <pubDate>Sun, 14 Feb 2021 19:34:23 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1506-12</guid>
        <source url="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506.rss">Non-Network related schemes and URLs</source>
      </item>
      <item>
        <title>Non-Network related schemes and URLs</title>
        <dc:creator><![CDATA[BlackATTR]]></dc:creator>
        <description><![CDATA[
            <p>Sometimes we have little to work with to inform decisions. You need to go with something that appears to fit immediate/knowable needs and to resign yourself to the fact that you may need to come back and revise it. A downside of a small user community/installed base is that you're often faced with that former situation, but the latter case means at least you'll face less pushback when make changes.</p>
          <p><a href="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/11</link>
        <pubDate>Sat, 13 Feb 2021 21:42:14 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1506-11</guid>
        <source url="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506.rss">Non-Network related schemes and URLs</source>
      </item>
      <item>
        <title>Non-Network related schemes and URLs</title>
        <dc:creator><![CDATA[rgchris]]></dc:creator>
        <description><![CDATA[
            <p>Not to belabour the point, making good choices now could be beneficial should you want to add nuance later. I always felt <strong>clipboard://</strong> didn't really reflect the type of scheme it was. What then if you want to distinguish the destination clipboard, or you want to expand the functionality so you can say:</p>
<pre><code class="lang-nohighlight">insert open clipboard::general make image! [1x1 #{CCCC99}]</code></pre>
          <p><a href="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/10</link>
        <pubDate>Sat, 13 Feb 2021 21:32:52 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1506-10</guid>
        <source url="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506.rss">Non-Network related schemes and URLs</source>
      </item>
      <item>
        <title>Non-Network related schemes and URLs</title>
        <dc:creator><![CDATA[BlackATTR]]></dc:creator>
        <description><![CDATA[
            <p>Oh, I know. I'm very familiar with them. They are somewhat anomalous, I think. Like functionality which was bolted onto HTML and later smoothed over. (A functionality gap within a DSL, I dare say.)</p>
          <p><a href="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/9</link>
        <pubDate>Sat, 13 Feb 2021 21:25:44 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1506-9</guid>
        <source url="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506.rss">Non-Network related schemes and URLs</source>
      </item>
      <item>
        <title>Non-Network related schemes and URLs</title>
        <dc:creator><![CDATA[rgchris]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="BlackATTR" data-post="7" data-topic="1506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/blackattr/40/204_2.png" class="avatar"> BlackATTR:</div>
<blockquote>
<p>I bet most people do not regard these as standalone URI's in that sense, but kludgey attributes which are technically protocols.</p>
</blockquote>
</aside>
<p>They are well established and defined though: <a href="https://tools.ietf.org/html/rfc2806">tel</a>, <a href="https://tools.ietf.org/html/rfc2368">mailto</a>, <a href="https://tools.ietf.org/html/rfc2397">data</a>, <a href="https://taguri.org/">tag</a>. I'll throw in the <a href="https://url.spec.whatwg.org/">WhatWG URL</a> spec.</p>
          <p><a href="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/8</link>
        <pubDate>Sat, 13 Feb 2021 21:20:40 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1506-8</guid>
        <source url="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506.rss">Non-Network related schemes and URLs</source>
      </item>
      <item>
        <title>Non-Network related schemes and URLs</title>
        <dc:creator><![CDATA[BlackATTR]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="rgchris" data-post="5" data-topic="1506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/rgchris/40/14_2.png" class="avatar"> rgchris:</div>
<blockquote>
<p>I'll cite the <strong>tel:</strong>, <strong>mailto:</strong>, <a href="https://gist.github.com/rgchris/64d0046590a3f28e712ca0d0f5e701bd#file-data-uri-reb"><strong>data:</strong></a> and <a href="http://www.rebol.org/view-script.r?script=parse-taguri.r"><strong>tag:</strong></a> URIs</p>
</blockquote>
</aside>
<p>I bet most people do not regard these as standalone URI's in that sense, but kludgey attributes which are technically protocols.</p>
<p>I'm not a big fan of the <strong>scheme://</strong> notation either due to the typing, and I often mutter about it when I need to write data to the clipboard.</p>
<p>I don't have any great suggestions, unfortunately. I would probably go with what you feel comfortable with and we can see how it feels as the foundation settles.</p>
          <p><a href="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/7</link>
        <pubDate>Sat, 13 Feb 2021 21:14:18 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1506-7</guid>
        <source url="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506.rss">Non-Network related schemes and URLs</source>
      </item>
      <item>
        <title>Non-Network related schemes and URLs</title>
        <dc:creator><![CDATA[rgchris]]></dc:creator>
        <description><![CDATA[
            <p>A great advantage to URLs is that they are universal. If you have a scheme that addresses local storage, you can share that scheme with JavaScript or any language that has a local storage mechanism of that type.</p>
          <p><a href="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/6</link>
        <pubDate>Sat, 13 Feb 2021 21:07:22 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1506-6</guid>
        <source url="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506.rss">Non-Network related schemes and URLs</source>
      </item>
      <item>
        <title>Non-Network related schemes and URLs</title>
        <dc:creator><![CDATA[rgchris]]></dc:creator>
        <description><![CDATA[
            <p>Got it. Another variation that I believe is legal URI syntax (but not currently Rebol) would be:</p>
<pre><code class="lang-nohighlight">write log:(error)
</code></pre>
<aside class="quote no-group" data-username="BlackATTR" data-post="4" data-topic="1506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/blackattr/40/204_2.png" class="avatar"> BlackATTR:</div>
<blockquote>
<p>is inadvertently borrowing Java syntax for invoking methods</p>
</blockquote>
</aside>
<p>Absolutely not borrowing from Java—I resent the insinuation <img src="https://forum.rebol.info/images/emoji/twitter/stuck_out_tongue_winking_eye.png?v=9" title=":stuck_out_tongue_winking_eye:" class="emoji" alt=":stuck_out_tongue_winking_eye:">. Part of my reasoning for the double colon is that it's minimalist, you can add it to source and easily concatenate:</p>
<pre><code class="lang-nohighlight">write join log:: "error"
</code></pre>
<aside class="quote no-group" data-username="BlackATTR" data-post="4" data-topic="1506">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/blackattr/40/204_2.png" class="avatar"> BlackATTR:</div>
<blockquote>
<p><strong>scheme://</strong></p>
</blockquote>
</aside>
<p>Again, I want to avoid having it <em>seem</em> as if it's a protocol of that nature—that form carries with it certain connotations and expectations that I want to avoid. I'll cite the <strong>tel:</strong>, <strong>mailto:</strong>, <a href="https://gist.github.com/rgchris/64d0046590a3f28e712ca0d0f5e701bd#file-data-uri-reb"><strong>data:</strong></a> and <a href="http://www.rebol.org/view-script.r?script=parse-taguri.r"><strong>tag:</strong></a> URIs as examples that don't conform to the networking URL model. I think there's likely a balance here where we can conform to URI standards and create a model for external things that stands apart from the <strong>scheme://user@host:id/path</strong> pattern.</p>
          <p><a href="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/5</link>
        <pubDate>Sat, 13 Feb 2021 21:03:00 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1506-5</guid>
        <source url="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506.rss">Non-Network related schemes and URLs</source>
      </item>
      <item>
        <title>Non-Network related schemes and URLs</title>
        <dc:creator><![CDATA[BlackATTR]]></dc:creator>
        <description><![CDATA[
            <p>Ok. I was reacting to the way I visually read/scan that symbol. And if a symbol has the visual hallmarks of a SET-WORD! yet is technically a URL!, I think it's less intuitive/literate for the reader.</p>
<p>For legibility my vote would be to not deviate from the <strong>scheme://</strong> format if reasonably possible. The scheme:// format is instantly recognizable and easily distinguished from other datatypes. A format like <code>clipboard::general</code> is inadvertently borrowing Java syntax for invoking methods, e.g., <code>System.out::println</code>.</p>
<p>I do think that people/developers get over small syntax differences though.</p>
          <p><a href="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506/4</link>
        <pubDate>Sat, 13 Feb 2021 20:35:04 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1506-4</guid>
        <source url="https://forum.rebol.info/t/non-network-related-schemes-and-urls/1506.rss">Non-Network related schemes and URLs</source>
      </item>
  </channel>
</rss>
