<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>How should timers be implemented in Rebol? Ports? Otherwise?</title>
    <link>https://forum.rebol.info/t/how-should-timers-be-implemented-in-rebol-ports-otherwise/1077</link>
    <description>With port implementations in R3-Alpha, there would be some amount of the port that was in the core.  These would be things like %p-file.c, or %p-net.c.  This would be the same for all platforms.  Then it would make abstract calls into APIs that were implemented per platform.

One file that&#39;s sort of hung around and not been deleted is a bit is the %p-timer.c file.  The most substantive thing in the file is a comment block explaining how it might work:

    t: open timer://name
    write t 10  ; set timer - also allow: 1.23 1:23
    wait t
    clear t     ; reset or delete?
    read t      ; get timer value
    t/awake: func [event] [print &quot;timer!&quot;]

(A comment also said &quot;one-shot vs restart timer&quot;)

That&#39;s pretty much all that&#39;s in the file worth keeping.  I know earl had written up an implementation for it in Windows somewhere (the host kit side of the equation, e.g. not in %p-timer.c).  But I don&#39;t think it ever made it to the rebol/rebol GitHub.

It&#39;s tempting to work on adding it for real, but it&#39;s not a Beta/One priority.  Since I&#39;m deleting the file, I wanted to start this thread as a place for any information about timers anyone wants to add.</description>
    
    <lastBuildDate>Tue, 19 Feb 2019 12:22:47 +0000</lastBuildDate>
    <category>Dialects/DSLs</category>
    <atom:link href="https://forum.rebol.info/t/how-should-timers-be-implemented-in-rebol-ports-otherwise/1077.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>How should timers be implemented in Rebol? Ports? Otherwise?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>With port implementations in R3-Alpha, there would be some amount of the port that was in the core.  These would be things like %p-file.c, or %p-net.c.  This would be the same for all platforms.  Then it would make abstract calls into APIs that were implemented per platform.</p>
<p>One file that's sort of hung around and not been deleted is a bit is the %p-timer.c file.  The most substantive thing in the file is a comment block explaining how it might work:</p>
<pre><code>t: open timer://name
write t 10  ; set timer - also allow: 1.23 1:23
wait t
clear t     ; reset or delete?
read t      ; get timer value
t/awake: func [event] [print "timer!"]
</code></pre>
<p>(A comment also said "one-shot vs restart timer")</p>
<p>That's pretty much all that's in the file worth keeping.  I know earl had written up an implementation for it in Windows somewhere (the host kit side of the equation, e.g. not in %p-timer.c).  But I don't think it ever made it to the rebol/rebol GitHub.</p>
<p>It's tempting to work on adding it for real, but it's not a Beta/One priority.  Since I'm deleting the file, I wanted to start this thread as a place for any information about timers anyone wants to add.</p>
          <p><a href="https://forum.rebol.info/t/how-should-timers-be-implemented-in-rebol-ports-otherwise/1077/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/how-should-timers-be-implemented-in-rebol-ports-otherwise/1077/1</link>
        <pubDate>Tue, 19 Feb 2019 10:14:00 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1077-1</guid>
        <source url="https://forum.rebol.info/t/how-should-timers-be-implemented-in-rebol-ports-otherwise/1077.rss">How should timers be implemented in Rebol? Ports? Otherwise?</source>
      </item>
  </channel>
</rss>
