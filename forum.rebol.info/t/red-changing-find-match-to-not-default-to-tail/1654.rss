<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Red changing FIND/MATCH to not default to /TAIL</title>
    <link>https://forum.rebol.info/t/red-changing-find-match-to-not-default-to-tail/1654</link>
    <description>Historically, the /MATCH option to FIND has implied returning the tail of the matched region.

    rebol2&gt;&gt; find/match &quot;abc&quot; &quot;ab&quot;
    == &quot;c&quot;

That has been true despite the fact that there is a /TAIL option to FIND.  In trying to make FIND more orthogonal I have questioned this decision.

**[Red has made the move to say you have to provide /TAIL with /MATCH, otherwise you get the head of the match](https://github.com/red/red/issues/4943)**.  So now:

    red&gt;&gt; find/match &quot;abc&quot; &quot;ab&quot;
    == &quot;abc&quot;

    red&gt;&gt; find/match/tail &quot;abc&quot; &quot;ab&quot;
    == &quot;c&quot;

I can agree with the intent behind this, although I wonder if it should accompany a changing of the refinement name.  /MATCH doesn&#39;t really fit with the meaning of &quot;match&quot; as I&#39;ve been using it, e.g.

    &gt;&gt; match integer! 10
    == 10

    &gt;&gt; match integer! &lt;abc&gt;
    ; null

So maybe something like FIND/AT or FIND/STAY or FIND/HERE...something along those lines.  Then /MATCH could be deprecated in a more structured way.

But nope... they&#39;re pro breaking this for some reason.  Who am I to argue, especially given that I wanted it changed anyway?

It does underscore that Redbol emulation will need Red and Bol modes.  :-(</description>
    
    <lastBuildDate>Thu, 12 Aug 2021 06:52:35 +0000</lastBuildDate>
    <category>Redbol</category>
    <atom:link href="https://forum.rebol.info/t/red-changing-find-match-to-not-default-to-tail/1654.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Red changing FIND/MATCH to not default to /TAIL</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>Historically, the /MATCH option to FIND has implied returning the tail of the matched region.</p>
<pre><code>rebol2&gt;&gt; find/match "abc" "ab"
== "c"
</code></pre>
<p>That has been true despite the fact that there is a /TAIL option to FIND.  In trying to make FIND more orthogonal I have questioned this decision.</p>
<p><strong><a href="https://github.com/red/red/issues/4943">Red has made the move to say you have to provide /TAIL with /MATCH, otherwise you get the head of the match</a></strong>.  So now:</p>
<pre><code>red&gt;&gt; find/match "abc" "ab"
== "abc"

red&gt;&gt; find/match/tail "abc" "ab"
== "c"
</code></pre>
<p>I can agree with the intent behind this, although I wonder if it should accompany a changing of the refinement name.  /MATCH doesn't really fit with the meaning of "match" as I've been using it, e.g.</p>
<pre><code>&gt;&gt; match integer! 10
== 10

&gt;&gt; match integer! &lt;abc&gt;
; null
</code></pre>
<p>So maybe something like FIND/AT or FIND/STAY or FIND/HERE...something along those lines.  Then /MATCH could be deprecated in a more structured way.</p>
<p>But nope... they're pro breaking this for some reason.  Who am I to argue, especially given that I wanted it changed anyway?</p>
<p>It does underscore that Redbol emulation will need Red and Bol modes.  <img src="https://forum.rebol.info/images/emoji/twitter/frowning.png?v=9" title=":frowning:" class="emoji" alt=":frowning:"></p>
          <p><a href="https://forum.rebol.info/t/red-changing-find-match-to-not-default-to-tail/1654/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/red-changing-find-match-to-not-default-to-tail/1654/1</link>
        <pubDate>Thu, 12 Aug 2021 06:52:35 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1654-1</guid>
        <source url="https://forum.rebol.info/t/red-changing-find-match-to-not-default-to-tail/1654.rss">Red changing FIND/MATCH to not default to /TAIL</source>
      </item>
  </channel>
</rss>
