<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Running URLs from the command line</title>
    <link>https://forum.rebol.info/t/running-urls-from-the-command-line/1764</link>
    <description>I thought it would be neat to try out the new [decorated URL redirection](https://forum.rebol.info/t/do-or-import-of-github-gitlab-decorated-urls-on-desktop/1761) in the console, by running a URL!.  So I tried:

&gt; `r3 https://github.com/metaeducation/rebol-odbc/blob/master/tests/odbc-test.reb rebol-firebird --firebird`

This didn&#39;t give me what I wanted:

    ** Access Error: cannot open: %/https/github.com/metaeducation/rebol-odbc/blob/master/tests/odbc-test.reb

## It Thought That Was A Filename...

And oddly enough, it could have been.

On Linux, you can make a directory called **`https:`**.  Double slashes are collapsed to assume you meant a single slash.  It could be interpreted as a path.

## We Should Default This To Treating It As A URL

I think it&#39;s pretty obvious that should be running a script from a network location.  But if people want a file interpretation there should be a way to do that.  Should we let the % character disambiguate it?

    r3 %http://example.com/script.r

If so, how to deal with files that actually start with %?  %%?

Or maybe something like:

    r3 --file http://example.com/script.r

In any case, it&#39;s not entirely clear what program logic we should use here to interpret this.  Do we explicitly try to see if something can LOAD as a URL! and if not, assume it&#39;s a filename?  Do we look more narrowly for alphanumerics followed by a colon?  Special cases for http and https only, for now?

I&#39;m hacking in the alphanumerics followed by colon.  But the edge case of a &quot;weird&quot; filename should be tended to someday.</description>
    
    <lastBuildDate>Wed, 01 Dec 2021 23:19:15 +0000</lastBuildDate>
    <category>Console</category>
    <atom:link href="https://forum.rebol.info/t/running-urls-from-the-command-line/1764.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Running URLs from the command line</title>
        <dc:creator><![CDATA[IngoHohmann]]></dc:creator>
        <description><![CDATA[
            <p>Adding one more % than there are at the start of the filename would be possible.</p>
<p>I vote for out of band signalling with --file and --url respectively.</p>
          <p><a href="https://forum.rebol.info/t/running-urls-from-the-command-line/1764/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/running-urls-from-the-command-line/1764/2</link>
        <pubDate>Wed, 01 Dec 2021 23:19:15 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1764-2</guid>
        <source url="https://forum.rebol.info/t/running-urls-from-the-command-line/1764.rss">Running URLs from the command line</source>
      </item>
      <item>
        <title>Running URLs from the command line</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>I thought it would be neat to try out the new <a href="https://forum.rebol.info/t/do-or-import-of-github-gitlab-decorated-urls-on-desktop/1761">decorated URL redirection</a> in the console, by running a URL!.  So I tried:</p>
<blockquote>
<p><code>r3 https://github.com/metaeducation/rebol-odbc/blob/master/tests/odbc-test.reb rebol-firebird --firebird</code></p>
</blockquote>
<p>This didn't give me what I wanted:</p>
<pre><code>** Access Error: cannot open: %/https/github.com/metaeducation/rebol-odbc/blob/master/tests/odbc-test.reb
</code></pre>
<h2>It Thought That Was A Filename...</h2>
<p>And oddly enough, it could have been.</p>
<p>On Linux, you can make a directory called <strong><code>https:</code></strong>.  Double slashes are collapsed to assume you meant a single slash.  It could be interpreted as a path.</p>
<h2>We Should Default This To Treating It As A URL</h2>
<p>I think it's pretty obvious that should be running a script from a network location.  But if people want a file interpretation there should be a way to do that.  Should we let the % character disambiguate it?</p>
<pre><code>r3 %http://example.com/script.r
</code></pre>
<p>If so, how to deal with files that actually start with %?  %%?</p>
<p>Or maybe something like:</p>
<pre><code>r3 --file http://example.com/script.r
</code></pre>
<p>In any case, it's not entirely clear what program logic we should use here to interpret this.  Do we explicitly try to see if something can LOAD as a URL! and if not, assume it's a filename?  Do we look more narrowly for alphanumerics followed by a colon?  Special cases for http and https only, for now?</p>
<p>I'm hacking in the alphanumerics followed by colon.  But the edge case of a "weird" filename should be tended to someday.</p>
          <p><a href="https://forum.rebol.info/t/running-urls-from-the-command-line/1764/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/running-urls-from-the-command-line/1764/1</link>
        <pubDate>Wed, 01 Dec 2021 14:04:22 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1764-1</guid>
        <source url="https://forum.rebol.info/t/running-urls-from-the-command-line/1764.rss">Running URLs from the command line</source>
      </item>
  </channel>
</rss>
