<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Loading Blazor and Ren-C Wasm in the Same Page</title>
    <link>https://forum.rebol.info/t/loading-blazor-and-ren-c-wasm-in-the-same-page/1611</link>
    <description>So I&#39;m cleaning some files off of a laptop that I&#39;m giving my mom (in preparation for the moment when I get around to picking a new one to buy, whenever that happens).

One file I had just on this laptop pertained to getting Blazor to load a Ren-C interpreter.  The only big deal was that some programs built with emscripten (like Blazor itself) do not play friendly with other emscripten programs loaded in the same page.  The Wasm build is now done so that it moves itself out of the way.  As a consequence, the loading just works about like any other &quot;calling JS from Blazor&quot; works.

There&#39;s really nothing to see in loading the two into the same page.  There&#39;s a Blazor-related `&lt;script&gt;` tag and a Ren-C-related `&lt;script&gt;` tag.  I didn&#39;t publish it because I didn&#39;t put together a meaningful demo once the two were loaded, but I wanted to put this somewhere before letting go of the laptop.

**The more unique level of integration would be to be able to call Ren-C directly from C# / .NET built for Wasm without needing to go through a JavaScript bridge.**  But, getting them loading in the same page was a necessary but sufficient precondition for that.

For whatever it is worth, here is an index.html that loads both libraries, which you can call from JS (and you can call Ren-C from the JS bridge inside Blazor, and Blazor from Ren-C via the Blazor API exposed as JS):

    &lt;!DOCTYPE html&gt;
    &lt;html&gt;

    &lt;head&gt;
        &lt;meta charset=&quot;utf-8&quot; /&gt;
        &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no&quot; /&gt;
        &lt;title&gt;Test Ren-C Integration&lt;/title&gt;
        &lt;base href=&quot;/&quot; /&gt;
        &lt;link href=&quot;css/bootstrap/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; /&gt;
        &lt;link href=&quot;css/app.css&quot; rel=&quot;stylesheet&quot; /&gt;
    &lt;/head&gt;

    &lt;body&gt;
        &lt;app&gt;Loading...&lt;/app&gt;

        &lt;div id=&quot;blazor-error-ui&quot;&gt;
            An unhandled error has occurred.
            &lt;a href=&quot;&quot; class=&quot;reload&quot;&gt;Reload&lt;/a&gt;
            &lt;a class=&quot;dismiss&quot;&gt;ðŸ—™&lt;/a&gt;
        &lt;/div&gt;

        &lt;!-- Disable &quot;autostart&quot; so we can put a .then() on Blazor.start() --&gt;
        &lt;!-- https://github.com/dotnet/aspnetcore/issues/17504 --&gt;
        &lt;script src=&quot;_framework/blazor.webassembly.js&quot; autostart=&quot;false&quot;&gt;&lt;/script&gt;

        &lt;!-- The Ren-C interpreter loader for WebAssembly --&gt;
        &lt;script src=&quot;https://metaeducation.s3.amazonaws.com/travis-builds/load-r3.js&quot;&gt;&lt;/script&gt;
        &lt;script&gt;
            Blazor.start({}).then(() =&gt; {
                alert(&quot;blazor says its loaded?&quot;)

                reb.Startup({tracing_on: true}).then(() =&gt; {
                    alert(&quot;Rebol says its loaded?&quot;)
                })
            });
        &lt;/script&gt;
    &lt;/body&gt;

    &lt;/html&gt;</description>
    
    <lastBuildDate>Tue, 18 May 2021 13:05:23 +0000</lastBuildDate>
    <category>Language Bridging</category>
    <atom:link href="https://forum.rebol.info/t/loading-blazor-and-ren-c-wasm-in-the-same-page/1611.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Loading Blazor and Ren-C Wasm in the Same Page</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>So I'm cleaning some files off of a laptop that I'm giving my mom (in preparation for the moment when I get around to picking a new one to buy, whenever that happens).</p>
<p>One file I had just on this laptop pertained to getting Blazor to load a Ren-C interpreter.  The only big deal was that some programs built with emscripten (like Blazor itself) do not play friendly with other emscripten programs loaded in the same page.  The Wasm build is now done so that it moves itself out of the way.  As a consequence, the loading just works about like any other "calling JS from Blazor" works.</p>
<p>There's really nothing to see in loading the two into the same page.  There's a Blazor-related <code>&lt;script&gt;</code> tag and a Ren-C-related <code>&lt;script&gt;</code> tag.  I didn't publish it because I didn't put together a meaningful demo once the two were loaded, but I wanted to put this somewhere before letting go of the laptop.</p>
<p><strong>The more unique level of integration would be to be able to call Ren-C directly from C# / .NET built for Wasm without needing to go through a JavaScript bridge.</strong>  But, getting them loading in the same page was a necessary but sufficient precondition for that.</p>
<p>For whatever it is worth, here is an index.html that loads both libraries, which you can call from JS (and you can call Ren-C from the JS bridge inside Blazor, and Blazor from Ren-C via the Blazor API exposed as JS):</p>
<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;

&lt;head&gt;
    &lt;meta charset="utf-8" /&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" /&gt;
    &lt;title&gt;Test Ren-C Integration&lt;/title&gt;
    &lt;base href="/" /&gt;
    &lt;link href="css/bootstrap/bootstrap.min.css" rel="stylesheet" /&gt;
    &lt;link href="css/app.css" rel="stylesheet" /&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;app&gt;Loading...&lt;/app&gt;

    &lt;div id="blazor-error-ui"&gt;
        An unhandled error has occurred.
        &lt;a href="" class="reload"&gt;Reload&lt;/a&gt;
        &lt;a class="dismiss"&gt;ðŸ—™&lt;/a&gt;
    &lt;/div&gt;

    &lt;!-- Disable "autostart" so we can put a .then() on Blazor.start() --&gt;
    &lt;!-- https://github.com/dotnet/aspnetcore/issues/17504 --&gt;
    &lt;script src="_framework/blazor.webassembly.js" autostart="false"&gt;&lt;/script&gt;

    &lt;!-- The Ren-C interpreter loader for WebAssembly --&gt;
    &lt;script src="https://metaeducation.s3.amazonaws.com/travis-builds/load-r3.js"&gt;&lt;/script&gt;
    &lt;script&gt;
        Blazor.start({}).then(() =&gt; {
            alert("blazor says its loaded?")

            reb.Startup({tracing_on: true}).then(() =&gt; {
                alert("Rebol says its loaded?")
            })
        });
    &lt;/script&gt;
&lt;/body&gt;

&lt;/html&gt;</code></pre>
          <p><a href="https://forum.rebol.info/t/loading-blazor-and-ren-c-wasm-in-the-same-page/1611/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/loading-blazor-and-ren-c-wasm-in-the-same-page/1611/1</link>
        <pubDate>Tue, 18 May 2021 13:05:23 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1611-1</guid>
        <source url="https://forum.rebol.info/t/loading-blazor-and-ren-c-wasm-in-the-same-page/1611.rss">Loading Blazor and Ren-C Wasm in the Same Page</source>
      </item>
  </channel>
</rss>
