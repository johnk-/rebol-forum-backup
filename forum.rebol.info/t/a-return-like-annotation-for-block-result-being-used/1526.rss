<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>A RETURN-like annotation for block result being used</title>
    <link>https://forum.rebol.info/t/a-return-like-annotation-for-block-result-being-used/1526</link>
    <description>There&#39;s a situation I run into often where I&#39;m looking at long bunches of code where a value is being calculated to be used in a long expression, like THING and OTHER-THING below:

    result: case [
        ...something... [
            if condition [
                ...bunch of code...
                thing
            ] else [
                ...bunch of code...
                other-thing
            ]
        ]
        ...
    ]

Ultimately, the value is getting stored in RESULT.  But it can be hard to make that connection, when this is scrolled across a lot of pages.

I&#39;ve thought it would be nice to have an annotation that helps to say &quot;this is a used result&quot;...kind of the way that having a RETURN statement on the last line of a function isn&#39;t *technically* necessary, but helps you realize that the last line has a meaningful return value.  *(I still am personally conflicted over [whether or not to require RETURN if you want a value back](https://forum.rebol.info/t/how-attached-are-we-to-functions-return-last-result/1219).)*

Long ago, I tried using left arrow as a comment to say &quot;this value is used&quot;

    result: case [
        ...something... [
            if condition [
                ...bunch of code...
                &lt;- thing
            ] else [
                ...bunch of code...
                &lt;- other-thing
            ]
        ]
        ...
    ]

Kind of a waste of the symbol for a no-op, though.

There might be some strange idiom, like leading comma on the result line to say &quot;oh, and this is the result&quot;

    result: case [
        ...something... [
            if condition [
                ...bunch of code...
                , thing
            ] else [
                ...bunch of code...
                , other-thing
            ]
        ]
        ...
    ]

Anyway, my discomfort with how easily the important &quot;result&quot; parts vanish into the overall code means this comes up a lot.  You can use comments of course:

    result: case [
        ...something... [
            if condition [
                ...bunch of code...
                thing  ; -&gt; result
            ] else [
                ...bunch of code...
                other-thing  ; -&gt; result
            ]
        ]
        ...
    ]</description>
    
    <lastBuildDate>Fri, 26 Feb 2021 08:02:45 +0000</lastBuildDate>
    <category>Naming</category>
    <atom:link href="https://forum.rebol.info/t/a-return-like-annotation-for-block-result-being-used/1526.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>A RETURN-like annotation for block result being used</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>There's a situation I run into often where I'm looking at long bunches of code where a value is being calculated to be used in a long expression, like THING and OTHER-THING below:</p>
<pre><code>result: case [
    ...something... [
        if condition [
            ...bunch of code...
            thing
        ] else [
            ...bunch of code...
            other-thing
        ]
    ]
    ...
]
</code></pre>
<p>Ultimately, the value is getting stored in RESULT.  But it can be hard to make that connection, when this is scrolled across a lot of pages.</p>
<p>I've thought it would be nice to have an annotation that helps to say "this is a used result"...kind of the way that having a RETURN statement on the last line of a function isn't <em>technically</em> necessary, but helps you realize that the last line has a meaningful return value.  <em>(I still am personally conflicted over <a href="https://forum.rebol.info/t/how-attached-are-we-to-functions-return-last-result/1219">whether or not to require RETURN if you want a value back</a>.)</em></p>
<p>Long ago, I tried using left arrow as a comment to say "this value is used"</p>
<pre><code>result: case [
    ...something... [
        if condition [
            ...bunch of code...
            &lt;- thing
        ] else [
            ...bunch of code...
            &lt;- other-thing
        ]
    ]
    ...
]
</code></pre>
<p>Kind of a waste of the symbol for a no-op, though.</p>
<p>There might be some strange idiom, like leading comma on the result line to say "oh, and this is the result"</p>
<pre><code>result: case [
    ...something... [
        if condition [
            ...bunch of code...
            , thing
        ] else [
            ...bunch of code...
            , other-thing
        ]
    ]
    ...
]
</code></pre>
<p>Anyway, my discomfort with how easily the important "result" parts vanish into the overall code means this comes up a lot.  You can use comments of course:</p>
<pre><code>result: case [
    ...something... [
        if condition [
            ...bunch of code...
            thing  ; -&gt; result
        ] else [
            ...bunch of code...
            other-thing  ; -&gt; result
        ]
    ]
    ...
]</code></pre>
          <p><a href="https://forum.rebol.info/t/a-return-like-annotation-for-block-result-being-used/1526/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/a-return-like-annotation-for-block-result-being-used/1526/1</link>
        <pubDate>Fri, 26 Feb 2021 08:02:45 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1526-1</guid>
        <source url="https://forum.rebol.info/t/a-return-like-annotation-for-block-result-being-used/1526.rss">A RETURN-like annotation for block result being used</source>
      </item>
  </channel>
</rss>
