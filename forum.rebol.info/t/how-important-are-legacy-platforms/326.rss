<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>How Important Are Legacy Platforms?</title>
    <link>https://forum.rebol.info/t/how-important-are-legacy-platforms/326</link>
    <description>The historical archive of Rebol releases are here for versions 1.5 and 2.4

http://rebol.com/release-archive.html

I&#39;ve consolidated some notes on them in the build &quot;memoizations&quot; in %systems.r:

[%systems.r](https://github.com/hostilefork/rebol/blob/4898712bc4798c4f83bc419651c7b7adb524f200/src/tools/systems.r)

One thing that is easily noticed is how many builds were never mentioned in R3-Alpha&#39;s makefiles.

As someone with an interest in emulators/simulators and things of that sort, the idea that a platform is &quot;dead&quot; doesn&#39;t necessarily mean you shouldn&#39;t tinker with it.  A lot of people are curious about getting software running on legacy systems, it&#39;s an interesting stunt.  One that still brings in some interest...even sometimes, money (?)

https://www.kickstarter.com/projects/1812249267/shenzhen-solitaire-for-ms-dos

I thought given the Amiga&#39;s history--for instance--it would be a particularly interesting thing to run modern Rebol on.  That never came together, but we did get it on Haiku.  And for the lulz, I built it for Syllable as well.

The main reason I think it&#39;s still worthwhile to hold the line and stay building on older platforms is really about trying to stay true to the idea that it&#39;s a language that tries to reign in *total footprint*.  That means measuring not just the size of the interpreter, but the size of the toolchain used to build that interpreter.  One advantage of building on old platforms is you don&#39;t have to invent a fake small system to help prove your point of footprint, you use a system that people have in the past used for real work.

But, how many of those do we need?  Did R3-Alpha basically cull all the uninteresting systems?

Basically I&#39;m wondering if there are feelings anyone has about this.  Is FreeBSD/OpenBSD pointless?  How about QNX?  Should the makefiles just drop mention of some things, and they not be taken into account going forward?  Does anyone see a platform they are interested in enough to try tinkering to see if it works, and then outreach to that community to see if they care?</description>
    
    <lastBuildDate>Thu, 10 Jan 2019 22:59:16 +0000</lastBuildDate>
    <category>Philosophy</category>
    <atom:link href="https://forum.rebol.info/t/how-important-are-legacy-platforms/326.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>How Important Are Legacy Platforms?</title>
        <dc:creator><![CDATA[LkpPo]]></dc:creator>
        <description><![CDATA[
            <p>It's a work in progress. Some professional obligations and the delivery of another free software of which I am responsible oblige me to postpone for February, being realistic.</p>
          <p><a href="https://forum.rebol.info/t/how-important-are-legacy-platforms/326/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/how-important-are-legacy-platforms/326/7</link>
        <pubDate>Thu, 10 Jan 2019 22:59:16 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-326-7</guid>
        <source url="https://forum.rebol.info/t/how-important-are-legacy-platforms/326.rss">How Important Are Legacy Platforms?</source>
      </item>
      <item>
        <title>How Important Are Legacy Platforms?</title>
        <dc:creator><![CDATA[gchiu]]></dc:creator>
        <description><![CDATA[
            <p>Any luck on the OpenBSD build?</p>
          <p><a href="https://forum.rebol.info/t/how-important-are-legacy-platforms/326/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/how-important-are-legacy-platforms/326/6</link>
        <pubDate>Thu, 10 Jan 2019 18:42:21 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-326-6</guid>
        <source url="https://forum.rebol.info/t/how-important-are-legacy-platforms/326.rss">How Important Are Legacy Platforms?</source>
      </item>
      <item>
        <title>How Important Are Legacy Platforms?</title>
        <dc:creator><![CDATA[LkpPo]]></dc:creator>
        <description><![CDATA[
            <p>I use Windows and Debian. I will try a build on OpenBSD, provided I'm migrating on this system instead of Debian.</p>
<p>OpenBSD and Debian also support a lot of odd architectures. The reason is a way to identify vicious bugs that pops only because you write a system for a single architecture, so you don't code for a special case. It prevents the "limit cases".</p>
          <p><a href="https://forum.rebol.info/t/how-important-are-legacy-platforms/326/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/how-important-are-legacy-platforms/326/5</link>
        <pubDate>Sat, 29 Dec 2018 21:18:30 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-326-5</guid>
        <source url="https://forum.rebol.info/t/how-important-are-legacy-platforms/326.rss">How Important Are Legacy Platforms?</source>
      </item>
      <item>
        <title>How Important Are Legacy Platforms?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="2" data-topic="326">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="//forum.rebol.info/user_avatar/forum.rebol.info/gchiu/40/22_2.png" class="avatar"> gchiu:</div>
<blockquote>
<p>no point at all building for systems ( which means also providing a place to store the builds ) if there are no users.</p>
</blockquote>
</aside>
<p>There's some excess verbiage I added to %host-main.c to explain that it's possible to tell the windows.h file what your minimum targeted version of windows is.  In theory, that should give you errors at compile time if you use an API that is "too new":</p>
<pre><code>//
// On Windows it is required to include &lt;windows.h&gt;, and defining the
// _WIN32_WINNT constant to 0x0501 specifies the minimum targeted version
// is Windows XP.  This is the earliest platform API still supported by
// Visual Studio 2015:
//
//     https://msdn.microsoft.com/en-us/library/6sehtctf.aspx
//
// R3-Alpha used 0x0500, indicating a minimum target of Windows 2000.  No
// Windows-XP-specific dependencies were added in Ren-C, but the version
// was bumped to avoid compilation errors in the common case.
//
#undef _WIN32_WINNT
#define _WIN32_WINNT 0x0501
#include &lt;windows.h&gt;
</code></pre>
<p>I'm moving it here for archival records.  But I think I can skip saying all that and just <code>#include &lt;windows.h&gt;</code> like literally every other project does.</p>
<p>First, I'm skeptical Microsoft is careful about making sure a modern MSVC builds EXEs that run on old systems.  The only way you'll know when you compile with something like Visual Studio 2017 if your executable will run on Windows XP is to try it.  There's a lot of reasons it might not work...and if someone is going to want to keep things running there it's going to be an effort to make sure it is.</p>
<p>Plus there aren't any Windows includes in the interpreter core.  And with the API you can now make a bare-bones standard I/O console on any system.  There are enough controls for making sure the language itself isn't getting out-of-hand dependent on modern Windows APIs.  If you need to compile on Windows 95 or whatever you'll be able to.</p>
<p>UPDATE: Okay, I keep the define but I link here for reference of what it's about...and the relevant conversation about how much work actually needs to be done about this.</p>
          <p><a href="https://forum.rebol.info/t/how-important-are-legacy-platforms/326/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/how-important-are-legacy-platforms/326/4</link>
        <pubDate>Wed, 31 Oct 2018 06:48:57 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-326-4</guid>
        <source url="https://forum.rebol.info/t/how-important-are-legacy-platforms/326.rss">How Important Are Legacy Platforms?</source>
      </item>
      <item>
        <title>How Important Are Legacy Platforms?</title>
        <dc:creator><![CDATA[rgchris]]></dc:creator>
        <description><![CDATA[
            <p>Amiga is do-or-die. <img src="//forum.rebol.info/images/emoji/twitter/stuck_out_tongue.png?v=7" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          <p><a href="https://forum.rebol.info/t/how-important-are-legacy-platforms/326/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/how-important-are-legacy-platforms/326/3</link>
        <pubDate>Mon, 09 Oct 2017 21:49:19 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-326-3</guid>
        <source url="https://forum.rebol.info/t/how-important-are-legacy-platforms/326.rss">How Important Are Legacy Platforms?</source>
      </item>
      <item>
        <title>How Important Are Legacy Platforms?</title>
        <dc:creator><![CDATA[gchiu]]></dc:creator>
        <description><![CDATA[
            <p>There has to be a point to all of this .. no point at all building for systems ( which means also providing a place to store the builds ) if there are no users.  Then it becomes sort of a vanity project.</p>
          <p><a href="https://forum.rebol.info/t/how-important-are-legacy-platforms/326/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/how-important-are-legacy-platforms/326/2</link>
        <pubDate>Sat, 07 Oct 2017 04:43:50 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-326-2</guid>
        <source url="https://forum.rebol.info/t/how-important-are-legacy-platforms/326.rss">How Important Are Legacy Platforms?</source>
      </item>
      <item>
        <title>How Important Are Legacy Platforms?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>The historical archive of Rebol releases are here for versions 1.5 and 2.4</p>
<aside class="onebox allowlistedgeneric">
  <header class="source">
      <a href="http://rebol.com/release-archive.html" target="_blank" rel="noopener">rebol.com</a>
  </header>
  <article class="onebox-body">
    <img src="" class="thumbnail" width="" height="">

<h3><a href="http://rebol.com/release-archive.html" target="_blank" rel="noopener">REBOL Release Archive</a></h3>



  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p>I've consolidated some notes on them in the build "memoizations" in %systems.r:</p>
<p><a href="https://github.com/hostilefork/rebol/blob/4898712bc4798c4f83bc419651c7b7adb524f200/src/tools/systems.r">%systems.r</a></p>
<p>One thing that is easily noticed is how many builds were never mentioned in R3-Alpha's makefiles.</p>
<p>As someone with an interest in emulators/simulators and things of that sort, the idea that a platform is "dead" doesn't necessarily mean you shouldn't tinker with it.  A lot of people are curious about getting software running on legacy systems, it's an interesting stunt.  One that still brings in some interest...even sometimes, money (?)</p>
<aside class="onebox allowlistedgeneric">
  <header class="source">
      <a href="https://www.kickstarter.com/projects/1812249267/shenzhen-solitaire-for-ms-dos" target="_blank" rel="noopener">Kickstarter</a>
  </header>
  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:690/388;"><img src="https://ksr-ugc.imgix.net/assets/017/998/567/5af4d3bf37eb4c1012d7e38c2e638b6a_original.jpg?ixlib=rb-2.1.0&amp;crop=faces&amp;w=1552&amp;h=873&amp;fit=crop&amp;v=1503273007&amp;auto=format&amp;frame=1&amp;q=92&amp;s=45e351154f2ca77bdf3c0f21d1fb30cb" class="thumbnail" width="690" height="388"></div>

<h3><a href="https://www.kickstarter.com/projects/1812249267/shenzhen-solitaire-for-ms-dos" target="_blank" rel="noopener">SHENZHEN SOLITAIRE for MS-DOS</a></h3>

<p>SHENZHEN SOLITAIRE for MS-DOS, shipped to you on a signed 3.5" floppy disk! Requires a 386 or better with 640 kB RAM, VGA, and a mouse.</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p>I thought given the Amiga's history--for instance--it would be a particularly interesting thing to run modern Rebol on.  That never came together, but we did get it on Haiku.  And for the lulz, I built it for Syllable as well.</p>
<p>The main reason I think it's still worthwhile to hold the line and stay building on older platforms is really about trying to stay true to the idea that it's a language that tries to reign in <em>total footprint</em>.  That means measuring not just the size of the interpreter, but the size of the toolchain used to build that interpreter.  One advantage of building on old platforms is you don't have to invent a fake small system to help prove your point of footprint, you use a system that people have in the past used for real work.</p>
<p>But, how many of those do we need?  Did R3-Alpha basically cull all the uninteresting systems?</p>
<p>Basically I'm wondering if there are feelings anyone has about this.  Is FreeBSD/OpenBSD pointless?  How about QNX?  Should the makefiles just drop mention of some things, and they not be taken into account going forward?  Does anyone see a platform they are interested in enough to try tinkering to see if it works, and then outreach to that community to see if they care?</p>
          <p><a href="https://forum.rebol.info/t/how-important-are-legacy-platforms/326/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/how-important-are-legacy-platforms/326/1</link>
        <pubDate>Sat, 07 Oct 2017 02:33:19 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-326-1</guid>
        <source url="https://forum.rebol.info/t/how-important-are-legacy-platforms/326.rss">How Important Are Legacy Platforms?</source>
      </item>
  </channel>
</rss>
