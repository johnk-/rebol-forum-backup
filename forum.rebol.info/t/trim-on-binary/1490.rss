<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>TRIM on BINARY!</title>
    <link>https://forum.rebol.info/t/trim-on-binary/1490</link>
    <description>What should one expect when trying TRIM on a binary value. I see right off the bat that it doesn&#39;t have any effect:

```plain
test: #{2046206F0A6F200A20}
equal? test trim copy test
```

Ah, well—that&#39;s too bad. This is at odds with the Rebol 2 function that treats whitespace in binary the same as in text.

Hold on though—it does work with TRIM/WITH:

```plain
&gt;&gt; trim/with copy test #{20}  
== #{46206F0A6F200A}

&gt;&gt; trim/with copy test #{200A} 
== #{46206F0A6F}

&gt;&gt; trim/with copy test #{0A20} 
== #{46206F0A6F}

&gt;&gt; trim/all/with copy test #{0A20}
== #{466F6F}

&gt;&gt; trim/head/tail/with copy test #{0A20}
== #{46206F0A6F}
```

This is all as I&#39;d expect it.

I want to be certain if this is by design—there seems significant deviation on how this works between Rebol 2, Red, Rebol 3 Alpha and Ren-C. To be clear—I like the above behaviour on first glance.</description>
    
    <lastBuildDate>Sat, 06 Feb 2021 12:16:02 +0000</lastBuildDate>
    <category>Datatypes</category>
    <atom:link href="https://forum.rebol.info/t/trim-on-binary/1490.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>TRIM on BINARY!</title>
        <dc:creator><![CDATA[rgchris]]></dc:creator>
        <description><![CDATA[
            <p>I don't see any need to change it, except maybe to throw an error without WITH</p>
          <p><a href="https://forum.rebol.info/t/trim-on-binary/1490/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/trim-on-binary/1490/4</link>
        <pubDate>Sat, 06 Feb 2021 12:16:02 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1490-4</guid>
        <source url="https://forum.rebol.info/t/trim-on-binary/1490.rss">TRIM on BINARY!</source>
      </item>
      <item>
        <title>TRIM on BINARY!</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <blockquote>
<p>This is at odds with the Rebol 2 function that treats whitespace in binary the same as in text.</p>
</blockquote>
<p>I think that viewing things through the lens of BINARY! should mean the information not be assumed as text.  It's one thing if you do a FIND or PARSE on a BINARY! which is parameterized with TEXT! explicitly...at which point exploiting the fact that text has a binary conversion is one thing.  But most operations should not assume you'd want to do text-like things unless you ask.</p>
<p>The word TRIM doesn't seem like "a fundamentally texty word" to me.  So whitespace as a default doesn't feel like a good fit.  If any default makes sense, it would be #{00}...but I can't tell if that makes more sense than no default.  Maybe erroring is better than passing it through, with the option of BLANK! to opt-out?</p>
<p>I'll point out that <a href="https://github.com/metaeducation/ren-c/blob/da0061b575c9f3525b358416ca4cb21468b15832/src/mezz/base-series.r#L126">Brett made TRIM a userspace function</a>, so any design changes can be hammered out without writing C code.  It hasn't been looked at in a long time, so review would be good.</p>
          <p><a href="https://forum.rebol.info/t/trim-on-binary/1490/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/trim-on-binary/1490/3</link>
        <pubDate>Sat, 06 Feb 2021 06:44:41 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1490-3</guid>
        <source url="https://forum.rebol.info/t/trim-on-binary/1490.rss">TRIM on BINARY!</source>
      </item>
      <item>
        <title>TRIM on BINARY!</title>
        <dc:creator><![CDATA[rgchris]]></dc:creator>
        <description><![CDATA[
            <p>I see a few issues on this score:</p>
<ul>
<li>
<p><a href="https://github.com/metaeducation/rebol-issues/issues/1235" class="inline-onebox">TRIM/WITH does not take BINARY! · Issue #1235 · metaeducation/rebol-issues · GitHub</a></p>
</li>
<li>
<p><a href="https://github.com/metaeducation/rebol-issues/issues/1482" class="inline-onebox">TRIM/with /head or /tail does not work with binary! · Issue #1482 · metaeducation/rebol-issues · GitHub</a></p>
</li>
<li>
<p><a href="https://github.com/metaeducation/rebol-issues/issues/1492" class="inline-onebox">to binary! on integer! should trim leading #{00} bytes · Issue #1492 · metaeducation/rebol-issues · GitHub</a></p>
</li>
</ul>
          <p><a href="https://forum.rebol.info/t/trim-on-binary/1490/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/trim-on-binary/1490/2</link>
        <pubDate>Sat, 06 Feb 2021 02:50:43 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1490-2</guid>
        <source url="https://forum.rebol.info/t/trim-on-binary/1490.rss">TRIM on BINARY!</source>
      </item>
      <item>
        <title>TRIM on BINARY!</title>
        <dc:creator><![CDATA[rgchris]]></dc:creator>
        <description><![CDATA[
            <p>What should one expect when trying TRIM on a binary value. I see right off the bat that it doesn't have any effect:</p>
<pre><code class="lang-nohighlight">test: #{2046206F0A6F200A20}
equal? test trim copy test
</code></pre>
<p>Ah, well—that's too bad. This is at odds with the Rebol 2 function that treats whitespace in binary the same as in text.</p>
<p>Hold on though—it does work with TRIM/WITH:</p>
<pre><code class="lang-nohighlight">&gt;&gt; trim/with copy test #{20}  
== #{46206F0A6F200A}

&gt;&gt; trim/with copy test #{200A} 
== #{46206F0A6F}

&gt;&gt; trim/with copy test #{0A20} 
== #{46206F0A6F}

&gt;&gt; trim/all/with copy test #{0A20}
== #{466F6F}

&gt;&gt; trim/head/tail/with copy test #{0A20}
== #{46206F0A6F}
</code></pre>
<p>This is all as I'd expect it.</p>
<p>I want to be certain if this is by design—there seems significant deviation on how this works between Rebol 2, Red, Rebol 3 Alpha and Ren-C. To be clear—I like the above behaviour on first glance.</p>
          <p><a href="https://forum.rebol.info/t/trim-on-binary/1490/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/trim-on-binary/1490/1</link>
        <pubDate>Fri, 05 Feb 2021 23:48:25 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1490-1</guid>
        <source url="https://forum.rebol.info/t/trim-on-binary/1490.rss">TRIM on BINARY!</source>
      </item>
  </channel>
</rss>
