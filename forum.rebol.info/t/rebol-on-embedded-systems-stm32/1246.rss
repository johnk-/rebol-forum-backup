<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>REBOL on embedded systems, STM32</title>
    <link>https://forum.rebol.info/t/rebol-on-embedded-systems-stm32/1246</link>
    <description>I am impressed with REBOL&#39;s lack of dependencies and reasonable use of resources. I am curious just how thin we can get the runtime library both with and without TinyC for use on the STM32 ARM Cortex-M MCU. A typical Cortex-M MCU may have between 64 to 2048 kB of internal flash memory and 32 to 1024 kB of RAM.

The Hello World of the embedded world is blinking LED and is called, affectionately, Blinky. It involves an element of timing and the writing of data to an output register (e.g. GPIOx-&gt;ODR for STM32).

I would like to try REBOL for this use case.

What would it take to give this a go on an embedded Cortex-M MCU?

Cheers,
Joe Gorse</description>
    
    <lastBuildDate>Tue, 03 Dec 2019 16:53:23 +0000</lastBuildDate>
    <category>First Steps</category>
    <atom:link href="https://forum.rebol.info/t/rebol-on-embedded-systems-stm32/1246.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>REBOL on embedded systems, STM32</title>
        <dc:creator><![CDATA[jhgorse]]></dc:creator>
        <description><![CDATA[
            <p>Yes, the toolchains and SDK's are becoming large and fragile. Eclipse is nice for the new user in a short-term get-up-and-go sense, but it does hurt the general situation by adding yet-another-dependency.</p>
<p>Your landlord sounds like a real demanding character. I'll bet he's one of those guys that would presume that you enjoy what he enjoys, and then invites you to all of his odd, eclectic, and challenging hobby gatherings. Why just tonight I heard there was this swing dance at a local Indian restaurant... =)</p>
<p>Cheers,<br>
Joe</p>
          <p><a href="https://forum.rebol.info/t/rebol-on-embedded-systems-stm32/1246/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/rebol-on-embedded-systems-stm32/1246/3</link>
        <pubDate>Tue, 03 Dec 2019 16:53:23 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1246-3</guid>
        <source url="https://forum.rebol.info/t/rebol-on-embedded-systems-stm32/1246.rss">REBOL on embedded systems, STM32</source>
      </item>
      <item>
        <title>REBOL on embedded systems, STM32</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>Thanks for donating the board <img src="https://forum.rebol.info/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>I looked at it, and found I couldn't get it running in a VM... so I had to install the Windows toolchain on the host.  Which, I try not to do.</p>
<p>It was interesting to see how Eclipse-like-and-heavy their toolchain is.  For such a tiny chip.  We might be able to show something here... I have a lot of various commitments, my landlord keeps coming over and wanting to pull up carpet, etc.  But I think we can work this in.</p>
          <p><a href="https://forum.rebol.info/t/rebol-on-embedded-systems-stm32/1246/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/rebol-on-embedded-systems-stm32/1246/2</link>
        <pubDate>Tue, 03 Dec 2019 15:53:35 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1246-2</guid>
        <source url="https://forum.rebol.info/t/rebol-on-embedded-systems-stm32/1246.rss">REBOL on embedded systems, STM32</source>
      </item>
      <item>
        <title>REBOL on embedded systems, STM32</title>
        <dc:creator><![CDATA[jhgorse]]></dc:creator>
        <description><![CDATA[
            <p>I am impressed with REBOL's lack of dependencies and reasonable use of resources. I am curious just how thin we can get the runtime library both with and without TinyC for use on the STM32 ARM Cortex-M MCU. A typical Cortex-M MCU may have between 64 to 2048 kB of internal flash memory and 32 to 1024 kB of RAM.</p>
<p>The Hello World of the embedded world is blinking LED and is called, affectionately, Blinky. It involves an element of timing and the writing of data to an output register (e.g. GPIOx-&gt;ODR for STM32).</p>
<p>I would like to try REBOL for this use case.</p>
<p>What would it take to give this a go on an embedded Cortex-M MCU?</p>
<p>Cheers,<br>
Joe Gorse</p>
          <p><a href="https://forum.rebol.info/t/rebol-on-embedded-systems-stm32/1246/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/rebol-on-embedded-systems-stm32/1246/1</link>
        <pubDate>Tue, 03 Dec 2019 15:33:18 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1246-1</guid>
        <source url="https://forum.rebol.info/t/rebol-on-embedded-systems-stm32/1246.rss">REBOL on embedded systems, STM32</source>
      </item>
  </channel>
</rss>
