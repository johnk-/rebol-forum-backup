<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Separate Back-Tick String Type?</title>
    <link>https://forum.rebol.info/t/separate-back-tick-string-type/1676</link>
    <description>The ability to represent most english and programming-speak in LOAD-able source is cool, and something I&#39;ve encouraged taking advantage of:

    === With COMMA! and generic tuple, we can do this.  (Cool, huh?) ===

There&#39;s a couple of hiccups.  Like you can&#39;t say **`4chan`**, but maybe you shouldn&#39;t anyway.  By making semicolons flush against things like **`abc;`** illegal, we help avoid bad English usages of semicolon... and also avoid the easy confusion that might cause with a SET-WORD! or other colon-ended type.

One thing I find myself wanting to do that I can&#39;t is use backticks to call things out:

    var: 20

    === I sometimes like to say that `var + 1000` would be 1020 ===

That&#39;s a standard usage of backticks in markdown.  But shell scripts use them for running commands in mid script and evaluating their results:

    set dircontents=$(ls)  # runs the ls command and gives back result

    set dircontents=`ls`  # synonym

I really only use the **$()** form in my scripts, because I like to save the backticks for comments.  But it&#39;s a matter of taste, I guess.

## Notably... JavaScript uses it for String Interpolation

https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals

In the case that there is some harsh cost associated in binding with providing string interpolation, perhaps we could limit the binding penalty to only this string type...leaving the other TEXT! strings and such more efficient?

## This Seems Worth Considering

I just thought of it because I was trying to do a code comment in one of my `===` headers as I point out above, and felt like I should be able to.

I might try it as an experiment.  Any name suggestions?</description>
    
    <lastBuildDate>Sun, 22 Aug 2021 19:43:43 +0000</lastBuildDate>
    <category>Datatypes</category>
    <atom:link href="https://forum.rebol.info/t/separate-back-tick-string-type/1676.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Separate Back-Tick String Type?</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>Backticks should be banned from keyboards (and anywhere else too). At least traded in for some decent character.</p>
          <p><a href="https://forum.rebol.info/t/separate-back-tick-string-type/1676/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/separate-back-tick-string-type/1676/2</link>
        <pubDate>Sun, 22 Aug 2021 19:43:43 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1676-2</guid>
        <source url="https://forum.rebol.info/t/separate-back-tick-string-type/1676.rss">Separate Back-Tick String Type?</source>
      </item>
      <item>
        <title>Separate Back-Tick String Type?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>The ability to represent most english and programming-speak in LOAD-able source is cool, and something I've encouraged taking advantage of:</p>
<pre><code>=== With COMMA! and generic tuple, we can do this.  (Cool, huh?) ===
</code></pre>
<p>There's a couple of hiccups.  Like you can't say <strong><code>4chan</code></strong>, but maybe you shouldn't anyway.  By making semicolons flush against things like <strong><code>abc;</code></strong> illegal, we help avoid bad English usages of semicolon... and also avoid the easy confusion that might cause with a SET-WORD! or other colon-ended type.</p>
<p>One thing I find myself wanting to do that I can't is use backticks to call things out:</p>
<pre><code>var: 20

=== I sometimes like to say that `var + 1000` would be 1020 ===
</code></pre>
<p>That's a standard usage of backticks in markdown.  But shell scripts use them for running commands in mid script and evaluating their results:</p>
<pre><code>set dircontents=$(ls)  # runs the ls command and gives back result

set dircontents=`ls`  # synonym
</code></pre>
<p>I really only use the <strong>$()</strong> form in my scripts, because I like to save the backticks for comments.  But it's a matter of taste, I guess.</p>
<h2>Notably... JavaScript uses it for String Interpolation</h2>
<aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://developer.mozilla.org/favicon-48x48.97046865.png" class="site-icon" width="16" height="16">
      <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals" target="_blank" rel="noopener">developer.mozilla.org</a>
  </header>
  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:123/69;"><img src="https://developer.mozilla.org/mdn-social-share.0ca9dbda.png" class="thumbnail" width="123" height="69"></div>

<h3><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals" target="_blank" rel="noopener">Template literals (Template strings) - JavaScript | MDN</a></h3>

<p>Template literals are literals delimited with backticks (`), allowing embedded expressions called substitutions.</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p>In the case that there is some harsh cost associated in binding with providing string interpolation, perhaps we could limit the binding penalty to only this string type...leaving the other TEXT! strings and such more efficient?</p>
<h2>This Seems Worth Considering</h2>
<p>I just thought of it because I was trying to do a code comment in one of my <code>===</code> headers as I point out above, and felt like I should be able to.</p>
<p>I might try it as an experiment.  Any name suggestions?</p>
          <p><a href="https://forum.rebol.info/t/separate-back-tick-string-type/1676/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/separate-back-tick-string-type/1676/1</link>
        <pubDate>Sat, 21 Aug 2021 21:54:03 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1676-1</guid>
        <source url="https://forum.rebol.info/t/separate-back-tick-string-type/1676.rss">Separate Back-Tick String Type?</source>
      </item>
  </channel>
</rss>
