<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Negative indexing as Rebol2/Red compatible... just do it?</title>
    <link>https://forum.rebol.info/t/negative-indexing-as-rebol2-red-compatible-just-do-it/576</link>
    <description>Rebol2/Red:

    &gt;&gt; pick next [a b] 1
    == b

    &gt;&gt; pick next [a b] 0
    == none ;-- Red proposes error, which was also the revised R3-Alpha proposal

    &gt;&gt; pick next [a b] -1
    == a

R3-Alpha:

    &gt;&gt; pick next [a b] 1
    == b

    &gt;&gt; pick next [a b] 0  
    == a

    &gt;&gt; pick next [a b] -1
    == none

The decision to make this change in R3-Alpha was before my time.  But what I know of it, is that it was motivated by some people feeling the &quot;hole at 0&quot; made it hard for mathematics-like algorithms to index into arrays.

It also seemed to be that changing it didn&#39;t really please anyone that much.

The general concept behind PICK is to try and be a kind of &quot;natural, do what I mean&quot; selector.  Ren-C has taken this further by making it come back with an answer that&#39;s the same as what pathing does (hence it&#39;s &quot;path picking&quot; and not &quot;path selection&quot;).  So **pick a/b &#39;c** acts like **a/b/c**...they run the same code.

People who want more numerical access can use SKIP, which navigates series predictably by a number of elements...including 0.

There was a lot of talk about how to change the indexing back safely, but I have to wonder, **can we just change it, call it done, and move on**?  There&#39;s not that much negative indexing going on in general with PICK.  And we have the wherewithal to generate some kind of log to help debug anyone who merges a negative indexing change and it breaks things.

*(I was provoked to look into this because there&#39;s an old list of stray tests that were only run under Rebol2, and I feel like it&#39;s time to get rid of that file by going ahead and doing triage on everything in it...so here are the tests that involve indexing, so they can be deleted from there.  No it&#39;s, not much!)*

    [1 = pick at [1 2 3 4 5] 3 -2]
    [2 = pick at [1 2 3 4 5] 3 -1]
    [none? pick at [1 2 3 4 5] 3 0]
    [#&quot;1&quot; = pick at &quot;12345&quot; 3 -2]
    [#&quot;2&quot; = pick at &quot;12345&quot; 3 -1]
    [none? pick at &quot;12345&quot; 3 0]</description>
    
    <lastBuildDate>Fri, 30 Mar 2018 16:58:16 +0000</lastBuildDate>
    <category>Internals</category>
    <atom:link href="https://forum.rebol.info/t/negative-indexing-as-rebol2-red-compatible-just-do-it/576.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Negative indexing as Rebol2/Red compatible... just do it?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="3" data-topic="576">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="//forum.rebol.info/user_avatar/forum.rebol.info/brett/40/177_2.png" class="avatar"> Brett:</div>
<blockquote>
<p>There's a performance angle too. In Rebol 2, it was known that the fastest way to modify a series was not using CHANGE but to use POKE. When using POKE one naturally thinks to PICK rather than SKIP.</p>
</blockquote>
</aside>
<p>In the change which unified PICK and pathing, it also unified POKE and set-pathing.  So <strong>poke 'a/b 'c 10</strong> would do the same thing as <strong>a/b/c: 10</strong>...because it ran literally the same code.  It also unified with GET and SET, so that <strong>get 'a/b/c</strong> would give you the same thing as <strong>:a/b/c</strong> and <strong>set 'a/b/c x</strong> would give you the same thing as <strong>a/b/c: x</strong> (modulo some details).  Previously, there were all kinds of behavior deviations of each choice.  :-/</p>
<p>PEEK and POKE are "obscure" words, and tend to go together in other languages.  One would think of them as a pair.  Maybe having them be zero-based would make sense, and not doing any of the bizarre things that pathing do (like no getting you a FILE! back from <strong>f: %foo | f/bar</strong>).</p>
<p>Red added PUT, which is a writing variant of SELECT.  <strong>x: [a 10 b 20]</strong> then <strong>put  'a 30</strong> gives you x of [a 30 b 20].  But PICK and PUT might go together better than PICK and POKE?</p>
<p>Wilder options--which I bring up now and again--is to make <strong>/</strong> a specific type (SLASH!, perhaps) and have the evaluator know about it, and do pathing with it.  <strong>x / y: z</strong> could be like <strong>poke x y z</strong> is today.  Getting that to work generically would require SET-GROUP! and GET-GROUP!, e.g.:</p>
<pre><code>:(x x x) / y: z
x / (y y y): z
</code></pre>
<p>But I've wanted those anyway.  And then maybe the named forms could be zero-based?</p>
          <p><a href="https://forum.rebol.info/t/negative-indexing-as-rebol2-red-compatible-just-do-it/576/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/negative-indexing-as-rebol2-red-compatible-just-do-it/576/4</link>
        <pubDate>Fri, 30 Mar 2018 16:58:16 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-576-4</guid>
        <source url="https://forum.rebol.info/t/negative-indexing-as-rebol2-red-compatible-just-do-it/576.rss">Negative indexing as Rebol2/Red compatible... just do it?</source>
      </item>
      <item>
        <title>Negative indexing as Rebol2/Red compatible... just do it?</title>
        <dc:creator><![CDATA[Brett]]></dc:creator>
        <description><![CDATA[
            <p>Trying to decide on a binary choice between the intent of PICK being more "natural selector" or "mathematical" array access was probably a mistake.  A bit too much "let's minimise what's in the box".</p>
<p>There's a performance angle too. In Rebol 2, it was known that the fastest way to modify a series was not using CHANGE but to use POKE. When using POKE one naturally thinks to PICK rather than SKIP.</p>
<p>I'm also unsure if the semantics of SKIP are enough to satisfy a mathematical style access.</p>
<p>So I'm in favor of going back to Rebol2's PICK but wonder if a PEEK could satisfy the fast mathematical access intent scenario.</p>
          <p><a href="https://forum.rebol.info/t/negative-indexing-as-rebol2-red-compatible-just-do-it/576/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/negative-indexing-as-rebol2-red-compatible-just-do-it/576/3</link>
        <pubDate>Sun, 25 Mar 2018 22:53:10 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-576-3</guid>
        <source url="https://forum.rebol.info/t/negative-indexing-as-rebol2-red-compatible-just-do-it/576.rss">Negative indexing as Rebol2/Red compatible... just do it?</source>
      </item>
      <item>
        <title>Negative indexing as Rebol2/Red compatible... just do it?</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>For some things changed in R3, it is ok to change those back to R2 way of handling. I think this one fits that view especially because you point out the alternative with SKIP does what you want in this case.</p>
          <p><a href="https://forum.rebol.info/t/negative-indexing-as-rebol2-red-compatible-just-do-it/576/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/negative-indexing-as-rebol2-red-compatible-just-do-it/576/2</link>
        <pubDate>Fri, 23 Mar 2018 21:28:38 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-576-2</guid>
        <source url="https://forum.rebol.info/t/negative-indexing-as-rebol2-red-compatible-just-do-it/576.rss">Negative indexing as Rebol2/Red compatible... just do it?</source>
      </item>
      <item>
        <title>Negative indexing as Rebol2/Red compatible... just do it?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>Rebol2/Red:</p>
<pre><code>&gt;&gt; pick next [a b] 1
== b

&gt;&gt; pick next [a b] 0
== none ;-- Red proposes error, which was also the revised R3-Alpha proposal

&gt;&gt; pick next [a b] -1
== a
</code></pre>
<p>R3-Alpha:</p>
<pre><code>&gt;&gt; pick next [a b] 1
== b

&gt;&gt; pick next [a b] 0  
== a

&gt;&gt; pick next [a b] -1
== none
</code></pre>
<p>The decision to make this change in R3-Alpha was before my time.  But what I know of it, is that it was motivated by some people feeling the "hole at 0" made it hard for mathematics-like algorithms to index into arrays.</p>
<p>It also seemed to be that changing it didn't really please anyone that much.</p>
<p>The general concept behind PICK is to try and be a kind of "natural, do what I mean" selector.  Ren-C has taken this further by making it come back with an answer that's the same as what pathing does (hence it's "path picking" and not "path selection").  So <strong>pick a/b 'c</strong> acts like <strong>a/b/c</strong>...they run the same code.</p>
<p>People who want more numerical access can use SKIP, which navigates series predictably by a number of elements...including 0.</p>
<p>There was a lot of talk about how to change the indexing back safely, but I have to wonder, <strong>can we just change it, call it done, and move on</strong>?  There's not that much negative indexing going on in general with PICK.  And we have the wherewithal to generate some kind of log to help debug anyone who merges a negative indexing change and it breaks things.</p>
<p><em>(I was provoked to look into this because there's an old list of stray tests that were only run under Rebol2, and I feel like it's time to get rid of that file by going ahead and doing triage on everything in it...so here are the tests that involve indexing, so they can be deleted from there.  No it's, not much!)</em></p>
<pre><code>[1 = pick at [1 2 3 4 5] 3 -2]
[2 = pick at [1 2 3 4 5] 3 -1]
[none? pick at [1 2 3 4 5] 3 0]
[#"1" = pick at "12345" 3 -2]
[#"2" = pick at "12345" 3 -1]
[none? pick at "12345" 3 0]</code></pre>
          <p><a href="https://forum.rebol.info/t/negative-indexing-as-rebol2-red-compatible-just-do-it/576/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/negative-indexing-as-rebol2-red-compatible-just-do-it/576/1</link>
        <pubDate>Wed, 21 Mar 2018 10:56:54 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-576-1</guid>
        <source url="https://forum.rebol.info/t/negative-indexing-as-rebol2-red-compatible-just-do-it/576.rss">Negative indexing as Rebol2/Red compatible... just do it?</source>
      </item>
  </channel>
</rss>
