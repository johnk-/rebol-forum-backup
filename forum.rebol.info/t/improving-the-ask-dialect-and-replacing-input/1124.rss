<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Improving the ASK Dialect (and replacing INPUT)</title>
    <link>https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124</link>
    <description>I have been wanting ASK to become more clever than it is today, e.g. to take a dialect:

    &gt;&gt; ask [&quot;Operation failed.&quot; &lt;(A)bort&gt; &lt;(R)etry&gt; &lt;(I)gnore&gt;]
    Operation failed. (A)bort, (R)etry, (I)gnore? A
    == #Abort

That&#39;s an imaginative idea which would let you use TAG! to signal things to prompt for, and give you back an ISSUE! synthesized from it.

But whatever it is, I&#39;d been thinking that there should be some way of replacing the 0-parameter INPUT with it.  Because I hate INPUT being taken for this, it&#39;s better for a variable name (we wouldn&#39;t want OUTPUT to be a function by default would we?)

But when you don&#39;t want any prompt, I wasn&#39;t particularly happy with any of:

*  `ask _`
* `ask []`
* `ask blank`

Then @gchiu brought up the idea of type filtering, which leads to a pretty good answer for unfiltered text input with no prompt.  **ask text!**.  That sounds like a winner to me, and I say regardless of the rest of the design let&#39;s go ahead and get rid of INPUT and use ASK TEXT!.

## But then...what about the rest of the design?

Can the user cancel the input without canceling the script?  e.g. hitting &quot;Escape&quot; returning NULL in some interface.

     ask text! else [print &quot;You indicated you didn&#39;t want to give any input&quot;]

If NULL signals that, is there a different signal for errors?  Or does the ASK implicitly keep harassing the user until they pass the validation, or hit escape to give NULL?

    &gt;&gt; ask [&quot;Enter a number:&quot; integer!]
    Enter a number: Q
    ** Invalid Input
    Enter a number: 10
    == 10

This seems like a fun dialect to design, so someone should get on it!  In the meantime, INPUT is dying, use ASK TEXT!...</description>
    
    <lastBuildDate>Sat, 14 Nov 2020 22:04:35 +0000</lastBuildDate>
    <category>Dialects/DSLs</category>
    <atom:link href="https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Improving the ASK Dialect (and replacing INPUT)</title>
        <dc:creator><![CDATA[gchiu]]></dc:creator>
        <description><![CDATA[
            <p>So, I tried using ASK but I need to have defaults I can set, and let the user know there's a default that is used if they just hit enter.</p>
<pre><code>n: 10  
ASK ["Age:" integer! n]  
</code></pre>
<p>Something like that so it appears</p>
<pre><code>"Age: (10)" 
</code></pre>
<p>So, if n changes later on, then the displayed default changes</p>
<p>And maybe ranges too</p>
<pre><code>ASK ["Age:" integer! [0 .. 100] ]
</code></pre>
<p>Or a list</p>
<pre><code>ASK ["Day of Week:" char! ['M 'T 'W 'H 'F 'S 'U] ]</code></pre>
          <p><a href="https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124/12</link>
        <pubDate>Sat, 14 Nov 2020 22:04:35 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1124-12</guid>
        <source url="https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124.rss">Improving the ASK Dialect (and replacing INPUT)</source>
      </item>
      <item>
        <title>Improving the ASK Dialect (and replacing INPUT)</title>
        <dc:creator><![CDATA[gchiu]]></dc:creator>
        <description><![CDATA[
            <p>I guess if one wants a cross platform language or accept that different platforms have different implementations</p>
<aside class="onebox stackexchange">
  <header class="source">
      <a href="https://stackoverflow.com/questions/16089421/simplest-way-to-detect-keypresses-in-javascript" target="_blank" rel="noopener">stackoverflow.com</a>
  </header>
  <article class="onebox-body">
      <a href="https://stackoverflow.com/users/2078414/bobismijnnaam" target="_blank" rel="noopener">
    <img alt="bobismijnnaam" src="https://www.gravatar.com/avatar/8989dd155726a1334ec96d78eb3d924d?s=128&amp;d=identicon&amp;r=PG" class="thumbnail onebox-avatar" width="128" height="128">
  </a>
<h4>
  <a href="https://stackoverflow.com/questions/16089421/simplest-way-to-detect-keypresses-in-javascript" target="_blank" rel="noopener">Simplest way to detect keypresses in javascript</a>
</h4>

<div class="tags">
  <strong>javascript, jquery, html, keyboard</strong>
</div>

<div class="date">
  asked by
  
  <a href="https://stackoverflow.com/users/2078414/bobismijnnaam" target="_blank" rel="noopener">
    bobismijnnaam
  </a>
  on <a href="https://stackoverflow.com/questions/16089421/simplest-way-to-detect-keypresses-in-javascript" target="_blank" rel="noopener">05:24PM - 18 Apr 13 UTC</a>
</div>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

          <p><a href="https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124/11</link>
        <pubDate>Fri, 03 May 2019 07:41:30 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1124-11</guid>
        <source url="https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124.rss">Improving the ASK Dialect (and replacing INPUT)</source>
      </item>
      <item>
        <title>Improving the ASK Dialect (and replacing INPUT)</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>As a first cut of ASK I made it keep prompting you so long as there is an error:</p>
<pre><code>&gt;&gt; ask ["Your age:" integer!]
Your age: asdf
** Script Error: cannot MAKE/TO integer! from: "asdf"
Your age: 44
== 44
</code></pre>
<p>But what about...</p>
<aside class="quote no-group" data-post="3" data-topic="1124">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.rebol.info/letter_avatar_proxy/v4/letter/b/e480ec/40.png" class="avatar"> BrianOtto:</div>
<blockquote>
<p><code>ask text!</code><br>
; no prompt, validates input is the correct data type</p>
</blockquote>
</aside>
<p>...if there's "no prompt, validates input", then you might think you've printed your own prompt...but they'll only get the prompt once.</p>
          <p><a href="https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124/10</link>
        <pubDate>Fri, 03 May 2019 00:48:02 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1124-10</guid>
        <source url="https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124.rss">Improving the ASK Dialect (and replacing INPUT)</source>
      </item>
      <item>
        <title>Improving the ASK Dialect (and replacing INPUT)</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="8" data-topic="1124" data-full="true">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/gchiu/40/22_2.png" class="avatar"> gchiu:</div>
<blockquote>
<pre><code class="lang-auto">Ask [char!] 
</code></pre>
<p>For hit any key ...</p>
</blockquote>
</aside>
<p>Seems a nice idea, but...</p>
<p>...standard I/O (e.g. in Linux/Windows consoles and terminals) is buffered.  Your program doesn't receive any typed input until the enter key is pressed.  This gives the user the chance to go back and edit.</p>
<p>There is nothing in the C standard about getting unbuffered input.  You have to go to a platform-specific API.  In the web console, we would have the necessary hooks to do it...though it does start raising some questions (like what should happen if you copy a string and try to paste it?  Do you get the first character of the string?)</p>
<p>Also, I would think that most "hit any key" situations don't actually want to echo the key to the screen.</p>
<p>So there are things to consider...all added on top of the idea that breaking the pattern of asking for text and then trying to run a TO on the datatype would have cost.</p>
<p>What's probably needed is an abstraction for pausing (perhaps MORE ?) which translates its behavior based on the availability of either a terminal API, console I/O, or something fancier.  It may not be in ASK's job description.</p>
          <p><a href="https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124/9</link>
        <pubDate>Fri, 03 May 2019 00:30:28 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1124-9</guid>
        <source url="https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124.rss">Improving the ASK Dialect (and replacing INPUT)</source>
      </item>
      <item>
        <title>Improving the ASK Dialect (and replacing INPUT)</title>
        <dc:creator><![CDATA[gchiu]]></dc:creator>
        <description><![CDATA[
            <pre><code>Ask [char!] 
</code></pre>
<p>For hit any key ...</p>
          <p><a href="https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124/8</link>
        <pubDate>Fri, 03 May 2019 00:15:48 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1124-8</guid>
        <source url="https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124.rss">Improving the ASK Dialect (and replacing INPUT)</source>
      </item>
      <item>
        <title>Improving the ASK Dialect (and replacing INPUT)</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="BrianOtto" data-post="5" data-topic="1124">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/letter_avatar_proxy/v4/letter/b/e480ec/40.png" class="avatar"> BrianOtto:</div>
<blockquote>
<p>I think at least getting this simpler version working is a good first step.</p>
</blockquote>
</aside>
<p>I've taken the first step.  INPUT is left for the time being as a synonym for ASK TEXT!:</p>
<aside class="onebox githubcommit">
  <header class="source">
      <a href="https://github.com/metaeducation/ren-c/commit/7d89a14e0f4bc5a66f2f206ffb77f906dc42e547" target="_blank" rel="noopener">github.com/metaeducation/ren-c</a>
  </header>
  <article class="onebox-body">
    <div class="github-row">
  <div class="github-icon-container" title="Commit">
    <svg width="60" height="60" class="github-icon" viewBox="0 0 14 16" aria-hidden="true"><path d="M10.86 7c-.45-1.72-2-3-3.86-3-1.86 0-3.41 1.28-3.86 3H0v2h3.14c.45 1.72 2 3 3.86 3 1.86 0 3.41-1.28 3.86-3H14V7h-3.14zM7 10.2c-1.22 0-2.2-.98-2.2-2.2 0-1.22.98-2.2 2.2-2.2 1.22 0 2.2.98 2.2 2.2 0 1.22-.98 2.2-2.2 2.2z"></path></svg>
  </div>

  <div class="github-info-container">
    <h4>
      <a href="https://github.com/metaeducation/ren-c/commit/7d89a14e0f4bc5a66f2f206ffb77f906dc42e547" target="_blank" rel="noopener">First cut at replacing INPUT with improved ASK dialect</a>
    </h4>

    <div class="github-info">
      <div class="date">
        committed <span class="discourse-local-date" data-format="ll" data-date="2019-05-02" data-time="21:32:27" data-timezone="UTC">09:32PM - 02 May 19 UTC</span>
      </div>

      <div class="user">
        <a href="https://github.com/hostilefork" target="_blank" rel="noopener">
          <img alt="hostilefork" src="https://avatars1.githubusercontent.com/u/20440?v=4" class="onebox-avatar-inline" width="20" height="20">
          hostilefork
        </a>
        
      </div>

      <div class="lines" title="changed 3 files with 83 additions and 13 deletions">
        <a href="https://github.com/metaeducation/ren-c/commit/7d89a14e0f4bc5a66f2f206ffb77f906dc42e547" target="_blank" rel="noopener">
          <span class="added">+83</span>
          <span class="removed">-13</span>
        </a>
      </div>
    </div>

  </div>
</div>


  <div class="github-row">
    <pre class="github-content" style="white-space: normal;">This adds the feature that ASK can be passed a TEXT! prompt, a filter
DATATYPE! which the typed-in answer must TO-convert to,...</pre>
  </div>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p>For the moment it preserves the cancellation code that was in INPUT as-is.  We can discuss the ramifications of that, and if perhaps <strong><code>ask*</code></strong> should be some lower-level cancellable ASK, or similar.</p>
<p>This has uncovered a latent problem, that apparently before, <a href="https://github.com/hostilefork/replpad-js/issues/71">INPUT with no text already on a line to act as a prompt did not work</a>.  Another thing for the REPL-TEST suite to test...!</p>
<p>While ASK is a small thing, I think that it really does touch upon some of where this methodology aims to go... there's something kind of profound about it, sort of.</p>
          <p><a href="https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124/7</link>
        <pubDate>Thu, 02 May 2019 21:37:14 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1124-7</guid>
        <source url="https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124.rss">Improving the ASK Dialect (and replacing INPUT)</source>
      </item>
      <item>
        <title>Improving the ASK Dialect (and replacing INPUT)</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="5" data-topic="1124">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.rebol.info/letter_avatar_proxy/v4/letter/b/e480ec/40.png" class="avatar"> BrianOtto:</div>
<blockquote>
<p>It is there for a reason and providing no input could break the logic that follows</p>
</blockquote>
</aside>
<p>It might be that a cancellable ASK is a separate intent, whereas keeping you locked in a loop or cancelling out of the entire script is the default.</p>
<p>But I think it's a common enough intent to formalize and speak the "soft failure" protocol of returning a NULL.  People have certain UI behavior they expect out of cancellation...even if there's a cancel button, they tend to want escape to do what that button does.</p>
<p>The reason I feel like NULL on canceling ASK could be good as a default is precisely because it would trigger a failure down the road on an unset variable if you didn't handle it.  The user can opportunistically say "Hey, I don't want in on this particular option, get me out of here" and if the script can handle it, it will.  Otherwise a failure will get them no worse off than if they had Ctrl-C'd out of the entire script.</p>
<p>And being able to write:</p>
<pre><code>until [x: ask ...]
</code></pre>
<p>Seems kind of like a reasonable way of saying "This isn't cancelable, I'm going to keep asking you until you halt the entire script or give me a value."</p>
          <p><a href="https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124/6</link>
        <pubDate>Thu, 02 May 2019 18:20:24 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1124-6</guid>
        <source url="https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124.rss">Improving the ASK Dialect (and replacing INPUT)</source>
      </item>
      <item>
        <title>Improving the ASK Dialect (and replacing INPUT)</title>
        <dc:creator><![CDATA[BrianOtto]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="4" data-topic="1124">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>I think it's cleaner to have the space be implicit.</p>
</blockquote>
</aside>
<p>I agree.</p>
<aside class="quote no-group" data-post="4" data-topic="1124">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>By a similar token, I wonder if the colon should be implicit?</p>
</blockquote>
</aside>
<p>No, I think "?" would be another common one to use, and I'm sure others will come up too.</p>
<aside class="quote no-group" data-post="4" data-topic="1124">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>One thought I had was that if "choices" of this nature were abstracted out more as an "intent" in the dialect, that they might use alternate input methods like showing buttons.</p>
</blockquote>
</aside>
<p>I like where you're going with this, but it would need some further thought/discussion on a proper syntax. I think at least getting this simpler version working is a good first step.</p>
<aside class="quote no-group" data-post="4" data-topic="1124">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>I'm not sure how much we should stuff into the dialect vs. making this clean to do in the language itself.</p>
</blockquote>
</aside>
<p>Yea, true. This was sort of a last minute thought I had. It might be nice to have, but could be handled by the language too, so maybe better to keep things cleaner.</p>
<aside class="quote no-group quote-modified" data-post="4" data-topic="1124">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>... the critical question here is about <em>canceling the ASK without canceling the script</em></p>
</blockquote>
</aside>
<p>Maybe there is a use case I haven't run into before... but personally, I don't see the need to allow the user to cancel out of a prompt. It is there for a reason and providing no input could break the logic that follows, and that is an unexpected outcome that you'd always have to handle.</p>
          <p><a href="https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124/5</link>
        <pubDate>Thu, 02 May 2019 18:10:08 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1124-5</guid>
        <source url="https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124.rss">Improving the ASK Dialect (and replacing INPUT)</source>
      </item>
      <item>
        <title>Improving the ASK Dialect (and replacing INPUT)</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>Pretty much the kind of thing I had in mind!</p>
<aside class="quote no-group" data-post="3" data-topic="1124">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.rebol.info/letter_avatar_proxy/v4/letter/b/e480ec/40.png" class="avatar"> BrianOtto:</div>
<blockquote>
<p><code>ask "Enter a response: "</code><br>
; has prompt, no validation</p>
</blockquote>
</aside>
<p>I think it's cleaner to have the space be implicit.  If people are sure what they're dealing with is a console and truly need more control they can still <code>write-stdout</code> (to be <code>write stdout</code> a.k.a. <code>write system/ports/output</code>), and then <code>ask text!</code>.</p>
<p>By a similar token, I wonder if the colon should be implicit?</p>
<aside class="quote no-group" data-post="3" data-topic="1124">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.rebol.info/letter_avatar_proxy/v4/letter/b/e480ec/40.png" class="avatar"> BrianOtto:</div>
<blockquote>
<p><code>ask ["Operation Failed. (A)bort, (R)etry, (I)gnore: " ["A" "R" "I"]]</code><br>
; has prompt, validates input is one of the correct choices</p>
</blockquote>
</aside>
<p>One thought I had was that if "choices" of this nature were abstracted out more as an "intent" in the dialect, that they might use alternate input methods like showing buttons.  Reverse-engineering that intent from a very console-specific UI like this would be harder.</p>
<p>On the other hand, the fact that I hadn't figured out a notation for that has stopped a simpler version of this from being implemented.  So...</p>
<aside class="quote no-group" data-post="3" data-topic="1124">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.rebol.info/letter_avatar_proxy/v4/letter/b/e480ec/40.png" class="avatar"> BrianOtto:</div>
<blockquote>
<p><code>ask ["What do you want to do next? " parse-response]</code><br>
; has prompt, validates input with a custom function you provide<br>
; returning false keeps the prompt looping, true exits it</p>
</blockquote>
</aside>
<p>In terms of keeping things down to a good composable box of parts, I'm not sure how much we should stuff into the dialect vs. making this clean to do in the language itself.</p>
<pre><code>until [parse try ask "What do you want to do next?" [
    some | rules | here
] else [
    print "That wasn't a good answer, try again!"
]]
</code></pre>
<p>But seems to me the critical question here is about <strong>canceling the ASK without canceling the script</strong>.  HALT or Ctrl-C are beyond the realm of CATCH.</p>
<p>Should the only way out be if you put cancellation in as one of the in-band responses?  Or is the standard of NULL back from ASK a better way...and then have the escape key or some other UI mechanism able to "soft cancel"?</p>
<p><strong>Given everyone seems to like it and no one has spoken up to defend INPUT...</strong></p>
<p>I'll go ahead and switch over to support for <strong>ask text!</strong> and <strong>ask "Prompt"</strong> soon.  But this brings up that we need to get some way of introducing deprecation warnings, so things like INPUT can vanish over a period of time, giving people at least an opportunity in their scripts to say <code>input: does [ask text!]</code> even if they don't feel like updating all of their code (or prefer INPUT for some reason).</p>
<p>At minimum that means...write-stderr, where you can start getting some JS console log warnings and stderr output in a terminal.</p>
          <p><a href="https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124/4</link>
        <pubDate>Thu, 02 May 2019 17:29:08 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1124-4</guid>
        <source url="https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124.rss">Improving the ASK Dialect (and replacing INPUT)</source>
      </item>
      <item>
        <title>Improving the ASK Dialect (and replacing INPUT)</title>
        <dc:creator><![CDATA[BrianOtto]]></dc:creator>
        <description><![CDATA[
            <p>I like <code>ask</code> and would rather use it instead of <code>input</code></p>
<p>Maybe this is a bit too much, but what about something that could support these variations ...</p>
<p><code>ask text!</code><br>
; no prompt, validates input is the correct data type</p>
<p><code>ask [text! integer!]</code><br>
; no prompt, validates input is one of the correct data types</p>
<p><code>ask "Enter a response: "</code><br>
; has prompt, no validation</p>
<p><code>ask ["Enter a number: " integer!]</code><br>
; has prompt, validates input is the correct data type</p>
<p><code>ask ["Enter a response: " [text! integer!]]</code><br>
; has prompt, validates input is one of the correct data types</p>
<p><code>ask ["Operation Failed. (A)bort, (R)etry, (I)gnore: " ["A" "R" "I"]]</code><br>
; has prompt, validates input is one of the correct choices</p>
<p><code>ask ["Enter a number from 1 - 10 or (R)andom: " [integer! "R"]]</code><br>
; has prompt, validates input is one of the correct data types or choices</p>
<p><code>ask ["Enter a number: " integer! "You did not enter a number."]</code><br>
; has prompt, validates input is the correct data type, and displays a custom message when it doesn't</p>
<p><code>ask ["What do you want to do next? " parse-response]</code><br>
; has prompt, validates input with a custom function you provide<br>
; returning false keeps the prompt looping, true exits it</p>
<p>So <code>ask</code> would accept one parameter that is a <code>datatype!</code>, <code>text!</code> or <code>block!</code>. If the parameter is a <code>block!</code> then different rules would apply depending on the data type in each position.</p>
          <p><a href="https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124/3</link>
        <pubDate>Thu, 02 May 2019 16:03:48 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1124-3</guid>
        <source url="https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124.rss">Improving the ASK Dialect (and replacing INPUT)</source>
      </item>
      <item>
        <title>Improving the ASK Dialect (and replacing INPUT)</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>A further thought or question on ASK's behavior is if it might be tricky and look to its left, and if its left is a SET-WORD! then use that to cue what it's asking you for:</p>
<pre><code>&gt;&gt; number-of-variants: ask integer!
Enter number-of-variants: 
</code></pre>
<p>Using <code>&lt;skip&gt;</code>-able parameters, it could still have a fall back if it can't find a SET-WORD! to its left:</p>
<pre><code>&gt;&gt; do compose [x: (ask integer!)]   ; now ASK sees nothing to left
Enter integer!: 
</code></pre>
<p>And clearly: if you provide a custom prompt in the ASK, it should override the guess for lazy people that would be based on the variable name.</p>
          <p><a href="https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124/2</link>
        <pubDate>Sun, 28 Apr 2019 13:32:16 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1124-2</guid>
        <source url="https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124.rss">Improving the ASK Dialect (and replacing INPUT)</source>
      </item>
      <item>
        <title>Improving the ASK Dialect (and replacing INPUT)</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>I have been wanting ASK to become more clever than it is today, e.g. to take a dialect:</p>
<pre><code>&gt;&gt; ask ["Operation failed." &lt;(A)bort&gt; &lt;(R)etry&gt; &lt;(I)gnore&gt;]
Operation failed. (A)bort, (R)etry, (I)gnore? A
== #Abort
</code></pre>
<p>That's an imaginative idea which would let you use TAG! to signal things to prompt for, and give you back an ISSUE! synthesized from it.</p>
<p>But whatever it is, I'd been thinking that there should be some way of replacing the 0-parameter INPUT with it.  Because I hate INPUT being taken for this, it's better for a variable name (we wouldn't want OUTPUT to be a function by default would we?)</p>
<p>But when you don't want any prompt, I wasn't particularly happy with any of:</p>
<ul>
<li><code>ask _</code></li>
<li><code>ask []</code></li>
<li><code>ask blank</code></li>
</ul>
<p>Then <a class="mention" href="/u/gchiu">@gchiu</a> brought up the idea of type filtering, which leads to a pretty good answer for unfiltered text input with no prompt.  <strong>ask text!</strong>.  That sounds like a winner to me, and I say regardless of the rest of the design let's go ahead and get rid of INPUT and use ASK TEXT!.</p>
<h2>But then...what about the rest of the design?</h2>
<p>Can the user cancel the input without canceling the script?  e.g. hitting "Escape" returning NULL in some interface.</p>
<pre><code> ask text! else [print "You indicated you didn't want to give any input"]
</code></pre>
<p>If NULL signals that, is there a different signal for errors?  Or does the ASK implicitly keep harassing the user until they pass the validation, or hit escape to give NULL?</p>
<pre><code>&gt;&gt; ask ["Enter a number:" integer!]
Enter a number: Q
** Invalid Input
Enter a number: 10
== 10
</code></pre>
<p>This seems like a fun dialect to design, so someone should get on it!  In the meantime, INPUT is dying, use ASK TEXT!...</p>
          <p><a href="https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124/1</link>
        <pubDate>Wed, 20 Mar 2019 03:01:19 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1124-1</guid>
        <source url="https://forum.rebol.info/t/improving-the-ask-dialect-and-replacing-input/1124.rss">Improving the ASK Dialect (and replacing INPUT)</source>
      </item>
  </channel>
</rss>
