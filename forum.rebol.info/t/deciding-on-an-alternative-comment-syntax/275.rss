<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Deciding on an Alternative Comment Syntax</title>
    <link>https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275</link>
    <description>&gt; **UPDATE:** After extensive consideration of alternative comment syntaxes, **`;`** was retained...with a suggested policy of spacing line comments off by two spaces, not one:
&gt;
&gt;     my [line of] code  ; like this
&gt;
&gt;     my [line of] code ; not this
&gt; 
&gt;     my [line of] code ;; or this
&gt;
&gt;     my [line of] code ;-- or this
&gt;
&gt; Various factors made this choice seem best.  The rise of [in-language invisibles](https://forum.rebol.info/t/issues-with-invisibles-a-truly-disappearing-comment/405) made it possible to create your own comment structures...even using things like `--` and `//` to ignore to end of line...so long as what you wanted to ignore was LOADable.  This aligned with the general goal of giving the most symbols possible to the language, vs. to something that would throw data out and be impossible to use.
&gt;
&gt; The visual compromise of two spaces off for same-line comments addressed enough of the complaints about ; to be palatable.  Further, it should be noted that at least one space is required to consider a comment to be a comment.  This allows `;` to be a character in ISSUE! (e.g. **#;**) or in URL!, where it is legal.  It&#39;s not a legal word character, so **abc;** triggers an error.
---

One of the things that Rebol has wanted to go after is the idea that you don&#39;t need an IDE or syntax highlighting to feel the code is readable or looking pleasing.

*(I&#39;ve felt like there is something of a similarity of goals here with MarkDown; that the idea you could pull the code out of an old-school typewriter and feel the lack of any kind of rendering engine isn&#39;t a liability.)*

On this note, the use of semicolons for comments in Rebol has never felt good to me.  Semicolons standing alone almost look like dirt; they&#39;re too light and broken-up to feel like a good &quot;barrier&quot;.

    some (code [that looks]) kind of Englishy ; a Rebol comment

The solutions that have come along feel like they&#39;re making the problem worse, and I resent having to &quot;make something up&quot; to tack on more characters that are optional as decoration to make up for how weak semicolon is:

    double (semicolons [are also]) broken-dirty ;; a Rebol comment

    semicolon (and [dashes aren&#39;t]) really better ;-- a Rebol comment

Historically, semicolons come from Lisp and its family...as well as many assembly languages.  Besides the complaints I give about it, I&#39;m certain it looks quirky unnatural to the average programmer of today.

The two notably popular choices for end-of-line comments are `//` from many C-derived languages (originally a C++ invention, but added to C--which is saying something, because C has been very reluctant to take C++-isms)...and the `#` which is popular in shell/scripting languages.  For a big survey of forms of comments, Rosetta Code has it covered:

https://www.rosettacode.org/wiki/Comments

Languages targeting people who are thinking more about compiling things--not just Java but even more recent ones like Rust, Scala, Haxe--have gone with with the C/C++ conventions.  (Of course, JavaScript went with it too, for those of you who don&#39;t know.)

Meanwhile languages that seem to be more in the script space have gone with `#`...but not just the usual suspects like Awk/Sed/Perl/PHP/YAML, but PowerShell, Ruby, Python, Julia...

I don&#39;t think repeating random mistakes because they are popular is a good idea.  But there seems to be a kind of visual truth about these stronger separating choices.  When I have to use some other language and then come back to Rebol and accidentally start commenting with `//` or `#`, I think about how much better the resulting code looks.

*(I encourage others to experiment and see how you feel.)*

There&#39;s obviously an issue (ha) with using `#` with no space after it as a comment, since that is how ISSUE! is denoted.  I don&#39;t really feel like requiring a space after it to get comment behavior is so bad, as `#this looks bad anyway`.  Though repeating # should be legal, to kind of draw separators, e.g.

    ######### This should be able to be a comment ##########

It feels much more solid than:

    ;;;;;;;;;; This terrible abomination ;;;;;;;;;;;;;;;;;;;;

Sometimes I think `#` is perhaps a bit *too* heavy, and the `//` reminds me of one of my historically favorite marking patterns... [standardized by OSHA to mean &quot;physical hazard&quot;](https://stock.adobe.com/ee/search?k=hazard%20stripes
):

    ////////// This is actually kind of cool /////////////////

So I&#39;ve got some mixed feelings personally about liking `//`, and also thinking `//` makes for a pretty poor Rebol WORD! (try putting it in a PATH!) so it would be nice to make it illegal there--which declaring it a comment would do.  But it seems when you look at the group of languages Rebol is most aiming at that # makes more sense, as well as being able to accomplish the goal of the desired barrier in a single character instead of two.

There&#39;s also the need to support [shebang](https://en.wikipedia.org/wiki/Shebang_(Unix)) in some way, and it would be easier if things like `#!` were not issues but treated as comments...which could go with the `##` types of exceptions above.</description>
    
    <lastBuildDate>Tue, 22 Jan 2019 13:01:45 +0000</lastBuildDate>
    <category>Naming</category>
    <atom:link href="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Deciding on an Alternative Comment Syntax</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>Fair enough...well I think all the angles have been seen at this point, so time to close the issue.</p>
<aside class="quote quote-modified" data-post="1" data-topic="1028">
  <div class="title">
    <div class="quote-controls"></div>
    <img alt="" width="20" height="20" src="/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar">
    <a href="https://forum.rebol.info/t/the-beta-one-comment-concession/1028">The Beta/One Comment Concession</a> <a class="badge-wrapper  bullet" href="/c/development/internals"><span class="badge-category-parent-bg" style="background-color: #25AAE2;"></span><span class="badge-category-bg" style="background-color: #25AAE2;"></span><span style="" data-drop-close="true" class="badge-category clear-badge" title="Internals of the Rebol language">Internals</span></a>
  </div>
  <blockquote>
    Note: People should bear in mind there was never a question that semicolon was going to stay a comment character.  There was only a question of if another sequence (or sequences) would be permitted.  (!) 
Also, bear in mind that the alternative syntax for comments discussion started in August 2017.  Hence it <a href="https://forum.rebol.info/t/issues-with-invisibles-a-truly-disappearing-comment/405">predated the creation of "invisibles" by about 4 months</a>.  Invisibles have offered a much higher leverage tool for machine-processable comment-like things, and to use them requires not givinâ€¦
  </blockquote>
</aside>

          <p><a href="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/51">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/51</link>
        <pubDate>Tue, 22 Jan 2019 13:01:45 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-275-51</guid>
        <source url="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275.rss">Deciding on an Alternative Comment Syntax</source>
      </item>
      <item>
        <title>Deciding on an Alternative Comment Syntax</title>
        <dc:creator><![CDATA[BlackATTR]]></dc:creator>
        <description><![CDATA[
            <p>I agree with any kind of commenting which takes into account structured or semi-structured metadata to improve documentation and literate programming. A big thumbs up for that thinking.<br>
I want to be able to query &amp; inspect my code/scripts/libraries for different purposes; for resuability, to spot &amp; refactor outdated code patterns (e.g, for interpreter updates), etc. I suppose at some point this resembles a version control system, although with a truly literate programming approach, it becomes more like a content management system.</p>
          <p><a href="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/50">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/50</link>
        <pubDate>Wed, 02 Jan 2019 16:06:14 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-275-50</guid>
        <source url="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275.rss">Deciding on an Alternative Comment Syntax</source>
      </item>
      <item>
        <title>Deciding on an Alternative Comment Syntax</title>
        <dc:creator><![CDATA[LkpPo]]></dc:creator>
        <description><![CDATA[
            <p>I don't see the point of providing 4 comment styles (outside of a test period) because a comment do nothing from the point of view of the computer. Why more ways of doing nothing?</p>
<p>Choosing a comment style that interfers less with code is yet better.</p>
<p>A more powerfull system could behave like a literate program , embeding code in documentation and exploring it, but the current way of doing it had not proved to be really effective because the flow of documentation and code are different but mixed in the same file.</p>
<p>An active documentation format executing self exploratory external rebol code with a a dialect for loose coupling could be better.</p>
          <p><a href="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/49">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/49</link>
        <pubDate>Sun, 30 Dec 2018 10:49:35 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-275-49</guid>
        <source url="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275.rss">Deciding on an Alternative Comment Syntax</source>
      </item>
      <item>
        <title>Deciding on an Alternative Comment Syntax</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="47" data-topic="275">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="//forum.rebol.info/user_avatar/forum.rebol.info/lkppo/40/239_2.png" class="avatar"> LkpPo:</div>
<blockquote>
<p>For example Oberon use # as an operator for inequality:</p>
</blockquote>
</aside>
<p>I dunno...it's actually kind of tempting to allow that one to be a comment too.  Why not do a clean sweep and have all four popular options?  It would be in the spirit of the <a href="https://forum.rebol.info/t/more-than-just-code-a-deep-lake/295">most freeform programming language ever invented</a>...</p>
<p>What I point out is that whether a character is going to blend in too much and look like code or not depends on what you're writing.  Some dialects would fit well with # as a comment character, if they don't use ISSUE!s, but use a lot of PATH!s and backslashes.  Others use a lot of ISSUE!s and no slashes.  Etc.</p>
<p>The one thing semicolon has going for it here here is simply not being used for much... kind of because it's a lousy character that's too close to colon.  But being unliked means it probably shouldn't have a monopoly on one of the most important jobs!</p>
          <p><a href="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/48">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/48</link>
        <pubDate>Sun, 30 Dec 2018 01:16:22 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-275-48</guid>
        <source url="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275.rss">Deciding on an Alternative Comment Syntax</source>
      </item>
      <item>
        <title>Deciding on an Alternative Comment Syntax</title>
        <dc:creator><![CDATA[LkpPo]]></dc:creator>
        <description><![CDATA[
            <p>For example Oberon use # as an operator for inequality:</p>
<pre><code>IF var1 # 5 THEN
    doSomething();
END</code></pre>
          <p><a href="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/47">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/47</link>
        <pubDate>Sat, 29 Dec 2018 10:52:48 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-275-47</guid>
        <source url="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275.rss">Deciding on an Alternative Comment Syntax</source>
      </item>
      <item>
        <title>Deciding on an Alternative Comment Syntax</title>
        <dc:creator><![CDATA[LkpPo]]></dc:creator>
        <description><![CDATA[
            <p>I'm on favour of Ada style because the French typography use the cadratin dash, equal with three dash long, for embedded comments in a sentence. It's used also for a comment at the end of a sentence. Really like in code. Sample :</p>
<pre><code>The weather is sunny --- gold day.

The weather is sunny --- good day for walking --- as we expected the last week.</code></pre>
          <p><a href="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/46">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/46</link>
        <pubDate>Sat, 29 Dec 2018 10:44:17 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-275-46</guid>
        <source url="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275.rss">Deciding on an Alternative Comment Syntax</source>
      </item>
      <item>
        <title>Deciding on an Alternative Comment Syntax</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>So now that I've had the option of <code>//</code> for a while, and getting to try it, I'm finding I'm not as happy with it as I thought I would be.</p>
<p>Don't get me wrong--I still hate semicolon.  But in light of the recent change to make <a href="https://github.com/metaeducation/ren-c/pull/901" rel="nofollow noopener">backslashes a generic escaping mechanism</a>, using slashes for comments is making the code look... <em>too "slashy"</em>.</p>
<p><strong>Basically, as frustrating as it is to say it, I think backslashes for escaping has reopened this issue.</strong></p>
<p><strong>UPDATE: Maybe not, <a href="https://forum.rebol.info/t/i-love-arbitrary-escaping-but-backslash-may-not-be-the-one/986">backslash may be the wrong choice, perhaps % is better</a>.  So possibly disregard this post, stay tuned.</strong></p>
<aside class="quote no-group" data-post="14" data-topic="275">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="//forum.rebol.info/letter_avatar_proxy/v3/letter/b/e480ec/40.png" class="avatar"> BrianOtto:</div>
<blockquote>
<p>I really like the <code>--</code> syntax (with a space required after it)</p>
</blockquote>
</aside>
<p>In examples I look at, this keeps coming up as being a clear winner.  Easy to type, you don't take your hands off the keyboard.  It's clean.</p>
<h2>After endorsing <code>--</code> initially, why did I back off?</h2>
<p>At first I felt it had to be the winning thought.  But then <a class="mention" href="/u/draegtun">@draegtun</a> expressed skepticism about the fact that <code>-</code> was a legal word character, and then some experiences noticing <code>--</code> occurs on command lines scared me off.</p>
<p>But Rebol will walk on the edge of uncomfortable decisions, if it means a better overall experience.  <code>a / b</code> and <code>a/ b</code> and <code>a /b</code> and <code>a/b</code> are all different.  That's how things roll, even if it makes people squirm at first.  It's the reality of experiencing the code in real life that shows why you'd make these odd choices.  So maybe <code>--foo</code> is a WORD! and <code>-- foo</code> is a comment, and that's not crazy.  Or maybe any word starting with more than one dash is illegal, I don't know yet...I'm just putting this back on the table.</p>
<p>One interesting thing that backslash opens up is that <code>\--</code> would be an escaped WORD!.  That feels more solid and "hearty" than <code>'--</code>, you won't mistakenly think that's a comment.</p>
<h2>MARKETING PITCH: Three Styles?</h2>
<blockquote>
<p>People have varying tastes in commenting styles, and it's something they are frequently passionate about.  The lexically rich space of Rebol makes it tough to prescribe any one form...depending on what you're writing, certain characters will stand out more or less.  So it allows for any of three popular choices from other languages:</p>
<hr>
<p><strong>Lisp/Assembly style</strong>: This is Rebol's classic style, supported by all versions, as well as Red.</p>
<pre><code>   your &lt;code&gt; "here" ; a semicolon comments to end of line
</code></pre>
<p>It's concise, takes only one character to type, and is one of the easiest keys to press on most keyboards.  Semicolons aren't used anywhere else in the language (besides inside string literals), so they invoke commenting behavior at any position they are used...<code>with or with;out spacing</code>.</p>
<p><strong>ADA/Haskell style</strong>: This is new to <code>[Beta/One]</code>.</p>
<pre><code>   your &lt;code&gt; "here" -- two dashes comment to end of line
</code></pre>
<p>This is a comfortable and clean notation.  It addresses the frequent practice of wanting to make the slight and easy-to-miss nature of semicolon by using <strong><code>;--</code></strong> which was a three character combination with a somewhat "messy" look.  However, hyphens are legal in identifiers in Rebol, so the convention of needing a space before the comment is enforced.  <em>(other rules...?)</em></p>
<p><strong>C++/JavaScript style</strong>: This is new to <code>[Beta/One]</code>.</p>
<pre><code>   your &lt;code&gt; "here" // double slashes comment to end of line
</code></pre>
<p>Rebol uses the slash character much like other languages might use a "dot", in PATH!.  Hence it makes a poor character to use in names of WORD!s.  That frees up <code>//</code> for its semi-ubiquitous use in commenting.  It has a visual cleanliness which <strong><code>;;</code></strong> does not.  Double slashes appear in URL! literals, hence it is necessary to have a space before them to get commenting behavior.</p>
<hr>
<p>Which one should you use?  For maximum compatibility in the Rebol space, choose semicolon.  But if that's not a concern, use the one you're most comfortable with.</p>
<p>Note also that dialects can look very different from code written to run in the evaluator, so one size may not fit all... which style you use could be dialect-specific (and even help visually cue which dialect you are in!)</p>
</blockquote>
<p>Sadly, this would mean DUMP would get pushed back to <code>??</code>.  But, worse things have happened.  I can live with it if it means comments will be better.</p>
<p>I don't have a firm feeling, but I just want to put the question back on the table, now that we've got all these backslashes showing up.</p>
          <p><a href="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/45">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/45</link>
        <pubDate>Sat, 29 Dec 2018 01:08:11 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-275-45</guid>
        <source url="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275.rss">Deciding on an Alternative Comment Syntax</source>
      </item>
      <item>
        <title>Deciding on an Alternative Comment Syntax</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group quote-modified" data-post="40" data-topic="275">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="//forum.rebol.info/user_avatar/forum.rebol.info/mark-hi/40/212_2.png" class="avatar"> Mark-hi:</div>
<blockquote>
<p>I really donâ€™t like repurposing a perfectly good REBOL word as comment syntax.</p>
</blockquote>
</aside>
<p>There is nothing "perfectly good" about <code>//</code> being a WORD!.  Making <code>/</code> a zero-element PATH! combined with not having / in words solves several major problems in the language. I'm not going to repeat the discussion... <em>again</em>.</p>
          <p><a href="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/44">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/44</link>
        <pubDate>Wed, 17 Oct 2018 15:37:18 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-275-44</guid>
        <source url="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275.rss">Deciding on an Alternative Comment Syntax</source>
      </item>
      <item>
        <title>Deciding on an Alternative Comment Syntax</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="42" data-topic="275">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="//forum.rebol.info/user_avatar/forum.rebol.info/iarnold/40/226_2.png" class="avatar"> iArnold:</div>
<blockquote>
<p>It is pleasing to see you have other code in a js-native versus a true function containing Rebol code.</p>
</blockquote>
</aside>
<p>I'm the one writing the codebase which mixes JS and Rebol in the same file.  And I can tell you that no, it is not a pleasing aspect to have the two styles--and I will not be the only one who feels this way, at such time as I am not the only one writing such code.</p>
<p>Until then I am the sole authority on the matter.</p>
          <p><a href="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/43">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/43</link>
        <pubDate>Wed, 17 Oct 2018 15:15:40 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-275-43</guid>
        <source url="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275.rss">Deciding on an Alternative Comment Syntax</source>
      </item>
      <item>
        <title>Deciding on an Alternative Comment Syntax</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>It is pleasing to see you have other code in a js-native versus a true function containing Rebol code.<br>
Also writing less JS code is better (almost state: in all cases).<br>
Rebol just is not C code and its comment is thus different. The semicolon is good as is, it finally has got a good place as a comment signal.</p>
          <p><a href="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/42">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/42</link>
        <pubDate>Wed, 17 Oct 2018 14:59:33 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-275-42</guid>
        <source url="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275.rss">Deciding on an Alternative Comment Syntax</source>
      </item>
      <item>
        <title>Deciding on an Alternative Comment Syntax</title>
        <dc:creator><![CDATA[Mark-hi]]></dc:creator>
        <description><![CDATA[
            <p>One thing that helps REBOL be readable and usable even though it combines infix and prefix operations is to make the words of the former be symbol-heavy if not solely symbolic (think + - *) and have the latter be (prefereably correct English) alphabetic-heavy if not solely alphabetic (think <strong>head reverse sort copy data</strong>).<br>
Even adding arrow-words to the language was welcome as a way to increase the space available for those symbolic operations that make sense to be infix.<br>
Having words (like MOD) be infix is wrong. Even AND and OR are inherently wrong, but they can be put up with, just like ? can be put up with as being prefix. A limited number of special cases is bearable. But there needs to be push back on going against this readability idea in general, and <em><strong>ESPECIALLY</strong></em> if it's being done just to forward a single-person agenda of allowing // for comments.<br>
I'm not even going to mention that this change is also extremely horrible because it destroys all slashes words, not just //.</p>
          <p><a href="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/41">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/41</link>
        <pubDate>Wed, 17 Oct 2018 12:39:57 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-275-41</guid>
        <source url="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275.rss">Deciding on an Alternative Comment Syntax</source>
      </item>
      <item>
        <title>Deciding on an Alternative Comment Syntax</title>
        <dc:creator><![CDATA[Mark-hi]]></dc:creator>
        <description><![CDATA[
            <p>Comments <em><strong>ARE</strong></em> language dependent.<br>
Languages <em><strong>NEED</strong></em> every chance they get to let you know which language you are staring at and/or typing in.<br>
I really don't like repurposing a perfectly good REBOL word as comment syntax.</p>
          <p><a href="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/40">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/40</link>
        <pubDate>Wed, 17 Oct 2018 12:28:42 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-275-40</guid>
        <source url="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275.rss">Deciding on an Alternative Comment Syntax</source>
      </item>
      <item>
        <title>Deciding on an Alternative Comment Syntax</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <blockquote>
<p>Well do not use double semicolons</p>
</blockquote>
<p>Not the point (though those are going to become slashes).</p>
<p>The main point is to look further in the file, where one is inside a JavaScript body of code and uses // because you <em>cannot</em> use semicolon, and then outside that string literal you are forced to use semicolon.</p>
<pre><code>foo: js-native [...] {
    some.javascript(code); // a comment inside
}

; now we are outside but have to change comment styles
bar: function [...] [
    some rebol code ;; and it looks bad and is frustrating to switch
]
</code></pre>
<p>There is a definite blindness to those who do not realize the unfitness of semicolon for this purpose.  I think you'll have to take the opinion of the person who is a graphic designer, over the force of one's own habit.</p>
          <p><a href="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/39">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/39</link>
        <pubDate>Tue, 16 Oct 2018 17:12:22 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-275-39</guid>
        <source url="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275.rss">Deciding on an Alternative Comment Syntax</source>
      </item>
      <item>
        <title>Deciding on an Alternative Comment Syntax</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>Well do not use double semicolons</p>
<pre><code>;   ----------------------------------------------------------------------
;  
;   File: %replpad.reb
;   Summary: "Read-Eval-Print-Loop implementation and JavaScript interop"
;   Project: "JavaScript REPLpad for Ren-C branch of Rebol 3"
;   Homepage: https://github.com/hostilefork/replpad-js/
;  
;   ----------------------------------------------------------------------
;  
;   Copyright (c) 2018 hostilefork.com
;  
;   See README.md and CREDITS.md for more information
;  
;   This program is free software: you can redistribute it and/or modify
;   it under the terms of the GNU Affero General Public License as
;   published by the Free Software Foundation, either version 3 of the
;   License, or (at your option) any later version.
;  
;   https://www.gnu.org/licenses/agpl-3.0.en.html
;  
;   This program is distributed in the hope that it will be useful,
;   ----------------------------------------------------------------------
</code></pre>
<p>looks fine to me.</p>
          <p><a href="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/38">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/38</link>
        <pubDate>Tue, 16 Oct 2018 17:08:25 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-275-38</guid>
        <source url="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275.rss">Deciding on an Alternative Comment Syntax</source>
      </item>
      <item>
        <title>Deciding on an Alternative Comment Syntax</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group quote-modified" data-post="33" data-topic="275">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="//forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>I think double-slash still has the edge, here. And of all the options examined, itâ€™s one from other languages that people will just <em>accept</em> . I still havenâ€™t done it yet, but I still think itâ€™s likely to be the best idea thatâ€™s going to come along, and so itâ€™s probably whatâ€™s going to happen.</p>
</blockquote>
</aside>
<p>So the time has finally come.  We've decided to enfix MOD and make it a synonym for MODULO, so you can use that where  <code>//</code> was before.  Hence instead of:</p>
<pre><code>value1 // value2
</code></pre>
<p>You now say:</p>
<pre><code>value1 mod value2
</code></pre>
<p>Which I would say looks more coherent to programmers and mathematicians alike.</p>
<p>I also feel that when you look at the philosophy put forth about <a href="https://forum.rebol.info/t/theory-of-symbols-and-repurposing-and/834">usage of these kinds of clumsy "barrier" looking symbols</a>, they really don't belong as plain code constructs.</p>
<p>Recent experience also has spoken to how unpleasant it is to be commenting a mixture of JavaScript and Rebol.  Comments are language-independent, it's just stuff you're saying.  So being able to annotate the file wherever you are with the same style of comment is ideal.  You get an idea of how ugly <code>;;</code> is by looking at the replpad demo at the moment:</p>
<aside class="onebox githubblob">
  <header class="source">
      <a href="https://github.com/hostilefork/replpad-js/blob/7c5478b8ad495b6d5a8e7526c916a3a23a2c2bfc/replpad.reb" target="_blank" rel="nofollow noopener">github.com</a>
  </header>
  <article class="onebox-body">
    <h4><a href="https://github.com/hostilefork/replpad-js/blob/7c5478b8ad495b6d5a8e7526c916a3a23a2c2bfc/replpad.reb" target="_blank" rel="nofollow noopener">hostilefork/replpad-js/blob/7c5478b8ad495b6d5a8e7526c916a3a23a2c2bfc/replpad.reb</a></h4>
<pre><code class="lang-reb">;;
;; File: %replpad.reb
;; Summary: "Read-Eval-Print-Loop implementation and JavaScript interop"
;; Project: "JavaScript REPLpad for Ren-C branch of Rebol 3"
;; Homepage: https://github.com/hostilefork/replpad-js/
;;
;;=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;=;;
;;
;; Copyright (c) 2018 hostilefork.com
;;
;; See README.md and CREDITS.md for more information
;;
;; This program is free software: you can redistribute it and/or modify
;; it under the terms of the GNU Affero General Public License as
;; published by the Free Software Foundation, either version 3 of the
;; License, or (at your option) any later version.
;;
;; https://www.gnu.org/licenses/agpl-3.0.en.html
;;
;; This program is distributed in the hope that it will be useful,
</code></pre>

  This file has been truncated. <a href="https://github.com/hostilefork/replpad-js/blob/7c5478b8ad495b6d5a8e7526c916a3a23a2c2bfc/replpad.reb" target="_blank" rel="nofollow noopener">show original</a>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p>So I want it known to people that this was by no means some kind of impulsive copy of C or C++ into Rebol.  <strong>This was a very long, and extremely deliberated change.</strong>  It has a basis in fact and practice, and I believe it will bear out benefits making it well worth it.  Hear me now and believe me later.</p>
<p><a href="https://github.com/metaeducation/ren-c/commit/d3e6f967663472af67ca5d3bba9f07fef6ba93a2" rel="nofollow noopener">And it is committed.</a>  Obviously it shouldn't be used in files that need to be LOAD-compatible with older Rebols or Red, and also one doesn't have to use it if one doesn't want to.  And so, let's try getting some experience with it.  If people find any particular weird issues with the scanner involving multiple slashes, let me know.</p>
          <p><a href="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/37">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/37</link>
        <pubDate>Tue, 16 Oct 2018 05:33:35 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-275-37</guid>
        <source url="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275.rss">Deciding on an Alternative Comment Syntax</source>
      </item>
      <item>
        <title>Deciding on an Alternative Comment Syntax</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>For me I like the semicolon. Nice and short, doesn't take much visual space, Every time I use one as a comment I think about all the semicolons I do not have to add to the source in languages where the semicolon is a line terminator and I feel a little happiness bubbling up.<br>
I do not mind additional methods of commenting being added, although some of the ones discussed here are unpleasant to look at imntho.</p>
          <p><a href="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/36">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/36</link>
        <pubDate>Wed, 09 May 2018 12:16:58 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-275-36</guid>
        <source url="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275.rss">Deciding on an Alternative Comment Syntax</source>
      </item>
      <item>
        <title>Deciding on an Alternative Comment Syntax</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="34" data-topic="275" data-full="true">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="//forum.rebol.info/user_avatar/forum.rebol.info/gchiu/40/22_2.png" class="avatar"> gchiu:</div>
<blockquote>
<p>But when you encap your script, all those comments get stripped out, and the script is compressed so does it really matter?</p>
</blockquote>
</aside>
<p>Well that's why I said that I was thinking about the comments that <em>don't</em> get stripped out, and if the "long tail" of things would suggest perhaps that learning to write your comments in Rebol syntax and <strong><code>== USING REBOL ==</code></strong> would be the longer-term concept.</p>
          <p><a href="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/35">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/35</link>
        <pubDate>Tue, 08 May 2018 01:42:22 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-275-35</guid>
        <source url="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275.rss">Deciding on an Alternative Comment Syntax</source>
      </item>
      <item>
        <title>Deciding on an Alternative Comment Syntax</title>
        <dc:creator><![CDATA[gchiu]]></dc:creator>
        <description><![CDATA[
            <p>But when you <em>encap</em> your script, all those comments get stripped out, and the script is compressed so does it really matter?</p>
          <p><a href="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/34">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/34</link>
        <pubDate>Mon, 07 May 2018 19:53:43 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-275-34</guid>
        <source url="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275.rss">Deciding on an Alternative Comment Syntax</source>
      </item>
      <item>
        <title>Deciding on an Alternative Comment Syntax</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>One argument against semicolon as comment character which has not been emphasized is that it looks a lot like a colon.  Imagine someone wanting to comment on what the contents of a variable later down on a page, for instance, and that looking like an assignment:</p>
<pre><code>foo: {bar}
...
print foo; {bar} 
</code></pre>
<p>Just another problem.  I still regularly tinker with the source to see how I feel, and if <code>//</code> is the answer.</p>
<p>So today I had a thought that hadn't come up, about double-bar.  It has some of the nice "unbroken" properties of <code>//</code>.  It might seem like a greater-emphasis version of the "barrier" notion of BAR!.</p>
<pre><code>something: function [ ][ || start
    foo: #bar || important
    collect [ || collect
        keep #foo || foo part not #baz
        keep foo || bar part
        keep #{DECAFBAD} || requisite binary
    ] || end collect
    ||no space required
] ||end
</code></pre>
<p>Comparing again with double-semi:</p>
<pre><code>something: function [ ][ ;; start
    foo: #bar ;; important
    collect [ ;; collect
        keep #foo ;; foo part not #baz
        keep foo ;; bar part
        keep #{DECAFBAD} ;; requisite binary
    ] ;; end collect
    ;;no space required
] ;;end
</code></pre>
<p>And then again with double slash:</p>
<pre><code>something: function [ ][ // start
    foo: #bar // important
    collect [ // collect
        keep #foo // foo part not #baz
        keep foo // bar part
        keep #{DECAFBAD} // requisite binary
    ] // end collect
    //no space required
] //end
</code></pre>
<p>I think double-slash still has the edge, here.  And of all the options examined, it's one from other languages that people will just <em>accept</em>.  I still haven't done it yet, but I still think it's likely to be the best idea that's going to come along, and so it's probably what's going to happen.</p>
<hr>
<p>I've also come to be thinking about the merits of using things like <strong>===</strong> (or, <strong>==</strong>, once retaken) as "live" comments, even using variadic syntax and normal Rebol words:</p>
<pre><code> == STARTUP ==

 config: load %/home/duck-detector/config

 == MAIN LOOP ==

 until [...]
</code></pre>
<p>We've even discussed if newline flags are something that can be exploited, you might be able to omit any tail signals and just say <strong>== MAIN LOOP</strong>, like in MarkDown:</p>
<pre><code>### THIS IS LEGAL MARKDOWN HEADER SYNTAX ###

### SO IS THIS
</code></pre>
<p>The downside of this is that your comments have runtime cost, and you're limited to Rebol syntax (which isn't <em>that</em> limiting, especially for writing in <a href="https://en.wikipedia.org/wiki/Headlinese" rel="nofollow noopener">headlinese</a>).   The upside of this is, they have a <em>runtime presence</em>, you might have a debug level at which they print as they go by...or get written to a log.  Or you could even ask the debugger to break there, by name.</p>
          <p><a href="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/33">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/33</link>
        <pubDate>Mon, 07 May 2018 05:23:58 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-275-33</guid>
        <source url="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275.rss">Deciding on an Alternative Comment Syntax</source>
      </item>
      <item>
        <title>Deciding on an Alternative Comment Syntax</title>
        <dc:creator><![CDATA[giuliolunati]]></dc:creator>
        <description><![CDATA[
            <p>I wonder if we can embed in REBOL header some switches driving the parse process -- I think at: 1) comment syntax 2) escape char in string; i.e. I'd like to write</p>
<p><code>REBOL [comments: "--" escape: "\"] "this \/ is a newline, this ^ is a caret" -- and this a comment</code></p>
          <p><a href="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/32">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/32</link>
        <pubDate>Wed, 07 Feb 2018 22:58:25 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-275-32</guid>
        <source url="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275.rss">Deciding on an Alternative Comment Syntax</source>
      </item>
      <item>
        <title>Deciding on an Alternative Comment Syntax</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group quote-modified" data-post="20" data-topic="275">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="//forum.rebol.info/letter_avatar_proxy/v3/letter/b/e480ec/40.png" class="avatar"> BrianOtto:</div>
<blockquote>
<p>That's too bad, I was really rooting for (<em>[<code>--</code> comments]</em>)</p>
</blockquote>
</aside>
<p>Don't despair too much, in the sense that by retaking <code>--</code> from decrement, it will be freed up for various styles of documentation or interjection.  The other day I thought it would be nice to document spans of tests with their issue numbers, e.g.:</p>
<pre><code>-- #1020 --
[x &gt; 1]
[x &lt; 2]
</code></pre>
<p>And as proposed in the comment usages, it looks like an okay separator even without being symmetrical:</p>
<pre><code>-- #1020
[x &gt; 1]
[x &lt; 2]
</code></pre>
<p>Since test is a dialect it could do that already.  But I think that it might become interesting when it's freed up in DO as well, for such custom purposes.  You'll have to use strings or otherwise to get arbitrary text, but I bet the applications will wind up being more interesting than for mundane math.</p>
<aside class="quote no-group quote-modified" data-post="26" data-topic="275">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="//forum.rebol.info/letter_avatar_proxy/v3/letter/b/e480ec/40.png" class="avatar"> BrianOtto:</div>
<blockquote>
<p>Do you like this? Maybe these characters are already used?</p>
<pre><code> keep #foo         &gt;&gt; foo part not #bar
</code></pre>
</blockquote>
</aside>
<p>As it happens, I actually do <em>kinda</em> like how that looks, and for some of the same reason I like //.  Looks like painted stripes on a raceway wall or such.</p>
<p>But... as I discussed in some of the <a href="https://forum.rebol.info/t/rethinking-the-console-prompt-to-or/489">out-of-band-console thinking</a>, we need to be wise about how a good asymmetric pairing like that is used in the language.  I'd call Rebol2/R3-Alpha's/Red's borrowing of bit-shifting from C an "unwise application", considering the domains Rebol is best suited for.</p>
<aside class="quote no-group" data-post="19" data-topic="275">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="//forum.rebol.info/letter_avatar_proxy/v3/letter/b/e480ec/40.png" class="avatar"> BrianOtto:</div>
<blockquote>
<p>I think it is very worthwhile to explore this, even if it does mean that we end up using //, like most everyone else, due to the constraints imposed by other parts of the language.</p>
</blockquote>
</aside>
<p>Many options have now been considered, looked at, framed and reframed... to the point I think there are only two choices:</p>
<ol>
<li>
<p>Leave it alone: accept <strong>;</strong> for better or worse, 'till death do us part <em>(though I have a feeling ; is going to outlive us)</em>.</p>
</li>
<li>
<p>Choose <code>//</code> as an alternate notation for comments.</p>
</li>
</ol>
<p>We've never actually gone as far as to try option 2, to see if there's some great unhappiness it causes or fatal flaw.  It will clearly have the flaw of not being backward-compatible, but we have quite a number of syntax changes  (allowing things like <strong>-&gt;</strong> or <strong>&gt;&gt;=</strong> as operators, for instance).  So backwards-LOAD-compatibility is not something that's going to be happening anyway, unless you constrain your usage to older patterns.  This would still be an option as no alternate purpose for ; is being proposed.</p>
<p><strong>I think it's time to try <code>//</code>, work out the details, and see how it feels.</strong></p>
<p>The way has been paved by the <a href="https://github.com/metaeducation/ren-c/commit/2f49974bdff81d3eb98ce6b47bfda592efb7a076" rel="nofollow noopener">ME commit</a>.  <em>(which was followed soon after with a <a href="https://github.com/metaeducation/ren-c/commit/477d3caa081a45dda73a7e42711b244fbd09e809" rel="nofollow noopener">MY commit</a>, once I figured out a trick to do it)</em></p>
<p>So after a bit of a settling period, we'll try it.</p>
          <p><a href="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/31">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/31</link>
        <pubDate>Mon, 29 Jan 2018 05:06:39 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-275-31</guid>
        <source url="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275.rss">Deciding on an Alternative Comment Syntax</source>
      </item>
      <item>
        <title>Deciding on an Alternative Comment Syntax</title>
        <dc:creator><![CDATA[gchiu]]></dc:creator>
        <description><![CDATA[
            <p>Not really, I just used a better google search term!</p>
          <p><a href="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/30">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/30</link>
        <pubDate>Fri, 26 Jan 2018 20:06:28 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-275-30</guid>
        <source url="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275.rss">Deciding on an Alternative Comment Syntax</source>
      </item>
      <item>
        <title>Deciding on an Alternative Comment Syntax</title>
        <dc:creator><![CDATA[swhite]]></dc:creator>
        <description><![CDATA[
            <p>YES!.  You have quite the memory.</p>
          <p><a href="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/29">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/29</link>
        <pubDate>Fri, 26 Jan 2018 14:15:53 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-275-29</guid>
        <source url="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275.rss">Deciding on an Alternative Comment Syntax</source>
      </item>
      <item>
        <title>Deciding on an Alternative Comment Syntax</title>
        <dc:creator><![CDATA[gchiu]]></dc:creator>
        <description><![CDATA[
            <p>You mean <a href="http://www.rebol.net/cgi-bin/r3blog.r?view=0017" rel="nofollow noopener">http://www.rebol.net/cgi-bin/r3blog.r?view=0017</a></p>
          <p><a href="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/28">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/28</link>
        <pubDate>Fri, 26 Jan 2018 07:53:53 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-275-28</guid>
        <source url="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275.rss">Deciding on an Alternative Comment Syntax</source>
      </item>
      <item>
        <title>Deciding on an Alternative Comment Syntax</title>
        <dc:creator><![CDATA[swhite]]></dc:creator>
        <description><![CDATA[
            <p>I have the impression from some long-forgotten source that Carl picked the semicolon for comments so he wouldn't have to remove his fingers from the keyboard.  I myself do like that feature.  However, I also would not mind if there were some comment character that was the same for all/most languages.  That way, a person could make up some little embedded syntax for some as yet-undefined reason and embed it in code using the comment character which would be the same for all languages.  Other than that I get along very well with the semicolon for comments.</p>
          <p><a href="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/27">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275/27</link>
        <pubDate>Fri, 26 Jan 2018 03:19:06 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-275-27</guid>
        <source url="https://forum.rebol.info/t/deciding-on-an-alternative-comment-syntax/275.rss">Deciding on an Alternative Comment Syntax</source>
      </item>
  </channel>
</rss>
